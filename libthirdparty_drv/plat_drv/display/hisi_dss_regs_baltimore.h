#ifndef HISI_DSS_REGS_BALTIMORE_H
#define HISI_DSS_REGS_BALTIMORE_H
#include "hisi_dss.h"

/* MACROS */
#define DSS_WIDTH(width)	((width) - 1)
#define DSS_HEIGHT(height)	((height) - 1)

#define BITS_PER_BYTE 8

enum dss_chn_module {
	MODULE_MIF_CHN,
	MODULE_AIF0_CHN,
	MODULE_AIF1_CHN,
	MODULE_MCTL_CHN_MUTEX,
	MODULE_MCTL_CHN_FLUSH_EN,
	MODULE_MCTL_CHN_OV_OEN,
	MODULE_MCTL_CHN_STARTY,
	MODULE_MCTL_CHN_MOD_DBG,
	MODULE_DMA,
	MODULE_DFC,
	MODULE_SCL,
	MODULE_SCL_LUT,
	MODULE_ARSR2P,
	MODULE_ARSR2P_LUT,
	MODULE_POST_CLIP,
	MODULE_PCSC,
	MODULE_CSC,
	MODULE_DEBUG,
	MODULE_VPP,
	MODULE_DMA_BUF,
	MODULE_ROT,
	MODULE_AFBCD,
	MODULE_AFBCE,
	MODULE_CHN_MAX,
};

enum dss_chn_cap {
	MODULE_CAP_ROT,
	MODULE_CAP_SCL,
	MODULE_CAP_CSC,
	MODULE_CAP_SHARPNESS_1D,
	MODULE_CAP_SHARPNESS_2D,
	MODULE_CAP_CE,
	MODULE_CAP_AFBCD,
	MODULE_CAP_AFBCE,
	MODULE_CAP_YUV_PLANAR,
	MODULE_CAP_YUV_SEMI_PLANAR,
	MODULE_CAP_YUV_PACKAGE,
	MODULE_CAP_MAX,
};

enum dss_ovl_module {
	MODULE_OVL_BASE,
	MODULE_MCTL_BASE,
	MODULE_OVL_MAX,
};

/*******************************************************************************
 **
 */

// Base
#define DSS_BASE	(0xE8400000U)
#define PERI_CRG_BASE	(0xFFF05000)
#define SCTRL_BASE	(0xFA89B000)
#define PCTRL_BASE	(0xFE02E000)
#define NOC_DSS_BASE	(0xE8680000)
#define MMBUF_CFG_BASE	(0xE8400000)
#define MIPI_DSI0_BASE	(DSS_BASE + DSS_MIPI_DSI0_OFFSET)
#define MIPI_DSI1_BASE	(DSS_BASE + DSS_MIPI_DSI1_OFFSET)
#define PMCTRL_BASE	(0xFFF01000)
#define MEDIA1_CRG_BASE	(0xE8601000)

/*******************************************************************************
 **
 */
// CRGPERI
#define PEREN0	(0x000)
#define PERDIS0	(0x004)
#define PERSTAT0	(0x00C)
#define PEREN2	(0x020)
#define PERDIS2	(0x024)
#define PERCLKEN2	(0x028)
#define PERSTAT2	(0x02C)
#define PEREN3	(0x030)
#define PERDIS3	(0x034)
#define PERCLKEN3	(0x038)
#define PERSTAT3	(0x03C)
#define PEREN5	(0x050)
#define PERDIS5	(0x054)
#define PERCLKEN5	(0x058)
#define PERSTAT5	(0x05C)
#define PERRSTDIS0	(0x064)
#define PERRSTEN2	(0x078)
#define PERRSTDIS2	(0x07C)
#define PERRSTEN3	(0x084)
#define PERRSTDIS3	(0x088)
#define PERRSTSTAT3	(0x08c)
#define PERRSTEN4	(0x090)
#define PERRSTDIS4	(0x094)
#define PERRSTSTAT4	(0x098)
#define CLKDIV3	(0x0B4)
#define CLKDIV5	(0x0BC)
#define CLKDIV10	(0x0D0)
#define CLKDIV18	(0x0F0)
#define CLKDIV20	(0x0F8)
#define ISOEN	(0x144)
#define ISODIS	(0x148)
#define ISOSTAT	(0x14c)
#define PERPWREN	(0x150)
#define PERPWRDIS	(0x154)
#define PERPWRSTAT 	(0x158)
#define PERI_AUTODIV8	(0x380)
#define PERI_AUTODIV9	(0x384)
#define PERI_AUTODIV10	(0x388)

/*******************************************************************************
 **
 */
// CPU_PDP_INTS		0x224
// CPU_PDP_INT_MSK	0x228
#define BIT_DSS_WB_ERR_INTS	BIT(31)
#define BIT_DSS_GLB_INTS	BIT(30)
#define BIT_MMU_IRPT_S	BIT(29)
#define BIT_MMU_IRPT_NS	BIT(28)
#define BIT_DBG_MCTL_INTS	BIT(27)
#define BIT_DBG_WCH1_INTS	BIT(26)
#define BIT_DBG_WCH0_INTS	BIT(25)
#define BIT_DBG_RCH7_INTS	BIT(24)
#define BIT_DBG_RCH6_INTS	BIT(23)
#define BIT_DBG_RCH5_INTS	BIT(22)
#define BIT_DBG_RCH4_INTS	BIT(21)
#define BIT_DBG_RCH3_INTS	BIT(20)
#define BIT_DBG_RCH2_INTS	BIT(19)
#define BIT_DBG_RCH1_INTS	BIT(18)
#define BIT_DBG_RCH0_INTS	BIT(17)
#define BIT_ITF0_INTS	BIT(16)
#define BIT_DPP_INTS	BIT(15)
#define BIT_CMDLIST13	BIT(14)
#define BIT_CMDLIST12	BIT(13)
#define BIT_CMDLIST11	BIT(12)
#define BIT_CMDLIST10	BIT(11)
#define BIT_CMDLIST9	BIT(10)
#define BIT_CMDLIST8	BIT(9)
#define BIT_CMDLIST7	BIT(8)
#define BIT_CMDLIST6	BIT(7)
#define BIT_CMDLIST5	BIT(6)
#define BIT_CMDLIST4	BIT(5)
#define BIT_CMDLIST3	BIT(4)
#define BIT_CMDLIST2	BIT(3)
#define BIT_CMDLIST1	BIT(2)
#define BIT_CMDLIST0	BIT(1)

// CPU_ITF0_INTS		0x7D248
// CPU_ITF0_INT_MSK	0x7D24C
// CPU_ITF1_INTS		0x7E248
// CPU_ITF1_INT_MSK	0x7E248
#define BIT_VACTIVE_CNT	BIT(14)
#define BIT_DSI_TE_TRI	BIT(13)
#define BIT_LCD_TE0_PIN	BIT(12)
#define BIT_LCD_TE1_PIN	BIT(11)
#define BIT_VACTIVE1_END	BIT(10)
#define BIT_VACTIVE1_START	BIT(9)
#define BIT_VACTIVE0_END	BIT(8)
#define BIT_VACTIVE0_START	BIT(7)
#define BIT_VFRONTPORCH	BIT(6)
#define BIT_VBACKPORCH	BIT(5)
#define BIT_VSYNC	BIT(4)
#define BIT_VFRONTPORCH_END	BIT(3)
#define BIT_LDI_UNFLOW	BIT(2)
#define BIT_FRM_END	BIT(1)
#define BIT_FRM_START	BIT(0)

/*******************************************************************************
 ** MODULE BASE ADDRESS
 */
// DSI0 DSI1
#define DSS_MIPI_DSI0_OFFSET	(0x00001000)
#define DSS_MIPI_DSI1_OFFSET	(0x00001400)
// GLB0
#define DSS_GLB0_OFFSET	(0x12000)
// debug
#define DSS_DBG_OFFSET	(0x11000)

// CMDLIST
#define DSS_CMDLIST_OFFSET	(0x2000)

//SMMU
#define DSS_SMMU_OFFSET	(0x80000)

// AIF
#define DSS_VBIF0_AIF	(0x7000)
#define DSS_VBIF1_AIF	(0x9000)

// MIF
#define DSS_MIF_OFFSET	(0xA000)

// MCTL SYS
#define DSS_MCTRL_SYS_OFFSET	(0x10000)

// MCTL MUTEX
#define DSS_MCTRL_CTL0_OFFSET	(0x10800)
#define DSS_MCTRL_CTL1_OFFSET	(0x10900)
#define DSS_MCTRL_CTL2_OFFSET	(0x10A00)
#define DSS_MCTRL_CTL3_OFFSET	(0x10B00)
#define DSS_MCTRL_CTL4_OFFSET	(0x10C00)
#define DSS_MCTRL_CTL5_OFFSET	(0x10D00)

// RCH_V
#define DSS_RCH_VG0_DMA_OFFSET	(0x20000)
#define DSS_RCH_VG0_DFC_OFFSET	(0x20100)
#define DSS_RCH_VG0_SCL_OFFSET	(0x20200)
#define DSS_RCH_VG0_ARSR_OFFSET	(0x20300)
#define DSS_RCH_VG0_PCSC_OFFSET	(0x20400)
#define DSS_RCH_VG0_POST_CLIP_OFFSET	(0x20480)
#define DSS_RCH_VG0_CSC_OFFSET	(0x20500)
#define DSS_RCH_VG0_DEBUG_OFFSET	(0x20600)
#define DSS_RCH_VG0_VPP_OFFSET	(0x20700)
#define DSS_RCH_VG0_DMA_BUF_OFFSET	(0x20800)
#define DSS_RCH_VG0_AFBCD_OFFSET	(0x20900)
#define DSS_RCH_VG0_REG_DEFAULT_OFFSET	(0x20A00)
#define DSS_RCH_VG0_SCL_LUT_OFFSET	(0x21000)
#define DSS_RCH_VG0_ARSR_LUT_OFFSET	(0x25000)

#define DSS_RCH_VG1_DMA_OFFSET	(0x28000)
#define DSS_RCH_VG1_DFC_OFFSET	(0x28100)
#define DSS_RCH_VG1_SCL_OFFSET	(0x28200)
#define DSS_RCH_VG1_POST_CLIP_OFFSET	(0x28480)
#define DSS_RCH_VG1_CSC_OFFSET	(0x28500)
#define DSS_RCH_VG1_DEBUG_OFFSET	(0x28600)
#define DSS_RCH_VG1_VPP_OFFSET	(0x28700)
#define DSS_RCH_VG1_DMA_BUF_OFFSET	(0x28800)
#define DSS_RCH_VG1_AFBCD_OFFSET	(0x28900)
#define DSS_RCH_VG1_REG_DEFAULT_OFFSET	(0x28A00)
#define DSS_RCH_VG1_SCL_LUT_OFFSET	(0x29000)

#define DSS_RCH_VG2_DMA_OFFSET	(0x30000)
#define DSS_RCH_VG2_DFC_OFFSET	(0x30100)
#define DSS_RCH_VG2_SCL_OFFSET	(0x30200)
#define DSS_RCH_VG2_POST_CLIP_OFFSET	(0x30480)
#define DSS_RCH_VG2_CSC_OFFSET	(0x30500)
#define DSS_RCH_VG2_DEBUG_OFFSET	(0x30600)
#define DSS_RCH_VG2_VPP_OFFSET	(0x30700)
#define DSS_RCH_VG2_DMA_BUF_OFFSET	(0x30800)
#define DSS_RCH_VG2_AFBCD_OFFSET	(0x30900)
#define DSS_RCH_VG2_REG_DEFAULT_OFFSET	(0x30A00)
#define DSS_RCH_VG2_SCL_LUT_OFFSET	(0x31000)

// RCH_G
#define DSS_RCH_G0_DMA_OFFSET	(0x38000)
#define DSS_RCH_G0_DFC_OFFSET	(0x38100)
#define DSS_RCH_G0_SCL_OFFSET	(0x38200)
#define DSS_RCH_G0_POST_CLIP_OFFSET 		(0x38480)
#define DSS_RCH_G0_CSC_OFFSET	(0x38500)
#define DSS_RCH_G0_DEBUG_OFFSET	(0x38600)
#define DSS_RCH_G0_DMA_BUF_OFFSET	(0x38800)
#define DSS_RCH_G0_AFBCD_OFFSET	(0x38900)
#define DSS_RCH_G0_REG_DEFAULT_OFFSET	(0x38A00)

#define DSS_RCH_G1_DMA_OFFSET	(0x40000)
#define DSS_RCH_G1_DFC_OFFSET	(0x40100)
#define DSS_RCH_G1_SCL_OFFSET	(0x40200)
#define DSS_RCH_G1_POST_CLIP_OFFSET	(0x40480)
#define DSS_RCH_G1_CSC_OFFSET	(0x40500)
#define DSS_RCH_G1_DEBUG_OFFSET	(0x40600)
#define DSS_RCH_G1_DMA_BUF_OFFSET	(0x40800)
#define DSS_RCH_G1_AFBCD_OFFSET	(0x40900)
#define DSS_RCH_G1_REG_DEFAULT_OFFSET	(0x40A00)

// RCH_D
#define DSS_RCH_D2_DMA_OFFSET	(0x50000)
#define DSS_RCH_D2_DFC_OFFSET	(0x50100)
#define DSS_RCH_D2_CSC_OFFSET	(0x50500)
#define DSS_RCH_D2_DEBUG_OFFSET	(0x50600)
#define DSS_RCH_D2_DMA_BUF_OFFSET	(0x50800)
#define DSS_RCH_D2_AFBCD_OFFSET	(0x50900)

#define DSS_RCH_D3_DMA_OFFSET	(0x51000)
#define DSS_RCH_D3_DFC_OFFSET	(0x51100)
#define DSS_RCH_D3_CSC_OFFSET	(0x51500)
#define DSS_RCH_D3_DEBUG_OFFSET	(0x51600)
#define DSS_RCH_D3_DMA_BUF_OFFSET	(0x51800)
#define DSS_RCH_D3_AFBCD_OFFSET	(0x51900)

#define DSS_RCH_D0_DMA_OFFSET	(0x52000)
#define DSS_RCH_D0_DFC_OFFSET	(0x52100)
#define DSS_RCH_D0_CSC_OFFSET	(0x52500)
#define DSS_RCH_D0_DEBUG_OFFSET	(0x52600)
#define DSS_RCH_D0_DMA_BUF_OFFSET	(0x52800)
#define DSS_RCH_D0_AFBCD_OFFSET	(0x52900)

#define DSS_RCH_D1_DMA_OFFSET	(0x53000)
#define DSS_RCH_D1_DFC_OFFSET	(0x53100)
#define DSS_RCH_D1_CSC_OFFSET	(0x53500)
#define DSS_RCH_D1_DEBUG_OFFSET	(0x53600)
#define DSS_RCH_D1_DMA_BUF_OFFSET	(0x53800)
#define DSS_RCH_D1_AFBCD_OFFSET	(0x53900)

// WCH
#define DSS_WCH0_DMA_OFFSET	(0x5A000)
#define DSS_WCH0_DFC_OFFSET	(0x5A100)
#define DSS_WCH0_CSC_OFFSET	(0x5A500)
#define DSS_WCH0_ROT_OFFSET	(0x5A530)
#define DSS_WCH0_DEBUG_OFFSET	(0x5A600)
#define DSS_WCH0_DMA_BUFFER_OFFSET	(0x5A800)
#define DSS_WCH0_AFBCE_OFFSET	(0x5A900)

#define DSS_WCH1_DMA_OFFSET	(0x5C000)
#define DSS_WCH1_DFC_OFFSET	(0x5C100)
#define DSS_WCH1_CSC_OFFSET	(0x5C500)
#define DSS_WCH1_ROT_OFFSET	(0x5C530)
#define DSS_WCH1_DEBUG_OFFSET	(0x5C600)
#define DSS_WCH1_DMA_BUFFER_OFFSET	(0x5C800)
#define DSS_WCH1_AFBCE_OFFSET	(0x5C900)

#define DSS_WCH2_DMA_OFFSET	(0x5E000)
#define DSS_WCH2_DFC_OFFSET	(0x5E100)
#define DSS_WCH2_CSC_OFFSET	(0x5E500)
#define DSS_WCH2_ROT_OFFSET	(0x5E500)
#define DSS_WCH2_DEBUG_OFFSET	(0x5E600)
#define DSS_WCH2_DMA_BUFFER_OFFSET	(0x5E800)
#define DSS_WCH2_AFBCE_OFFSET	(0x5E900)


// OVL
#define DSS_OVL0_OFFSET	(0x60000)
#define DSS_OVL1_OFFSET	(0x60400)
#define DSS_OVL2_OFFSET	(0x60800)
#define DSS_OVL3_OFFSET	(0x60C00)

#define DSS_DPP_SBL_OFFSET	(0x7C000)
#define DSS_LDI0_OFFSET	(0x7D000)
#define DSS_IFBC_OFFSET	(0x7D800)
#define DSS_DSC_OFFSET	(0x7DC00)
#define DSS_LDI1_OFFSET	(0xBD000)
#define DSS_LDI_DP_OFFSET	(0x7E000)

#define DSS_PIPE_SW_DSI0_OFFSET	(0xBD400)
#define DSS_PIPE_SW_DSI1_OFFSET	(0xBD440)
#define DSS_PIPE_SW_DP_OFFSET	(0xBD480)
#define DSS_PIPE_SW_WB_OFFSET	(0xBD4C0)


/*******************************************************************************
** GLB
*/
#define GLB_DSS_TAG	 (DSS_GLB0_OFFSET + 0x0000)
// APB
#define GLB_APB_CTL	 (DSS_GLB0_OFFSET + 0x0004)
// RST
#define GLB_DSS_AXI_RST_EN	(DSS_GLB0_OFFSET + 0x0118)
#define GLB_DSS_APB_RST_EN	(DSS_GLB0_OFFSET + 0x011C)
#define GLB_DSS_CORE_RST_EN	(DSS_GLB0_OFFSET + 0x0120)
#define GLB_PXL0_DIV2_RST_EN	(DSS_GLB0_OFFSET + 0x0124)
#define GLB_PXL0_DIV4_RST_EN	(DSS_GLB0_OFFSET + 0x0128)
#define GLB_PXL0_RST_EN	(DSS_GLB0_OFFSET + 0x012C)
#define GLB_PXL0_DSI_RST_EN	(DSS_GLB0_OFFSET + 0x0130)
#define GLB_DSS_PXL1_RST_EN	(DSS_GLB0_OFFSET + 0x0134)
#define GLB_MM_AXI_CLK_RST_EN	(DSS_GLB0_OFFSET + 0x0138)
#define GLB_AFBCD0_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0140)
#define GLB_AFBCD1_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0144)
#define GLB_AFBCD2_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0148)
#define GLB_AFBCD3_IP_RST_EN	(DSS_GLB0_OFFSET + 0x014C)
#define GLB_AFBCD4_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0150)
#define GLB_AFBCD5_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0154)
#define GLB_AFBCD6_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0158)
#define GLB_AFBCD7_IP_RST_EN	(DSS_GLB0_OFFSET + 0x015C)
#define GLB_AFBCE0_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0160)
#define GLB_AFBCE1_IP_RST_EN	(DSS_GLB0_OFFSET + 0x0164)

// MCU CPU first class interrupts
#define GLB_MCU_PDP_INTS	(DSS_GLB0_OFFSET + 0x20C)
#define GLB_MCU_PDP_INT_MSK	(DSS_GLB0_OFFSET + 0x210)
#define GLB_MCU_SDP_INTS	(DSS_GLB0_OFFSET + 0x214)
#define GLB_MCU_SDP_INT_MSK	(DSS_GLB0_OFFSET + 0x218)
#define GLB_MCU_OFF_INTS	(DSS_GLB0_OFFSET + 0x21C)
#define GLB_MCU_OFF_INT_MSK	(DSS_GLB0_OFFSET + 0x220)
#define GLB_MCU_OFF_CAM_INTS	(DSS_GLB0_OFFSET + 0x2B4)
#define GLB_MCU_OFF_CAM_INT_MSK	(DSS_GLB0_OFFSET + 0x2B8)
#define GLB_CPU_PDP_INTS	(DSS_GLB0_OFFSET + 0x224)
#define GLB_CPU_PDP_INT_MSK	(DSS_GLB0_OFFSET + 0x228)
#define GLB_CPU_SDP_INTS	(DSS_GLB0_OFFSET + 0x22C)
#define GLB_CPU_SDP_INT_MSK	(DSS_GLB0_OFFSET + 0x230)
#define GLB_CPU_OFF_INTS	(DSS_GLB0_OFFSET + 0x234)
#define GLB_CPU_OFF_INT_MSK	(DSS_GLB0_OFFSET + 0x238)
#define GLB_CPU_DP_INTS	(DSS_GLB0_OFFSET + 0x244)
#define GLB_CPU_DP_INT_MSK	(DSS_GLB0_OFFSET + 0x248)
#define GLB_CPU_OFF_CAM_INTS	(DSS_GLB0_OFFSET + 0x2AC)
#define GLB_CPU_OFF_CAM_INT_MSK	(DSS_GLB0_OFFSET + 0x2B0)

/*******************************************************************************
 ** CMDLIST
 */
// DSS_CMD_OFFSET +  CMDLIST_CH0_* + 0x40 * i
#define CMDLIST_CH0_PENDING_CLR	(0x0000)
#define CMDLIST_CH0_CTRL	(0x0004)
#define CMDLIST_CH0_STATUS	(0x0008)
#define CMDLIST_CH0_STAAD	(0x000C)
#define CMDLIST_CH0_CURAD	(0x0010)
#define CMDLIST_CH0_INTE	(0x0014)
#define CMDLIST_CH0_INTC	(0x0018)
#define CMDLIST_CH0_INTS	(0x001C)
#define CMDLIST_CH0_SCENE	(0x0020)
#define CMDLIST_CH0_DBG	(0x0028)

#define CMDLIST_DBG	(0x0700)
#define CMDLIST_BUF_DBG_EN	(0x0704)
#define CMDLIST_BUF_DBG_CNT_CLR	(0x0708)
#define CMDLIST_BUF_DBG_CNT	(0x070C)
#define CMDLIST_TIMEOUT_TH	(0x0710)
#define CMDLIST_START	(0x0714)
#define CMDLIST_ADDR_MASK_EN	(0x0718)
#define CMDLIST_ADDR_MASK_DIS	(0x071C)
#define CMDLIST_ADDR_MASK_STATUS	(0x0720)
#define CMDLIST_TASK_CONTINUE	(0x0724)
#define CMDLIST_TASK_STATUS	(0x0728)
#define CMDLIST_CTRL	(0x072C)
#define CMDLIST_SECU	(0x0730)
#define CMDLIST_INTS	(0x0734)
#define CMDLIST_SWRST	(0x0738)
#define CMD_MEM_CTRL	(0x073C)
#define CMD_CLK_SEL	(0x0740)
#define CMD_CLK_EN	(0x0744)

#define HISI_DSS_MIN_ROT_AFBCE_BLOCK_SIZE (256)
#define HISI_DSS_MAX_ROT_AFBCE_BLOCK_SIZE (480)

// cmdlist channel interrupt status  0x1c
#define BIT_CMDLIST_CH_TASKDONE_INTS	    BIT(7)
#define BIT_CMDLIST_CH_TIMEOUT_INTS	    BIT(6)
#define BIT_CMDLIST_CH_BADCMD_INTS	    BIT(5)
#define BIT_CMDLIST_CH_START_INTS	           BIT(4)
#define BIT_CMDLIST_CH_PENDING_INTS	    BIT(3)
#define BIT_CMDLIST_CH_AXIERR_INTS	    BIT(2)
#define BIT_CMDLIST_CH_ALLDONE_INTS	    BIT(1)
#define BIT_CMDLIST_CH_ONEDONE_INTS	    BIT(0)
// cmdlist interrupt status 0x734
#define BIT_CMDLIST_CH15_INTS	BIT(15)
#define BIT_CMDLIST_CH14_INTS	BIT(14)
#define BIT_CMDLIST_CH13_INTS	BIT(13)
#define BIT_CMDLIST_CH12_INTS	BIT(12)
#define BIT_CMDLIST_CH11_INTS	BIT(11)
#define BIT_CMDLIST_CH10_INTS	BIT(10)
#define BIT_CMDLIST_CH9_INTS	BIT(9)
#define BIT_CMDLIST_CH8_INTS	BIT(8)
#define BIT_CMDLIST_CH7_INTS	BIT(7)
#define BIT_CMDLIST_CH6_INTS	BIT(6)
#define BIT_CMDLIST_CH5_INTS	BIT(5)
#define BIT_CMDLIST_CH4_INTS	BIT(4)
#define BIT_CMDLIST_CH3_INTS	BIT(3)
#define BIT_CMDLIST_CH2_INTS	BIT(2)
#define BIT_CMDLIST_CH1_INTS	BIT(1)
#define BIT_CMDLIST_CH0_INTS	BIT(0)

/*******************************************************************************
** AIF
*/
#define AIF0_CH0_OFFSET	(DSS_VBIF0_AIF + 0x00)
#define AIF0_CH1_OFFSET	(DSS_VBIF0_AIF + 0x20)
#define AIF0_CH2_OFFSET	(DSS_VBIF0_AIF + 0x40)
#define AIF0_CH3_OFFSET	(DSS_VBIF0_AIF + 0x60)
#define AIF0_CH4_OFFSET	(DSS_VBIF0_AIF + 0x80)
#define AIF0_CH5_OFFSET	(DSS_VBIF0_AIF + 0xA0)
#define AIF0_CH6_OFFSET	(DSS_VBIF0_AIF + 0xC0)
#define AIF0_CH7_OFFSET	(DSS_VBIF0_AIF + 0xE0)
#define AIF0_CH8_OFFSET	(DSS_VBIF0_AIF + 0x100)
#define AIF0_CH9_OFFSET	(DSS_VBIF0_AIF + 0x120)
#define AIF0_CH10_OFFSET	(DSS_VBIF0_AIF + 0x140)
#define AIF0_CH11_OFFSET	(DSS_VBIF0_AIF + 0x160)
#define AIF0_CH12_OFFSET	(DSS_VBIF0_AIF + 0x180)

#define AIF1_CH0_OFFSET	(DSS_VBIF1_AIF + 0x00)
#define AIF1_CH1_OFFSET	(DSS_VBIF1_AIF + 0x20)
#define AIF1_CH2_OFFSET	(DSS_VBIF1_AIF + 0x40)
#define AIF1_CH3_OFFSET	(DSS_VBIF1_AIF + 0x60)
#define AIF1_CH4_OFFSET	(DSS_VBIF1_AIF + 0x80)
#define AIF1_CH5_OFFSET	(DSS_VBIF1_AIF + 0xA0)
#define AIF1_CH6_OFFSET	(DSS_VBIF1_AIF + 0xC0)
#define AIF1_CH7_OFFSET	(DSS_VBIF1_AIF + 0xE0)
#define AIF1_CH8_OFFSET	(DSS_VBIF1_AIF + 0x100)
#define AIF1_CH9_OFFSET	(DSS_VBIF1_AIF + 0x120)
#define AIF1_CH10_OFFSET	(DSS_VBIF1_AIF + 0x140)
#define AIF1_CH11_OFFSET	(DSS_VBIF1_AIF + 0x160)
#define AIF1_CH12_OFFSET	(DSS_VBIF1_AIF + 0x180)

/*******************************************************************************
 ** MIF
 */
#define MIF_ENABLE	(0x0000)
#define MIF_MEM_CTRL	(0x0004)

#define MIF_CTRL0	(0x000)
#define MIF_CTRL1	(0x004)
#define MIF_CTRL2	(0x008)
#define MIF_CTRL3	(0x00C)
#define MIF_CTRL4	(0x010)
#define MIF_CTRL5	(0x014)
#define REG_DEFAULT	(0x0500)
#define MIF_SHADOW_READ	(0x0504)
#define MIF_CLK_CTL	(0x0508)
// 0x0160+16*k
#define MIF_STAT0	(0x0600)
// 0x0164+16*k
#define MIF_STAT1	(0x0604)
// 0x0168+16*k
#define MIF_STAT2	(0x0608)

#define MIF_CTRL_OFFSET	(0x20)
#define MIF_CH0_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*1)
#define MIF_CH1_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*2)
#define MIF_CH2_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*3)
#define MIF_CH3_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*4)
#define MIF_CH4_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*5)
#define MIF_CH5_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*6)
#define MIF_CH6_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*7)
#define MIF_CH7_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*8)
#define MIF_CH8_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*9)
#define MIF_CH9_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*10)
#define MIF_CH10_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*11)
#define MIF_CH11_OFFSET	(DSS_MIF_OFFSET + MIF_CTRL_OFFSET*12)
#define MIF_CTRL_NUM	(12)


#define LITTLE_LAYER_BUF_SIZE	(256 * 1024)
#define MIF_STRIDE_UNIT	(4 * 1024)

typedef struct dss_mif {
	uint32_t mif_ctrl1;
	uint32_t mif_ctrl2;
	uint32_t mif_ctrl3;
	uint32_t mif_ctrl4;
	uint32_t mif_ctrl5;
} dss_mif_t;

/*******************************************************************************
 ** SMMU
 */
#define SMMU_SCR	(0x0000)
#define SMMU_MEMCTRL	(0x0004)
#define SMMU_LP_CTRL	(0x0008)
#define SMMU_PRESS_REMAP	(0x000C)
#define SMMU_INTMASK_NS	(0x0010)
#define SMMU_INTRAW_NS	(0x0014)
#define SMMU_INTSTAT_NS	(0x0018)
#define SMMU_INTCLR_NS	(0x001C)
// (0x0020+n*0x4)
#define SMMU_SMRx_NS	(0x0020)
#define SMMU_RLD_EN0_NS	(0x01F0)
#define SMMU_RLD_EN1_NS	(0x01F4)
#define SMMU_RLD_EN2_NS	(0x01F8)
#define SMMU_CB_SCTRL	(0x0200)
#define SMMU_CB_TTBR0	(0x0204)
#define SMMU_CB_TTBR1	(0x0208)
#define SMMU_CB_TTBCR	(0x020C)
#define SMMU_OFFSET_ADDR_NS	(0x0210)
#define SMMU_SCACHEI_ALL	(0x0214)
#define SMMU_SCACHEI_L1	(0x0218)
#define SMMU_SCACHEI_L2L3	(0x021C)
#define SMMU_FAMA_CTRL0	(0x0220)
#define SMMU_FAMA_CTRL1	(0x0224)
#define SMMU_ADDR_MSB	(0x0300)
#define SMMU_ERR_RDADDR	(0x0304)
#define SMMU_ERR_WRADDR	(0x0308)
#define SMMU_FAULT_ADDR_TCU	(0x0310)
#define SMMU_FAULT_ID_TCU	(0x0314)
// (0x0320+n*0x10)
#define SMMU_FAULT_ADDR_TBUx	(0x0320)
#define SMMU_FAULT_ID_TBUx	(0x0324)
#define SMMU_FAULT_INFOx	(0x0328)
#define SMMU_DBGRPTR_TLB	(0x0380)
#define SMMU_DBGRDATA_TLB	(0x0380)
#define SMMU_DBGRDATA0_CACHE	(0x038C)
#define SMMU_DBGRDATA1_CACHE	(0x0390)
#define SMMU_DBGAXI_CTRL	(0x0394)
#define SMMU_OVA_ADDR	(0x0398)
#define SMMU_OPA_ADDR	(0x039C)
#define SMMU_OVA_CTRL	(0x03A0)
#define SMMU_OPREF_ADDR	(0x03A4)
#define SMMU_OPREF_CTRL	(0x03A8)
#define SMMU_OPREF_CNT	(0x03AC)
// (0x0500+n*0x4)
#define SMMU_SMRx_S	(0x0500)
#define SMMU_RLD_EN0_S	(0x06F0)
#define SMMU_RLD_EN1_S	(0x06F4)
#define SMMU_RLD_EN2_S	(0x06F8)
#define SMMU_INTMAS_S	(0x0700)
#define SMMU_INTRAW_S	(0x0704)
#define SMMU_INTSTAT_S	(0x0708)
#define SMMU_INTCLR_S	(0x070C)
#define SMMU_SCR_S	(0x0710)
#define SMMU_SCB_SCTRL	(0x0714)
#define SMMU_SCB_TTBR	(0x0718)
#define SMMU_SCB_TTBCR	(0x071C)
#define SMMU_OFFSET_ADDR_S	(0x0720)
#define SMMU_SMRx_P	(0x10000)
#define SMMU_RLD_EN0_P	(0x101F0)
#define SMMU_RLD_EN1_P	(0x101F4)
#define SMMU_RLD_EN2_P	(0x101F8)
#define SMMU_INTMAS_P	(0x10200)
#define SMMU_INTRAW_P	(0x10204)
#define SMMU_INTSTAT_P	(0x10208)
#define SMMU_INTCLR_P	(0x1020C)
#define SMMU_SCR_P	(0x10210)
#define SMMU_PCB_SCTRL	(0x10214)
#define SMMU_PCB_TTBR	(0x10218)
#define SMMU_PCB_TTBCR	(0x1021C)
#define SMMU_OFFSET_ADDR_P	(0x10220)

/*******************************************************************************
 ** RDMA
 */

// DMA_CMN
#define DMA_OFT_X0	(0x0000)
#define DMA_OFT_Y0	(0x0004)
#define DMA_OFT_X1	(0x0008)
#define DMA_OFT_Y1	(0x000C)
#define DMA_MASK0	(0x0010)
#define DMA_MASK1	(0x0014)
#define DMA_STRETCH_SIZE_VRT	(0x0018)
#define DMA_CTRL	(0x001C)
#define DMA_TILE_SCRAM	(0x0020)

#define DMA_PULSE	(0x0028)
#define DMA_CORE_GT	(0x002C)
#define RWCH_CFG0	(0x0030)

// WDMA_CMN
#define WDMA_DMA_SW_MASK_EN	(0x004C)
#define WDMA_DMA_START_MASK0	(0x0050)
#define WDMA_DMA_END_MASK0	(0x0054)
#define WDMA_DMA_START_MASK1	(0x0058)
#define WDMA_DMA_END_MASK1	(0x005C)

// Y
#define DMA_DATA_ADDR0	(0x0060)
#define DMA_STRIDE0	(0x0064)
#define DMA_STRETCH_STRIDE0	(0x0068)
#define DMA_DATA_NUM0	(0x006C)

#define DMA_TEST0	(0x0070)
#define DMA_TEST1	(0x0074)
#define DMA_TEST3	(0x0078)
#define DMA_TEST4	(0x007C)
#define DMA_STATUS_Y	(0x0080)

// U
#define DMA_DATA_ADDR1	(0x0084)
#define DMA_STRIDE1	(0x0088)
#define DMA_STRETCH_STRIDE1	(0x008C)
#define DMA_DATA_NUM1	(0x0090)

#define DMA_TEST0_U	(0x0094)
#define DMA_TEST1_U	(0x0098)
#define DMA_TEST3_U	(0x009C)
#define DMA_TEST4_U	(0x00A0)
#define DMA_STATUS_U	(0x00A4)

// V
#define DMA_DATA_ADDR2	(0x00A8)
#define DMA_STRIDE2	(0x00AC)
#define DMA_STRETCH_STRIDE2	(0x00B0)
#define DMA_DATA_NUM2	(0x00B4)

#define DMA_TEST0_V	(0x00B8)
#define DMA_TEST1_V	(0x00BC)
#define DMA_TEST3_V	(0x00C0)
#define DMA_TEST4_V	(0x00C4)
#define DMA_STATUS_V	(0x00C8)

// CH
#define CH_RD_SHADOW	(0x00D0)
#define CH_CTL	(0x00D4)
#define CH_SECU_EN	(0x00D8)
#define CH_SW_END_REQ	(0x00DC)
#define CH_CLK_SEL	(0x00E0)
#define CH_CLK_EN	(0x00E4)

/*******************************************************************************
 ** DFC
 */
#define DFC_DISP_SIZE	(0x0000)
#define DFC_PIX_IN_NUM	(0x0004)
#define DFC_GLB_ALPHA01	(0x0008)
#define DFC_DISP_FMT	(0x000C)
#define DFC_CLIP_CTL_HRZ	(0x0010)
#define DFC_CLIP_CTL_VRZ	(0x0014)
#define DFC_CTL_CLIP_EN	(0x0018)
#define DFC_ICG_MODULE	(0x001C)
#define DFC_DITHER_ENABLE	(0x0020)
#define DFC_PADDING_CTL	(0x0024)
#define DFC_GLB_ALPHA23	(0x0028)
#define DFC_BITEXT_CTL	(0x0040)
#define DFC_DITHER_CTL1	(0x00D0)

// REG_DEFAULT
#define CH_REG_DEFAULT (0x0A00)

/* MACROS */
#define MIN_INTERLEAVE	(7)
#define MAX_TILE_SURPORT_NUM	(6)

/* DMA aligned limited:  128bits aligned */
#define DMA_ALIGN_BYTES	(128 / BITS_PER_BYTE)
#define DMA_ADDR_ALIGN	(128 / BITS_PER_BYTE)
#define DMA_STRIDE_ALIGN	(128 / BITS_PER_BYTE)

#define TILE_DMA_ADDR_ALIGN	(256 * 1024)

#define DMA_IN_WIDTH_MAX	(2048)
#define DMA_IN_HEIGHT_MAX	(8192)

/*******************************************************************************
 ** MCTL  MUTEX0 1 2 3 4 5
 */
#define MCTL_CTL_EN	(0x0000)
#define MCTL_CTL_MUTEX	(0x0004)
#define MCTL_CTL_MUTEX_STATUS	(0x0008)
#define MCTL_CTL_MUTEX_ITF	(0x000C)
#define MCTL_CTL_MUTEX_DBUF	(0x0010)
#define MCTL_CTL_MUTEX_WB	(0x0014)
#define MCTL_CTL_MUTEX_OV	(0x0018)
#define MCTL_CTL_MUTEX_WCH0	(0x0020)
#define MCTL_CTL_MUTEX_WCH1	(0x0024)
#define MCTL_CTL_MUTEX_WCH2	(0x0028)
#define MCTL_CTL_MUTEX_RCH8	(0x002C)
#define MCTL_CTL_MUTEX_RCH0	(0x0030)
#define MCTL_CTL_MUTEX_RCH1	(0x0034)
#define MCTL_CTL_MUTEX_RCH2	(0x0038)
#define MCTL_CTL_MUTEX_RCH3	(0x003C)
#define MCTL_CTL_MUTEX_RCH4	(0x0040)
#define MCTL_CTL_MUTEX_RCH5	(0x0044)
#define MCTL_CTL_MUTEX_RCH6	(0x0048)
#define MCTL_CTL_MUTEX_RCH7	(0x004C)
#define MCTL_CTL_TOP	(0x0050)
#define MCTL_CTL_FLUSH_STATUS	(0x0054)
#define MCTL_CTL_CLEAR	(0x0058)
#define MCTL_CTL_CACK_TOUT	(0x0060)
#define MCTL_CTL_MUTEX_TOUT	(0x0064)
#define MCTL_CTL_STATUS	(0x0068)
#define MCTL_CTL_INTEN	(0x006C)
#define MCTL_CTL_SW_ST	(0x0070)
#define MCTL_CTL_ST_SEL	(0x0074)
#define MCTL_CTL_END_SEL	(0x0078)
#define MCTL_CTL_CLK_SEL	(0x0080)
#define MCTL_CTL_CLK_EN	(0x0084)
#define MCTL_CTL_DBG	(0x00E0)

/*******************************************************************************
 ** MCTL  SYS
 */
// SECU
#define MCTL_CTL_SECU_CFG	(0x0000)
#define MCTL_PAY_SECU_FLUSH_EN	(0x0018)
#define MCTL_CTL_RCH0_SECU_GATE	(0x0080)
#define MCTL_CTL_RCH1_SECU_GATE	(0x0084)
#define MCTL_CTL_RCH2_SECU_GATE	(0x0088)
#define MCTL_DSI0_SECU_CFG_EN	(0x00A0)
#define MCTL_DSI1_SECU_CFG_EN	(0x00A4)
#define MCTL_CTL_RCH3_SECU_GATE	(0x008C)
#define MCTL_CTL_RCH4_SECU_GATE	(0x0090)
#define MCTL_CTL_RCH5_SECU_GATE	(0x0094)
#define MCTL_CTL_RCH6_SECU_GATE	(0x0098)
#define MCTL_CTL_RCH7_SECU_GATE	(0x009C)
#define MCTL_CTL_RCH8_SECU_GATE	(0x00A0)
#define MCTL_CTL_OV2_SECU_GATE	(0x00B0)
#define MCTL_CTL_OV3_SECU_GATE	(0x00B4)
#define MCTL_DSI0_SECU_CFG	(0x00C0)
#define MCTL_DSI1_SECU_CFG	(0x00C4)
#define MCTL_DP_SECU_GATE	(0x00C8)
#define MCTL_DSI_MUX_SECU_GATE	(0x00CC)
// FLUSH EN
#define MCTL_RCH0_FLUSH_EN	(0x0100)
#define MCTL_RCH1_FLUSH_EN	(0x0104)
#define MCTL_RCH2_FLUSH_EN	(0x0108)
#define MCTL_RCH3_FLUSH_EN	(0x010C)
#define MCTL_RCH4_FLUSH_EN	(0x0110)
#define MCTL_RCH5_FLUSH_EN	(0x0114)
#define MCTL_RCH6_FLUSH_EN	(0x0118)
#define MCTL_RCH7_FLUSH_EN	(0x011C)
#define MCTL_WCH0_FLUSH_EN	(0x0120)
#define MCTL_WCH1_FLUSH_EN	(0x0124)
#define MCTL_OV0_FLUSH_EN	(0x0128)
#define MCTL_OV1_FLUSH_EN	(0x012C)
#define MCTL_OV2_FLUSH_EN	(0x0130)
#define MCTL_OV3_FLUSH_EN	(0x0134)
#define MCTL_RCH8_FLUSH_EN	(0x0138)
#define MCTL_WCH2_FLUSH_EN	(0x013C)
// SW FOR RCH
#define MCTL_RCH0_OV_OEN	(0x0160)
#define MCTL_RCH1_OV_OEN	(0x0164)
#define MCTL_RCH2_OV_OEN	(0x0168)
#define MCTL_RCH3_OV_OEN	(0x016C)
#define MCTL_RCH4_OV_OEN	(0x0170)
#define MCTL_RCH5_OV_OEN	(0x0174)
#define MCTL_RCH6_OV_OEN	(0x0178)
#define MCTL_RCH7_OV_OEN	(0x017C)
#define MCTL_RCH8_OV_OEN	(0x015C)
// SW FOR OV
#define MCTL_RCH_OV0_SEL	(0x0180)
#define MCTL_RCH_OV1_SEL	(0x0184)
#define MCTL_RCH_OV2_SEL	(0x0188)
#define MCTL_RCH_OV3_SEL	(0x018C)
#define MCTL_RCH_OV0_SEL1	(0x0190)
#define MCTL_RCH_OV1_SEL1	(0x0194)
#define MCTL_RCH_OV2_SEL1	(0x0198)
// SW FOR WCH
#define MCTL_WCH0_OV_IEN	(0x01A0)
#define MCTL_WCH1_OV_IEN	(0x01A4)
// SW FOR OV2/3 OUTPUT
#define MCTL_WCH_OV2_SEL	(0x01A8)
#define MCTL_WCH_OV3_SEL	(0x01AC)
// SW
#define MCTL_WB_ENC_SEL	(0x01B0)
#define MCTL_DSI_MUX_SEL	(0x01B4)
// RCH STARTY
#define MCTL_RCH0_STARTY	(0x01C0)
#define MCTL_RCH1_STARTY	(0x01C4)
#define MCTL_RCH2_STARTY	(0x01C8)
#define MCTL_RCH3_STARTY	(0x01CC)
#define MCTL_RCH4_STARTY	(0x01D0)
#define MCTL_RCH5_STARTY	(0x01D4)
#define MCTL_RCH6_STARTY	(0x01D8)
#define MCTL_RCH7_STARTY	(0x01DC)
#define MCTL_RCH8_STARTY	(0x01E0)
// LP
#define MCTL_MCTL_CLK_SEL	(0x01F0)
#define MCTL_MCTL_CLK_EN	(0x01F4)
#define MCTL_MOD_CLK_SEL	(0x01F8)
#define MCTL_MOD_CLK_EN	(0x01FC)

#define MCTL_MOD0_DBG	(0x0200)
#define MCTL_MOD1_DBG	(0x0204)
#define MCTL_MOD2_DBG	(0x0208)
#define MCTL_MOD3_DBG	(0x020C)
#define MCTL_MOD4_DBG	(0x0210)
#define MCTL_MOD5_DBG	(0x0214)
#define MCTL_MOD6_DBG	(0x0218)
#define MCTL_MOD7_DBG	(0x021C)
#define MCTL_MOD8_DBG	(0x0220)
#define MCTL_MOD9_DBG	(0x0224)
#define MCTL_MOD10_DBG	(0x0228)
#define MCTL_MOD11_DBG	(0x022C)
#define MCTL_MOD12_DBG	(0x0230)
#define MCTL_MOD13_DBG	(0x0234)
#define MCTL_MOD14_DBG	(0x0238)
#define MCTL_MOD15_DBG	(0x023C)
#define MCTL_MOD16_DBG	(0x0240)
#define MCTL_MOD17_DBG	(0x0244)
#define MCTL_MOD18_DBG	(0x0248)
#define MCTL_MOD19_DBG	(0x024C)
#define MCTL_MOD20_DBG	(0x0250)
#define MCTL_MOD0_STATUS	(0x0280)
#define MCTL_MOD1_STATUS	(0x0284)
#define MCTL_MOD2_STATUS	(0x0288)
#define MCTL_MOD3_STATUS	(0x028C)
#define MCTL_MOD4_STATUS	(0x0290)
#define MCTL_MOD5_STATUS	(0x0294)
#define MCTL_MOD6_STATUS	(0x0298)
#define MCTL_MOD7_STATUS	(0x029C)
#define MCTL_MOD8_STATUS	(0x02A0)
#define MCTL_MOD9_STATUS	(0x02A4)
#define MCTL_MOD10_STATUS	(0x02A8)
#define MCTL_MOD11_STATUS	(0x02AC)
#define MCTL_MOD12_STATUS	(0x02B0)
#define MCTL_MOD13_STATUS	(0x02B4)
#define MCTL_MOD14_STATUS	(0x02B8)
#define MCTL_MOD15_STATUS	(0x02BC)
#define MCTL_MOD16_STATUS	(0x02C0)
#define MCTL_MOD17_STATUS	(0x02C4)
#define MCTL_MOD18_STATUS	(0x02C8)
#define MCTL_MOD19_STATUS	(0x02CC)
#define MCTL_MOD20_STATUS	(0x02D0)
#define MCTL_SW_DBG	(0x0300)
#define MCTL_SW0_STATUS0	(0x0304)
#define MCTL_SW0_STATUS1	(0x0308)
#define MCTL_SW0_STATUS2	(0x030C)
#define MCTL_SW0_STATUS3	(0x0310)
#define MCTL_SW0_STATUS4	(0x0314)
#define MCTL_SW0_STATUS5	(0x0318)
#define MCTL_SW0_STATUS6	(0x031C)
#define MCTL_SW0_STATUS7	(0x0320)
#define MCTL_SW1_STATUS	(0x0324)

/*******************************************************************************
** OVL
*/
#define OVL_SIZE	(0x0000)
#define OVL_BG_COLOR	(0x4)
#define OVL_DST_STARTPOS	(0x8)
#define OVL_DST_ENDPOS	(0xC)
#define OVL_GCFG	(0x10)

#define OVL_LAYER0_POS	(0x30)
#define OVL_LAYER0_SIZE	(0x34)
#define OVL_LAYER0_SRCLOKEY	(0x38)
#define OVL_LAYER0_SRCHIKEY	(0x3C)
#define OVL_LAYER0_DSTLOKEY	(0x40)
#define OVL_LAYER0_DSTHIKEY	(0x44)
#define OVL_LAYER0_PATTERN_RGB	(0x48)
#define OVL_LAYER0_PATTERN_A	(0x4C)
#define OVL_LAYER0_ALPHA_MODE	(0x50)
#define OVL_LAYER0_ALPHA_A	(0x54)
#define OVL_LAYER0_CFG	(0x58)
#define OVL_LAYER0_PSPOS	(0x5C)
#define OVL_LAYER0_PEPOS	(0x60)
#define OVL_LAYER0_INFO_ALPHA	(0x64)
#define OVL_LAYER0_INFO_SRCCOLOR	(0x68)
#define OVL_LAYER0_DBG_INFO	(0x6C)

#define OVL_LAYER1_POS	(OVL_LAYER0_POS + 0x60 * 1)
#define OVL_LAYER1_SIZE	(OVL_LAYER0_SIZE + 0x60 * 1)
#define OVL_LAYER1_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 1)
#define OVL_LAYER1_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 1)
#define OVL_LAYER1_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 1)
#define OVL_LAYER1_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 1)
#define OVL_LAYER1_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 1)
#define OVL_LAYER1_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 1)
#define OVL_LAYER1_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 1)
#define OVL_LAYER1_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 1)
#define OVL_LAYER1_CFG	(OVL_LAYER0_CFG + 0x60 * 1)
#define OVL_LAYER1_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 1)
#define OVL_LAYER1_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 1)
#define OVL_LAYER1_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 1)
#define OVL_LAYER1_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 1)
#define OVL_LAYER1_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 1)

#define OVL_LAYER2_POS	(OVL_LAYER0_POS + 0x60 * 2)
#define OVL_LAYER2_SIZE	(OVL_LAYER0_SIZE + 0x60 * 2)
#define OVL_LAYER2_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 2)
#define OVL_LAYER2_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 2)
#define OVL_LAYER2_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 2)
#define OVL_LAYER2_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 2)
#define OVL_LAYER2_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 2)
#define OVL_LAYER2_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 2)
#define OVL_LAYER2_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 2)
#define OVL_LAYER2_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 2)
#define OVL_LAYER2_CFG	(OVL_LAYER0_CFG + 0x60 * 2)
#define OVL_LAYER2_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 2)
#define OVL_LAYER2_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 2)
#define OVL_LAYER2_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 2)
#define OVL_LAYER2_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 2)
#define OVL_LAYER2_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 2)

#define OVL_LAYER3_POS	(OVL_LAYER0_POS + 0x60 * 3)
#define OVL_LAYER3_SIZE	(OVL_LAYER0_SIZE + 0x60 * 3)
#define OVL_LAYER3_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 3)
#define OVL_LAYER3_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 3)
#define OVL_LAYER3_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 3)
#define OVL_LAYER3_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 3)
#define OVL_LAYER3_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 3)
#define OVL_LAYER3_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 3)
#define OVL_LAYER3_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 3)
#define OVL_LAYER3_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 3)
#define OVL_LAYER3_CFG	(OVL_LAYER0_CFG + 0x60 * 3)
#define OVL_LAYER3_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 3)
#define OVL_LAYER3_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 3)
#define OVL_LAYER3_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 3)
#define OVL_LAYER3_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 3)
#define OVL_LAYER3_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 3)

#define OVL_LAYER4_POS	(OVL_LAYER0_POS + 0x60 * 4)
#define OVL_LAYER4_SIZE	(OVL_LAYER0_SIZE + 0x60 * 4)
#define OVL_LAYER4_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 4)
#define OVL_LAYER4_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 4)
#define OVL_LAYER4_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 4)
#define OVL_LAYER4_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 4)
#define OVL_LAYER4_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 4)
#define OVL_LAYER4_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 4)
#define OVL_LAYER4_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 4)
#define OVL_LAYER4_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 4)
#define OVL_LAYER4_CFG	(OVL_LAYER0_CFG + 0x60 * 4)
#define OVL_LAYER4_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 4)
#define OVL_LAYER4_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 4)
#define OVL_LAYER4_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 4)
#define OVL_LAYER4_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 4)
#define OVL_LAYER4_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 4)

#define OVL_LAYER5_POS	(OVL_LAYER0_POS + 0x60 * 5)
#define OVL_LAYER5_SIZE	(OVL_LAYER0_SIZE + 0x60 * 5)
#define OVL_LAYER5_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 5)
#define OVL_LAYER5_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 5)
#define OVL_LAYER5_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 5)
#define OVL_LAYER5_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 5)
#define OVL_LAYER5_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 5)
#define OVL_LAYER5_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 5)
#define OVL_LAYER5_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 5)
#define OVL_LAYER5_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 5)
#define OVL_LAYER5_CFG	(OVL_LAYER0_CFG + 0x60 * 5)
#define OVL_LAYER5_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 5)
#define OVL_LAYER5_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 5)
#define OVL_LAYER5_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 5)
#define OVL_LAYER5_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 5)
#define OVL_LAYER5_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 5)

#define OVL_LAYER6_POS	(OVL_LAYER0_POS + 0x60 * 6)
#define OVL_LAYER6_SIZE	(OVL_LAYER0_SIZE + 0x60 * 6)
#define OVL_LAYER6_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 6)
#define OVL_LAYER6_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 6)
#define OVL_LAYER6_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 6)
#define OVL_LAYER6_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 6)
#define OVL_LAYER6_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 6)
#define OVL_LAYER6_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 6)
#define OVL_LAYER6_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 6)
#define OVL_LAYER6_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 6)
#define OVL_LAYER6_CFG	(OVL_LAYER0_CFG + 0x60 * 6)
#define OVL_LAYER6_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 6)
#define OVL_LAYER6_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 6)
#define OVL_LAYER6_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 6)
#define OVL_LAYER6_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 6)
#define OVL_LAYER6_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 6)

#define OVL_LAYER7_POS	(OVL_LAYER0_POS + 0x60 * 7)
#define OVL_LAYER7_SIZE	(OVL_LAYER0_SIZE + 0x60 * 7)
#define OVL_LAYER7_SRCLOKEY	(OVL_LAYER0_SRCLOKEY + 0x60 * 7)
#define OVL_LAYER7_SRCHIKEY	(OVL_LAYER0_SRCHIKEY + 0x60 * 7)
#define OVL_LAYER7_DSTLOKEY	(OVL_LAYER0_DSTLOKEY + 0x60 * 7)
#define OVL_LAYER7_DSTHIKEY	(OVL_LAYER0_DSTHIKEY + 0x60 * 7)
#define OVL_LAYER7_PATTERN_RGB	(OVL_LAYER0_PATTERN_RGB + 0x60 * 7)
#define OVL_LAYER7_PATTERN_A	(OVL_LAYER0_PATTERN_A + 0x60 * 7)
#define OVL_LAYER7_ALPHA_MODE	(OVL_LAYER0_ALPHA_MODE + 0x60 * 7)
#define OVL_LAYER7_ALPHA_A	(OVL_LAYER0_ALPHA_A + 0x60 * 7)
#define OVL_LAYER7_CFG	(OVL_LAYER0_CFG + 0x60 * 7)
#define OVL_LAYER7_PSPOS	(OVL_LAYER0_PSPOS + 0x60 * 7)
#define OVL_LAYER7_PEPOS	(OVL_LAYER0_PEPOS + 0x60 * 7)
#define OVL_LAYER7_INFO_ALPHA	(OVL_LAYER0_INFO_ALPHA + 0x60 * 7)
#define OVL_LAYER7_INFO_SRCCOLOR	(OVL_LAYER0_INFO_SRCCOLOR + 0x60 * 7)
#define OVL_LAYER7_DBG_INFO	(OVL_LAYER0_DBG_INFO + 0x60 * 7)

/* LAYER0_CFG */
#define BIT_OVL_LAYER_SRC_CFG	BIT(8)
#define BIT_OVL_LAYER_ENABLE	BIT(0)

/* LAYER0_INFO_ALPHA */
#define BIT_OVL_LAYER_SRCALPHA_FLAG	BIT(3)
#define BIT_OVL_LAYER_DSTALPHA_FLAG	BIT(2)

/* LAYER0_INFO_SRCCOLOR */
#define BIT_OVL_LAYER_SRCCOLOR_FLAG	BIT(0)

#define OVL_6LAYER_NUM	(6)
#define OVL_2LAYER_NUM	(2)
#define OV_8LAYER_NUM	(8)

#define OV_SIZE	(0x000)
#define OV_BG_COLOR_RGB	(0x004)
#define OV_BG_COLOR_A	(0x008)
#define OV_DST_STARTPOS	(0x00C)
#define OV_DST_ENDPOS	(0x010)
#define OV_GCFG	(0x014)

#define OV_LAYER0_POS	(0x030)
#define OV_LAYER0_SIZE	(0x034)
#define OV_LAYER0_SRCLOKEY	(0x038)
#define OV_LAYER0_SRCHIKEY	(0x03C)
#define OV_LAYER0_DSTLOKEY	(0x040)
#define OV_LAYER0_DSTHIKEY	(0x044)
#define OV_LAYER0_PATTERN_RGB	(0x048)
#define OV_LAYER0_PATTERN_A	(0x04C)
#define OV_LAYER0_ALPHA_MODE	(0x050)
#define OV_LAYER0_ALPHA_A	(0x054)
#define OV_LAYER0_CFG	(0x058)
#define OV_LAYER0_PSPOS	(0x05C)
#define OV_LAYER0_PEPOS	(0x060)
#define OV_LAYER0_INFO_ALPHA	(0x064)
#define OV_LAYER0_INFO_SRCCOLOR	(0x068)
#define OV_LAYER0_DBG_INFO	(0x06C)

#define OV8_BASE_DBG_INFO	(0x340)
#define OV8_RD_SHADOW_SEL	(0x344)
#define OV8_CLK_SEL	(0x348)
#define OV8_CLK_EN	(0x34C)
#define OV8_BLOCK_SIZE	(0x350)
#define OV8_BLOCK_DBG	(0x354)
#define OV8_REG_DEFAULT	(0x358)
#define OV2_BASE_DBG_INFO	(0x200)
#define OV2_RD_SHADOW_SEL	(0x204)
#define OV2_CLK_SEL	(0x208)
#define OV2_CLK_EN	(0x20C)
#define OV2_BLOCK_SIZE	(0x210)
#define OV2_BLOCK_DBG	(0x214)
#define OV2_REG_DEFAULT	(0x218)

#define OVL2_OV_RD_SHADOW_SEL	(0x98)
#define OVL2_OV_CLK_SEL	(0x9C)
#define OVL2_OV_CLK_EN	(0xA0)
#define OVL2_BLOCK_SIZE	(0xB0)
#define OVL2_BLOCK_DBG	(0xB4)
#define OVL2_REG_DEFAULT	(0xB8)


/* LAYER0_CFG */

/* LAYER0_INFO_ALPHA */

/* LAYER0_INFO_SRCCOLOR */

/*******************************************************************************
 ** LDI
 */
#define MIPI_LDI_DPI0_HRZ_CTRL3	(0x01F4)
#define LDI_DPI0_HRZ_CTRL0	(0x0000)
#define LDI_DPI0_HRZ_CTRL1	(0x0004)
#define LDI_DPI0_HRZ_CTRL2	(0x0008)
#define LDI_VRT_CTRL0	(0x000C)
#define LDI_VRT_CTRL1	(0x0010)
#define LDI_VRT_CTRL2	(0x0014)
#define LDI_PLR_CTRL	(0x0018)
#define LDI_SH_MASK_INT	(0x001C)
#define LDI_3D_CTRL	(0x0020)
#define LDI_CTRL	(0x0024)
#define MIPI_LDI_CTRL	(0x01B8)
#define LDI_WORK_MODE	(0x0028)
#define LDI_DE_SPACE_LOW	(0x002C)
#define LDI_DSI_CMD_MOD_CTRL	(0x0030)
#define LDI_DSI_TE_CTRL	(0x0034)
#define MIPI_DSI_TE_CTRL	(0x01C4)
#define LDI_DSI_TE_HS_NUM	(0x0038)
#define MIPI_DSI_TE_HS_NUM	(0x01C8)
#define LDI_DSI_TE_HS_WD	(0x003C)
#define MIPI_DSI_TE_HS_WD	(0x01CC)
#define LDI_DSI_TE_VS_WD	(0x0040)
#define MIPI_DSI_TE_VS_WD	(0x01D0)
#define LDI_FRM_MSK	(0x0044)
#define MIPI_LDI_FRM_MSK	(0x01D4)
#define LDI_FRM_MSK_UP	(0x0048)
#define MIPI_LDI_FRM_MSK_UP	(0x0238)
#define LDI_VINACT_MSK_LEN	(0x0050)
#define LDI_VSTATE	(0x0054)
#define MIPI_LDI_VSTATE	(0x01FC)
#define LDI_DPI0_HSTATE	(0x0058)
#define MIPI_LDI_DPI0_HSTATE	(0x0200)
#define LDI_DPI1_HSTATE	(0x005C)
#define LDI_CMD_EVENT_SEL	(0x0060)
#define LDI_SRAM_LP_CTRL	(0x0064)
#define LDI_ITF_RD_SHADOW	(0x006C)
#define LDI_DP_DSI_SEL	(0x0080)
#define VSYNC_DELAY_TIME	(0x008C)
#define VSYNC_DELAY_EN	(0x0090)
#define VSYNC_DELAY_DIS	(0x0098)
#define LDI_MP_MODE	(0x009c)
#define MIPI_VSYNC_DELAY_CTRL	(0x01E0)
#define MIPI_VSYNC_DELAY_TIME	(0x01E4)

#define LDI_DPI1_HRZ_CTRL0	(0x00F0)
#define LDI_DPI1_HRZ_CTRL1	(0x00F4)
#define LDI_DPI1_HRZ_CTRL2	(0x00F8)
#define LDI_OVERLAP_SIZE	(0x00FC)
#define LDI_MEM_CTRL	(0x0100)
#define LDI_PM_CTRL	(0x0104)
#define LDI_CLK_SEL	(0x0108)
#define LDI_CLK_EN	(0x010C)
#define LDI_IF_BYPASS	(0x0110)
#define LDI_FRM_VALID_DBG	(0x0118)
#define MIPI_LDI_FRM_VALID_DBG	(0x01D8)
/* LDI GLB */
#define LDI_PXL0_DIV2_GT_EN	(0x0210)
#define LDI_PXL0_DIV4_GT_EN	(0x0214)
#define LDI_PXL0_GT_EN	(0x0218)
#define LDI_PXL0_DSI_GT_EN	(0x021C)
#define LDI_PXL0_DIVXCFG	(0x0220)
#define LDI_DSI1_CLK_SEL	(0x0224)
#define LDI_VESA_CLK_SEL	(0x0228)
/* DSI1 RST */
#define LDI_DSI1_RST_SEL	(0x0238)
/* LDI INTERRUPT */
#define LDI_MCU_ITF_INTS	(0x0240)
#define LDI_MCU_ITF_INT_MSK	(0x0244)
#define LDI_CPU_ITF_INTS	(0x0248)
#define LDI_CPU_ITF_INT_MSK	(0x024C)
#define MIPI_LDI_MCU_ITF_INTS	(0x0240)
#define MIPI_LDI_MCU_ITF_INT_MSK	(0x0244)
#define MIPI_LDI_CPU_ITF_INTS	(0x0248)
#define MIPI_LDI_CPU_ITF_INT_MSK	(0x024C)
/* LDI MODULE CLOCK GATING */
#define LDI_MODULE_CLK_SEL	(0x0258)
#define LDI_MODULE_CLK_EN	(0x025C)

#endif  /* HISI_DSS_REGS_H */
