/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2018-2019. All rights reserved.
 * Description: This file contains the definition required for free
 * Author: Xu Hangyu x00447026
 * Create: 2018-08-30
 */
#ifndef HWAA_UTILS_H
#define HWAA_UTILS_H

#include <stdint.h>
#include "securec.h"

// constant
#define AES_KEY_LENGTH (16 * 32)
#define KEY_SEED_LENGTH 32 /* Length of the key seed used to generate all file encryption keys */
#define MAX_FILE_KEY_LENGTH 64 /* The max length of file encryption key that can be generated by TA */

#define AES_BLOCK_LENGTH 16 /* Length of one AES block */
#define AES_IV_LENGTH 16
/* Length of hmac message that appends each encrypted message between TA and kernel */
#define HMAC_LENGTH 32

#define SHA256_LEN 32
#define AES256_KEY_LEN 32
#define PROFILE_MAX_LENGTH 64
#define AES_KEY_LENGTH_16 16
#define AES_KEY_LENGTH_24 24
#define AES_KEY_LENGTH_32 32
#define KERNEL_CRED_SECRET_LENGTH 32

/* one-and-zeros padding length macro */
#define PADDEDLEN(len) ((len) + (AES_BLOCK_LENGTH - ((len) % AES_BLOCK_LENGTH)))

/*
 * This function securely frees allocated memory.
 * Contents are forced to be zero before allocated memory is freed.
 * @param [inout] buf  pointer that points to memory to be freed
 * @param [in] bufSize Length of memory to be freed.
 */
void SecureFree(void *buf, uint32_t bufSize);

// error code
enum {
    ERR_MSG_SUCCESS = 0, /* Success */
    ERR_MSG_OUT_OF_MEMORY = 1, /* Out of memory */
    ERR_MSG_NULL_PTR = 2, /* A pointer (that should not be null) is null */
    ERR_MSG_UNKNOWN_REQ_ID = 3, /* Kernel submits a request with undefined request ID */
    ERR_MSG_PAYLOAD_FORMAT_ERROR = 4, /* Messages between kernel and TA are in wrong format */
    ERR_MSG_WRONG_REQ_ID = 5, /* Wrong function (for kernel) is used to handle the reply from TA */
    ERR_MSG_BAD_FILE_READ = 6, /* Error in reading from persistent storage */
    ERR_MSG_BAD_FILE_WRITE = 7, /* Error in writing to persistent storage */
    ERR_MSG_BAD_PARAMETER = 8,

    ERR_MSG_KDF_INVALID_KEY_LENGTH = 100, /* Length of file encryption key is invalid */

    ERR_MSG_AES_INVALID_KEY_LENGTH = 200, /* Length of aes key is invalid, must be 16, 24 and 32 bytes */
    ERR_MSG_AES_CRYPT_FUNC_FAIL = 201, /* AES encryption function fails, check AES encryption implementation */
    ERR_MSG_AES_DEPADDING_FAIL = 202, /* Depadding function fails */
    ERR_MSG_HMAC_FUNC_FAIL = 203, /* HMAC-SHA512 function fails, check HMAC-SHA512 implement */
    ERR_MSG_HMAC_MISMATCH = 204, /* Message between kernel and TA is not properly hashed */
    ERR_MEMCPY_FAIL = 205,
    ERR_HUK_BAD_PARAMETERS = 300,
    ERR_MSG_GENERATE_FAIL = 400, /* Message genarated fails */
};

#endif
