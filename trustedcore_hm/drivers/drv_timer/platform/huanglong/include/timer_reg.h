/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2019-2020. All rights reserved.
 * Description: Header file about timer
 * Create: 2019-08-20
 */

#ifndef DRV_TIMER_PLATFORM_TIMER_REG_H
#define DRV_TIMER_PLATFORM_TIMER_REG_H

#include <stdint.h>
#include <timer_types.h>

#define TIMER_CLK_FREQ 24000000
#ifdef TIMER_COUNT_MAX
#undef TIMER_COUNT_MAX
#endif
#define TIMER_COUNT_MAX TIMER_COUNT_MAX_32BIT

#if (TRUSTEDCORE_CHIP_CHOOSE == WITH_CHIP_SHAOLINGUN)
#define OFFSET_PADDR_TO_VADDR (uint32_t)(0 - 0xB0000000)
#define TIMER1_BASE (uint32_t)(0x00853000 - OFFSET_PADDR_TO_VADDR)
#define TIMER7_BASE (uint32_t)(0x00853100 - OFFSET_PADDR_TO_VADDR)
#elif (TRUSTEDCORE_CHIP_CHOOSE == WITH_CHIP_HI3716MV430N)
#define OFFSET_PADDR_TO_VADDR 0xE0000000
#define TIMER1_BASE (0xF8008000 - OFFSET_PADDR_TO_VADDR)
#define TIMER7_BASE (0xF8008100 - OFFSET_PADDR_TO_VADDR)
#elif (TRUSTEDCORE_CHIP_CHOOSE == WITH_CHIP_SHAOLINAXE)
#define OFFSET_PADDR_TO_VADDR 0x0000000
#define TIMER1_BASE (0xF800D000 - OFFSET_PADDR_TO_VADDR)
#define TIMER7_BASE (0xF800E000 - OFFSET_PADDR_TO_VADDR)
#else
#define TIMER1_BASE 0xF800D000
#define TIMER7_BASE 0xF800E000
#endif

#define FREE_RUNNING_TIMER_BASE     TIMER1_BASE
#define TICK_TIMER_BASE             TIMER7_BASE

#define FREE_RUNNING_TIMER_BASE_TIMEL TIMER1_BASE
#define FREE_RUNNING_TIMER_BASE_TIMEH (TIMER1_BASE + 0x20)

#define FREE_RUNNING_TIMER_NUM 0
#define TICK_TIMER_NUM         0

#if (TRUSTEDCORE_CHIP_CHOOSE == WITH_CHIP_SHAOLINGUN)
#define FREE_RUNNING_FIQ_NUMBLER     123
#define TICK_TIMER_FIQ_NUMBLER       124
#elif (TRUSTEDCORE_CHIP_CHOOSE == WITH_CHIP_HI3716MV430N)
#define FREE_RUNNING_FIQ_NUMBLER     54
#define TICK_TIMER_FIQ_NUMBLER       55
#elif (TRUSTEDCORE_CHIP_CHOOSE == WITH_CHIP_SHAOLINAXE)
#define FREE_RUNNING_FIQ_NUMBLER     60
#define TICK_TIMER_FIQ_NUMBLER       109
#else
#define FREE_RUNNING_FIQ_NUMBLER     60
#define TICK_TIMER_FIQ_NUMBLER       109
#endif
/* SPI number to call normal world tc_notify_func */
#define SPI_NUM_FOR_NOTIFY 80

#define TIMER_LOAD  0x00
#define TIMER_VALUE 0x04
#define TIMER_CTRL  0x08

#define TIMER_CTRL_ONESHOT  (1U << 0)
#define TIMER_CTRL_32BIT    (0U << 1)
#define TIMER_CTRL_64BIT    (1U << 1)
#define TIMER_CTRL_DIV1     (0U << 2)
#define TIMER_CTRL_DIV16    (1U << 2)
#define TIMER_CTRL_DIV256   (2U << 2)
/* Interrupt Enable (versatile only) */
#define TIMER_CTRL_IE       (1U << 5)
#define TIMER_CTRL_PERIODIC (1U << 6)
#define TIMER_CTRL_ENABLE   (1U << 7)

#define TIMER_INTCLR 0x0c
#define TIMER_RIS    0x10
#define TIMER_MIS    0x14
#define TIMER_BGLOAD 0x18

#define SECURE_RTC_FIQ_NUMBLER       79

#endif /* DRV_TIMER_PLATFORM_TIMER_REG_H */
