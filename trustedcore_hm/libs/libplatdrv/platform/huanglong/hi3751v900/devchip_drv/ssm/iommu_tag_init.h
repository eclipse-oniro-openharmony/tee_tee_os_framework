/*
 * Copyright (c) Hisilicon Technologies Co., Ltd. 2019. All rights reserved.
 * Description: init function file for Hisilicon SSM
 * Author: ssm group
 * Create: 2019/12/11
 * Notes:
 */

#ifndef __IOMMU_INIT_H__
#define __IOMMU_INIT_H__

#include "hi_type_dev.h"
#include "hi_tee_ssm.h"

#define REG_DMX_BASE            0X00C20000
#define REG_DMX_OFFSET_WTAG_L   0XF180
#define REG_DMX_OFFSET_WTAG_H   0XF184
#define REG_DMX_OFFSET_RTAG_L   0XF188
#define REG_DMX_OFFSET_RTAG_H   0XF18C

#define REG_TSCIPHER_BASE           0X00BEA000
#define REG_TSCIPHER_OFFSET_R_ERR_H 0XA0
#define REG_TSCIPHER_OFFSET_R_ERR_L 0XA4
#define REG_TSCIPHER_OFFSET_RTAG_H  0XB0
#define REG_TSCIPHER_OFFSET_RTAG_L  0XB4
#define REG_TSCIPHER_OFFSET_W_ERR_H 0XD0
#define REG_TSCIPHER_OFFSET_W_ERR_L 0XD4
#define REG_TSCIPHER_OFFSET_WTAG_H  0XE0
#define REG_TSCIPHER_OFFSET_WTAG_L  0XE4
#define REG_TSCIPHER_OFFSET_SEC_EN  0X100
#define REG_TSCIPHER_OFFSET_SEC_TBL 0X104

#define REG_MCIPHER_BASE           0X00BC2000
#define REG_MCIPHER_OFFSET_SEC_TBL 0X004
#define REG_MCIPHER_OFFSET_R_ERR_H 0X100
#define REG_MCIPHER_OFFSET_R_ERR_L 0X104
#define REG_MCIPHER_OFFSET_RTAG_H  0X120
#define REG_MCIPHER_OFFSET_RTAG_L  0X124

#define REG_MCIPHER_HASH_OFFSET_R_ERR_H 0X200
#define REG_MCIPHER_HASH_OFFSET_R_ERR_L 0X204
#define REG_MCIPHER_HASH_OFFSET_R_TAG_H 0X220
#define REG_MCIPHER_HASH_OFFSET_R_TAG_L 0X224

#define REG_MCIPHER_OFFSET_W_ERR_H 0X500
#define REG_MCIPHER_OFFSET_W_ERR_L 0X504
#define REG_MCIPHER_OFFSET_WTAG_H  0X520
#define REG_MCIPHER_OFFSET_WTAG_L  0X524


#define REG_VMCU_BASE             0X01291000
#define REG_VMCU_OFFSET_SEC_PTB_L 0X100
#define REG_VMCU_OFFSET_SEC_PTB_H 0X104
#define REG_VMCU_OFFSET_RTAG_CTL  0X110
#define REG_VMCU_OFFSET_RTAG_L    0X114
#define REG_VMCU_OFFSET_RTAG_H    0X118
#define REG_VMCU_OFFSET_WTAG_CTL  0X120
#define REG_VMCU_OFFSET_WTAG_L    0X124
#define REG_VMCU_OFFSET_WTAG_H    0X128
#define REG_VMCU_OFFSET_R_ERR_L   0X130
#define REG_VMCU_OFFSET_R_ERR_H   0X134
#define REG_VMCU_OFFSET_W_ERR_L   0X138
#define REG_VMCU_OFFSET_W_ERR_H   0X13C

#define REG_VDH_BSP_BASE             0X01217100
#define REG_VDH_BSP_OFFSET_SEC_PTB_L 0X100
#define REG_VDH_BSP_OFFSET_SEC_PTB_H 0X104
#define REG_VDH_BSP_OFFSET_RTAG_CTL  0X110
#define REG_VDH_BSP_OFFSET_RTAG_L    0X114
#define REG_VDH_BSP_OFFSET_RTAG_H    0X118
#define REG_VDH_BSP_OFFSET_WTAG_CTL  0X120
#define REG_VDH_BSP_OFFSET_WTAG_L    0X124
#define REG_VDH_BSP_OFFSET_WTAG_H    0X128
#define REG_VDH_BSP_OFFSET_R_ERR_L   0X130
#define REG_VDH_BSP_OFFSET_R_ERR_H   0X134
#define REG_VDH_BSP_OFFSET_W_ERR_L   0X138
#define REG_VDH_BSP_OFFSET_W_ERR_H   0X13C


#define REG_VDH_BXP0_BASE          0X01217900
#define REG_VDH_BXP1_BASE          0X01218100
#define REG_VDH_BXP2_BASE          0X01218900
#define REG_VDH_BXP3_BASE          0X01219100
#define REG_VDH_BXP4_BASE          0X01219900
#define REG_VDH_BXP5_BASE          0X0121A100
#define REG_VDH_BXP6_BASE          0X0121A900
#define REG_VDH_BXP7_BASE          0X0121B100
#define REG_VDH_BXP8_BASE          0X0121B900

#define REG_VDH_BXP_OFFSET_SEC_PTB_L 0X100
#define REG_VDH_BXP_OFFSET_SEC_PTB_H 0X104
#define REG_VDH_BXP_OFFSET_RTAG_CTL  0X110
#define REG_VDH_BXP_OFFSET_RTAG_L    0X114
#define REG_VDH_BXP_OFFSET_RTAG_H    0X118
#define REG_VDH_BXP_OFFSET_WTAG_CTL  0X120
#define REG_VDH_BXP_OFFSET_WTAG_L    0X124
#define REG_VDH_BXP_OFFSET_WTAG_H    0X128
#define REG_VDH_BXP_OFFSET_R_ERR_L   0X130
#define REG_VDH_BXP_OFFSET_R_ERR_H   0X134
#define REG_VDH_BXP_OFFSET_W_ERR_L   0X138
#define REG_VDH_BXP_OFFSET_W_ERR_H   0X13C

/* vpss reg addr */
#define REG_VPSS0_SAFE_BASE            0x01302000
#define REG_VPSS0_OFFSET_SCR           0x000
#define REG_VPSS0_OFFSET_LP_CTRL       0x008 /* 非安全寄存器，是不是不需要在这里配置 */
#define REG_VPSS0_OFFSET_MEM_SPEEDCTRL 0x00c
#define REG_VPSS0_OFFSET_INTMASK       0x010

#define REG_VPSS0_OFFSET_SCB_TTBR      0x100
#define REG_VPSS0_OFFSET_SCB_TTBR_H    0x104
#define REG_VPSS0_OFFSET_STAG_RD_CTRL  0x110
#define REG_VPSS0_OFFSET_STAG_RD_AC0   0x114
#define REG_VPSS0_OFFSET_STAG_RD_AC1   0x118
#define REG_VPSS0_OFFSET_STAG_WR_CTRL  0x120
#define REG_VPSS0_OFFSET_STAG_WR_AC0   0x124
#define REG_VPSS0_OFFSET_STAG_WR_AC1   0x128
#define REG_VPSS0_OFFSET_RD_ERR_L      0x130
#define REG_VPSS0_OFFSET_RD_ERR_H      0x134
#define REG_VPSS0_OFFSET_WR_ERR_L      0x138
#define REG_VPSS0_OFFSET_WR_ERR_H      0x13C

#define REG_VPSS0_MAC_SMMUR_CTRL_BASE  0x01300000
#define REG_VPSS0_OFFSET_MAC_SMMUR_CTRL  0x0108
#define REG_VPSS0_OFFSET_MAC_NULL_USE    0x0

/* vpss value */
#define VPSS0_VALUE_SCR           0x0
#define VPSS0_VALUE_LP_CTRL       0x6
#define VPSS0_VALUE_MEM_SPEEDCTRL 0x2d
#define VPSS0_VALUE_INTMASK       0x0

#define VPSS0_VALUE_STAG_RD_CTRL   0x1
#define VPSS0_VALUE_STAG_RD_AC0    0xb0000080

#define VPSS0_VALUE_STAG_RD_AC1    0x0
#define VPSS0_VALUE_STAG_WR_CTRL   0x1
#define VPSS0_VALUE_STAG_WR_AC0    0xA0000080


#define VPSS0_VALUE_STAG_WR_AC1    0x0
#define VPSS0_VALUE_MAC_SMMUR_CTRL 0x0 /* force all channal safe */

/* vpss reg addr */
#define REG_VPSS1_SAFE_BASE            0x01322000
#define REG_VPSS1_OFFSET_SCR           0x000
#define REG_VPSS1_OFFSET_LP_CTRL       0x008 /* 非安全寄存器，是不是不需要在这里配置 */
#define REG_VPSS1_OFFSET_MEM_SPEEDCTRL 0x00c
#define REG_VPSS1_OFFSET_INTMASK       0x010

#define REG_VPSS1_OFFSET_SCB_TTBR      0x100
#define REG_VPSS1_OFFSET_SCB_TTBR_H    0x104
#define REG_VPSS1_OFFSET_STAG_RD_CTRL  0x110
#define REG_VPSS1_OFFSET_STAG_RD_AC0   0x114
#define REG_VPSS1_OFFSET_STAG_RD_AC1   0x118
#define REG_VPSS1_OFFSET_STAG_WR_CTRL  0x120
#define REG_VPSS1_OFFSET_STAG_WR_AC0   0x124
#define REG_VPSS1_OFFSET_STAG_WR_AC1   0x128
#define REG_VPSS1_OFFSET_RD_ERR_L      0x130
#define REG_VPSS1_OFFSET_RD_ERR_H      0x134
#define REG_VPSS1_OFFSET_WR_ERR_L      0x138
#define REG_VPSS1_OFFSET_WR_ERR_H      0x13C

#define REG_VPSS1_MAC_SMMUR_CTRL_BASE  0x01320000
#define REG_VPSS1_OFFSET_MAC_SMMUR_CTRL  0x0108
#define REG_VPSS1_OFFSET_MAC_NULL_USE    0x0

/* vpss value */
#define VPSS1_VALUE_SCR           0x0
#define VPSS1_VALUE_LP_CTRL       0x6
#define VPSS1_VALUE_MEM_SPEEDCTRL 0x2d
#define VPSS1_VALUE_INTMASK       0x0

#define VPSS1_VALUE_STAG_RD_CTRL  0x1
#define VPSS1_VALUE_STAG_RD_AC0   0xb0000080
#define VPSS1_VALUE_STAG_RD_AC1   0x0
#define VPSS1_VALUE_STAG_WR_CTRL  0x1
#define VPSS1_VALUE_STAG_WR_AC0   0xA0000080
#define VPSS1_VALUE_STAG_WR_AC1   0x0
#define VPSS1_VALUE_MAC_SMMUR_CTRL  0x0 /* force all channal safe */

#define DMX_WTAG_VAL_L32        0X04600002
#define DMX_RTAG_VAL_L32        0X0A000002
#define DMX_WTAG_VAL_H32        0
#define DMX_RTAG_VAL_H32        0

#define TSCIPHER_WTAG_VAL_L32   0X08000004
#define TSCIPHER_RTAG_VAL_L32   0X04000004
#define TSCIPHER_WTAG_VAL_H32   0
#define TSCIPHER_RTAG_VAL_H32   0

#define MCIPHER_WTAG_VAL_L32    0X03800008
#define MCIPHER_RTAG_VAL_L32    0X00000008
#define MCIPHER_WTAG_VAL_H32    0
#define MCIPHER_RTAG_VAL_H32    0X00000003

#define VMCU_WTAG_VAL_L32       0X80000010
#define VMCU_RTAG_VAL_L32       0X80A00010
#define VMCU_WTAG_VAL_H32       0
#define VMCU_RTAG_VAL_H32       0

#define VDH_WTAG_VAL_L32        0X10000010
#define VDH_RTAG_VAL_L32        0X10A00010

#define VDH_WTAG_VAL_H32        0
#define VDH_RTAG_VAL_H32        0

#define REG_VDP1_MMU_BASE         0xf0e000
#define REG_VDP2_MMU_BASE         0xf0e800
#define REG_VDP0_MMU_BASE         0xf3e000

#define REG_VDP_REGION_MMU_BASE   0xf0b440

#define REG_VDP_OFFSET_SCR           0x000
#define REG_VDP_OFFSET_LP_CTRL       0x008
#define REG_VDP_OFFSET_MEM_SPEEDCTRL 0x00c
#define REG_VDP_OFFSET_INTMASK       0x010

#define REG_VDP_OFFSET_SEC_PTB_L     0x100
#define REG_VDP_OFFSET_SEC_PTB_H     0x104
#define REG_VDP_OFFSET_STAG_RDCTL    0x110
#define REG_VDP_OFFSET_STAG_RDAC0    0x114
#define REG_VDP_OFFSET_STAG_RDAC1    0x118
#define REG_VDP_OFFSET_STAG_WRCTL    0x120
#define REG_VDP_OFFSET_STAG_WRAC0    0x124
#define REG_VDP_OFFSET_STAG_WRAC1    0x128
#define REG_VDP_OFFSET_RD_ERR_L      0x130
#define REG_VDP_OFFSET_RD_ERR_H      0x134
#define REG_VDP_OFFSET_WR_ERR_L      0x138
#define REG_VDP_OFFSET_WR_ERR_H      0x13C

#define VDP_VALUE_SCR           0x0
#define VDP_VALUE_LP_CTRL       0x6
#define VDP_VALUE_MEM_SPEEDCTRL 0x2d
#define VDP_VALUE_INTMASK       0x0

#define VDP_VALUE_STAG_RDCTL    0x1
#define VDP_VALUE_STAG_RDAC0    0xB0000100


#define VDP_VALUE_STAG_RDAC1    0xc
#define VDP_VALUE_STAG_WRCTL    0x0
#define VDP_VALUE_STAG_WRAC0    0xC0000100


#define VDP_VALUE_STAG_WRAC1    0x0

#define REG_VDP_VID_READ_CTRL_BASE   0xf3a200
#define REG_VDP_OFFSET_SMMU_BYPASS   0x20
#define VDP_VALUE_VID_SMMU_BYPASS    0x0
#define REG_VDP_VID1_READ_CTRL_BASE   0xf0a200
#define REG_VDP_VID3_READ_CTRL_BASE   0xf0a600

#define REG_GFX2D_SMMU_BYPASS_CTRL  0x01408000
#define REG_GFX2D_SMMU_BASE         0X0140f000
#define REG_GFX2D_OFFSET_SEC_PTB_L  0X100
#define REG_GFX2D_OFFSET_SEC_PTB_H  0X104
#define REG_GFX2D_OFFSET_RTAG_CTL   0X110
#define REG_GFX2D_OFFSET_RTAG_L     0X114
#define REG_GFX2D_OFFSET_RTAG_H     0X118
#define REG_GFX2D_OFFSET_WTAG_CTL   0X120
#define REG_GFX2D_OFFSET_WTAG_L     0X124
#define REG_GFX2D_OFFSET_WTAG_H     0X128
#define REG_GFX2D_OFFSET_R_ERR_L    0X130
#define REG_GFX2D_OFFSET_R_ERR_H    0X134
#define REG_GFX2D_OFFSET_W_ERR_L    0X138
#define REG_GFX2D_OFFSET_W_ERR_H    0X13C

#define GFX2D_VALUE_STAG_RDCTL      1
#define GFX2D_VALUE_STAG_RDAC0      0x20000400
#define GFX2D_VALUE_STAG_RDAC1      0xffffffff
#define GFX2D_VALUE_STAG_WRCTL      1
#define GFX2D_VALUE_STAG_WRAC0      0x400
#define GFX2D_VALUE_STAG_WRAC1      0

#define REG_HIFB_SMMU_BASE              0X00f0a800
#define REG_HIFB_OFFSET_G0_SMMU_BYPASS  0X020
#define REG_HIFB_OFFSET_G1_SMMU_BYPASS  0X220
#define REG_HIFB_OFFSET_G2_SMMU_BYPASS  0X420
#define REG_HIFB_OFFSET_G3_SMMU_BYPASS  0X620

#define HIFB_VALUE_SMMU_BYPASS          0x0

#define REG_TEE_VDP_OUT_CTRL0           0x00b602a0
#define TEE_VDP_OUT_CTRL0_MASK          0x78000000
#define REG_TEE_TZEN_CTRL               0x00b60280
#define TEE_TZEN_CTRL_MASK              0x20012

/* GPU Config */
#define GPU_CRG_REG_ADDR_BASE 0xa002d0
#define GPU_TEE_REG_ADDR_BASE 0xb60280
#define GPU_MMU_REG_ADDR_BASE 0x190F000

/* jpeg config */
#define REG_JPEG_MMU_BASE                  0x151F000
#define REG_TEE_CTRL_BASE                  0x00B60000

#define REG_JPEG_OFFSET_SMMU_SCR           0x000
#define REG_JPEG_OFFSET_SCB_TTBR_L         0x100
#define REG_JPEG_OFFSET_SCB_TTBR_H         0x104

#define REG_JPEG_OFFSET_STAG_RD_CTRL       0x110
#define REG_JPEG_OFFSET_STAG_RD_ACCESS0    0x114
#define REG_JPEG_OFFSET_STAG_RD_ACCESS1    0x118
#define REG_JPEG_OFFSET_STAG_WR_CTRL       0x120
#define REG_JPEG_OFFSET_ERR_RDADDR_L       0x130
#define REG_JPEG_OFFSET_ERR_RDADDR_H       0x134
#define REG_JPEG_OFFSET_STAG_WR_ACCESS0    0x124
#define REG_JPEG_OFFSET_STAG_WR_ACCESS1    0x128

#define REG_JPEG_OFFSET_BYPASS_CHN         0x134
#define REG_JPEG_OFFSET_ERR_WRADDR_L       0x138
#define REG_JPEG_OFFSET_ERR_WRADDR_H       0x13C
#define REG_JPEG_OFFSET_TZEN_CTRL          0x280

#define REG_JPEG_VALUE_BYPASS_CHM          0xff0000
#define REG_JPEG_VALUE_SMMU_ALLOW          0xFFFFFFFF
#define REG_JPEG_VALUE_SMMU_ENABLE         0x1
#define REG_JPEG_VALUE_SMMU_DISABLE        0x0

/* jpge config */
#define REG_JPGE_SMMU_BASE         0x0154f000
#define REG_JPGE_OFFSET_SEC_PTB_L  0X100
#define REG_JPGE_OFFSET_SEC_PTB_H  0X104
#define REG_JPGE_OFFSET_RTAG_CTL   0X110
#define REG_JPGE_OFFSET_RTAG_L     0X114
#define REG_JPGE_OFFSET_RTAG_H     0X118
#define REG_JPGE_OFFSET_WTAG_CTL   0X120
#define REG_JPGE_OFFSET_WTAG_L     0X124
#define REG_JPGE_OFFSET_WTAG_H     0X128
#define REG_JPGE_OFFSET_R_ERR_L    0X130
#define REG_JPGE_OFFSET_R_ERR_H    0X134
#define REG_JPGE_OFFSET_W_ERR_L    0X138
#define REG_JPGE_OFFSET_W_ERR_H    0X13C

#define JPGE_VALUE_STAG_RDCTL      1
#define JPGE_VALUE_STAG_RDAC0      0x60001000
#define JPGE_VALUE_STAG_RDAC1      0x0
#define JPGE_VALUE_STAG_WRCTL      1
#define JPGE_VALUE_STAG_WRAC0      0x1000
#define JPGE_VALUE_STAG_WRAC1      0x1

#define REG_JPGE_OFFSET_TZEN_CTRL  0x280
#define SHIFT_FOR_JPGE_18          18
#define REG_JPGE_OFFSET_SECINFO_CTRL  0x2c0

/* VENC reg addr */
#define VEDU_SMMU_REG_ADDR_BASE 0x150f000
#define VEDU_SMMU_CKEN_ADDR_OFFSET 0x0
#define VEDU_SMMU_SRST_ADDR_OFFSET 0x1

/* VICAP reg addr */
#define VICAP0_SMMU_REG_ADDR_BASE 0x00FCf000
#define VICAP1_SMMU_REG_ADDR_BASE 0x00FCf800

typedef enum {
    GPU_CRG_REG_OFFSET_SECURE_ENABLE = 16,
} gpu_crg_register_mask;

typedef enum {
    GPU_TEE_REG_TZ_ENABLE = 8,
} gpu_tee_register_mask;

typedef struct {
    hi_tee_logic_mod_id mod_id;
    hi_void (*iommu_cfg_handler)(hi_void);
} ssm_iommu_cfg_map;

typedef enum {
    GPU_MMU_REG_ADDR_SCR             = 0x0,
    GPU_MMU_REG_ADDR_SCB_TTBR        = 0x100,
    GPU_MMU_REG_ADDR_SCB_TTBR_H      = 0x104,

    GPU_MMU_REG_ADDR_STAG_RD_CTRL    = 0x110,
    GPU_MMU_REG_ADDR_STAG_RD_ACCESS0 = 0x114, /* RD: low address */
    GPU_MMU_REG_ADDR_STAG_RD_ACCESS1 = 0x118, /* RD: high address */

    GPU_MMU_REG_ADDR_STAG_WR_CTRL    = 0x120,
    GPU_MMU_REG_ADDR_STAG_WR_ACCESS0 = 0x124, /* WR: low address */
    GPU_MMU_REG_ADDR_STAG_WR_ACCESS1 = 0x128, /* WR: high address */
} gpu_mmu_register_addr;

typedef enum {
    GPU_MMU_REG_OFFSET_SECURE_R_ENABLE_GPU_ONLY = 9,
    GPU_MMU_REG_OFFSET_SECURE_R_ENABLE          = 28,
    GPU_MMU_REG_OFFSET_SECURE_W_ENABLE_GPU_ONLY = 9,
    GPU_MMU_REG_OFFSET_SECURE_W_ENABLE          = 2,
} gpu_mmu_register_mask;

hi_s32 ssm_set_reg(hi_u32 addr, hi_u32 val);

hi_void iommu_tag_init(void);

hi_s32 iommu_sec_config(hi_tee_logic_mod_id mod_id);

hi_void iommu_get_pgt_addr(hi_u64 *pgt_addr);

#endif
