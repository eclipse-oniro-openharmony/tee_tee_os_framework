/*
 * Copyright (C) 2015 MediaTek Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 */

#ifndef __M4U_PORT_H__
#define __M4U_PORT_H__

#define M4U_LARB_NR     (24) //including fake larb
#define SMI_LARB_NR     (21) //no fake larb
#define SMI_LARB_SZ		(0x1000)
#define M4U_PORT_NR (257)

/* smi larb base addr */
#define LARB0_BASE_PA	0x14118000
#define LARB1_BASE_PA	0x14119000
#define LARB2_BASE_PA	0x1F003000
#define LARB3_BASE_PA	0x1F004000
#define LARB4_BASE_PA	0x1602E000
#define LARB5_BASE_PA	0x1600D000
#define LARB6_BASE_PA	0x0
#define LARB7_BASE_PA	0x17010000
#define LARB8_BASE_PA	0x17810000
#define LARB9_BASE_PA	0x1502E000
#define LARB10_BASE_PA	0x0
#define LARB11_BASE_PA	0x1582E000
#define LARB12_BASE_PA	0x0
#define LARB13_BASE_PA	0x1A001000
#define LARB14_BASE_PA	0x1A002000
#define LARB15_BASE_PA	0x0
#define LARB16_BASE_PA	0x1A00F000
#define LARB17_BASE_PA	0x1A010000
#define LARB18_BASE_PA	0x1A011000
#define LARB19_BASE_PA	0x1B10F000
#define LARB20_BASE_PA	0x1B00F000

static unsigned long smiLarbBaseAddr[SMI_LARB_NR];
static unsigned long smiLarbBasePA[SMI_LARB_NR] = {LARB0_BASE_PA,
	LARB1_BASE_PA, LARB2_BASE_PA, LARB3_BASE_PA, LARB4_BASE_PA,
	LARB5_BASE_PA, LARB6_BASE_PA, LARB7_BASE_PA, LARB8_BASE_PA,
	LARB9_BASE_PA, LARB10_BASE_PA, LARB11_BASE_PA, LARB12_BASE_PA,
	LARB13_BASE_PA, LARB14_BASE_PA, LARB15_BASE_PA, LARB16_BASE_PA,
	LARB17_BASE_PA, LARB18_BASE_PA, LARB19_BASE_PA, LARB20_BASE_PA
};

#define MTK_M4U_ID(larb, port)	(((larb) << 5) | (port))
#define MTK_IOMMU_TO_LARB(id)	(((id) >> 5) & 0x1f)
#define MTK_IOMMU_TO_PORT(id)	((id) & 0x1f)
#define APU_PSEUDO_LARBID (21)
#define CCU_PSEUDO_LARBID_DISP (22)
#define CCU_PSEUDO_LARBID_MDP (23)

/* larb0 -- 15*/
#define M4U_PORT_L0_DISP_POSTMASK0	MTK_M4U_ID(0, 0)
#define M4U_PORT_L0_MDP_RDMA4		MTK_M4U_ID(0, 1)
#define M4U_PORT_L0_OVL_RDMA0_HDR		MTK_M4U_ID(0, 2)
#define M4U_PORT_L0_OVL_2L_RDMA1_HDR	MTK_M4U_ID(0, 3)
#define M4U_PORT_L0_OVL_2L_RDMA3_HDR	MTK_M4U_ID(0, 4)
#define M4U_PORT_L0_OVL_RDMA0	MTK_M4U_ID(0, 5)
#define M4U_PORT_L0_OVL_2L_RDMA1		MTK_M4U_ID(0, 6)
#define M4U_PORT_L0_OVL_2L_RDMA3	MTK_M4U_ID(0, 7)
#define M4U_PORT_L0_OVL_RDMA1_SYSRAM	MTK_M4U_ID(0, 8)
#define M4U_PORT_L0_OVL_2L_RDMA0_SYSRAM		MTK_M4U_ID(0, 9)
#define M4U_PORT_L0_OVL_2L_RDMA2_SYSRAM		MTK_M4U_ID(0, 10)
#define M4U_PORT_L0_DISP_WDMA0		MTK_M4U_ID(0, 11)
#define M4U_PORT_L0_DISP_RDMA0		MTK_M4U_ID(0, 12)
#define M4U_PORT_L0_DISP_UFBC_WDMA0		MTK_M4U_ID(0, 13)
#define M4U_PORT_L0_DISP_FAKE0		MTK_M4U_ID(0, 14)
/* larb1 -- 15*/
#define M4U_PORT_L1_DISP_POSTMASK1	MTK_M4U_ID(1, 0)
#define M4U_PORT_L1_MDP_RDMA5		MTK_M4U_ID(1, 1)
#define M4U_PORT_L1_OVL_RDMA1_HDR		MTK_M4U_ID(1, 2)
#define M4U_PORT_L1_OVL_2L_RDMA0_HDR	MTK_M4U_ID(1, 3)
#define M4U_PORT_L1_OVL_2L_RDMA2_HDR	MTK_M4U_ID(1, 4)
#define M4U_PORT_L1_OVL_RDMA1	MTK_M4U_ID(1, 5)
#define M4U_PORT_L1_OVL_2L_RDMA0		MTK_M4U_ID(1, 6)
#define M4U_PORT_L1_OVL_2L_RDMA2	MTK_M4U_ID(1, 7)
#define M4U_PORT_L1_OVL_RDMA0_SYSRAM	MTK_M4U_ID(1, 8)
#define M4U_PORT_L1_OVL_2L_RDMA1_SYSRAM		MTK_M4U_ID(1, 9)
#define M4U_PORT_L1_OVL_2L_RDMA3_SYSRAM		MTK_M4U_ID(1, 10)
#define M4U_PORT_L1_DISP_WDMA1		MTK_M4U_ID(1, 11)
#define M4U_PORT_L1_DISP_RDMA1		MTK_M4U_ID(1, 12)
#define M4U_PORT_L1_DISP_UFBC_WDMA1		MTK_M4U_ID(1, 13)
#define M4U_PORT_L1_DISP_FAKE1		MTK_M4U_ID(1, 14)
/* larb2 -- 6*/
#define M4U_PORT_L2_MDP_RDMA0		MTK_M4U_ID(2, 0)
#define M4U_PORT_L2_MDP_RDMA2		MTK_M4U_ID(2, 1)
#define M4U_PORT_L2_MDP_WROT0		MTK_M4U_ID(2, 2)
#define M4U_PORT_L2_MDP_WROT2		MTK_M4U_ID(2, 3)
#define M4U_PORT_L2_MDP_FILMGRAIN0	MTK_M4U_ID(2, 4)
#define M4U_PORT_L2_MDP_FAKE0		MTK_M4U_ID(2, 5)
/* larb3 -- 6*/
#define M4U_PORT_L3_MDP_RDMA1		MTK_M4U_ID(3, 0)
#define M4U_PORT_L3_MDP_RDMA3		MTK_M4U_ID(3, 1)
#define M4U_PORT_L3_MDP_WROT1		MTK_M4U_ID(3, 2)
#define M4U_PORT_L3_MDP_WROT3		MTK_M4U_ID(3, 3)
#define M4U_PORT_L3_MDP_FILMGRAIN1	MTK_M4U_ID(3, 4)
#define M4U_PORT_L3_MDP_FAKE1		MTK_M4U_ID(3, 5)
/* larb4 -- 11*/
#define M4U_PORT_L4_VDEC_MC_EXT_MDP		MTK_M4U_ID(4, 0)
#define M4U_PORT_L4_VDEC_UFO_EXT_MDP		MTK_M4U_ID(4, 1)
#define M4U_PORT_L4_VDEC_PP_EXT_MDP		MTK_M4U_ID(4, 2)
#define M4U_PORT_L4_VDEC_PRED_RD_EXT_MDP	MTK_M4U_ID(4, 3)
#define M4U_PORT_L4_VDEC_PRED_WR_EXT_MDP	MTK_M4U_ID(4, 4)
#define M4U_PORT_L4_VDEC_PPWRAP_EXT_MDP		MTK_M4U_ID(4, 5)
#define M4U_PORT_L4_VDEC_TILE_EXT_MDP		MTK_M4U_ID(4, 6)
#define M4U_PORT_L4_VDEC_VLD_EXT_MDP		MTK_M4U_ID(4, 7)
#define M4U_PORT_L4_VDEC_VLD2_EXT_MDP		MTK_M4U_ID(4, 8)
#define M4U_PORT_L4_VDEC_AVC_MV_EXT_MDP		MTK_M4U_ID(4, 9)
#define M4U_PORT_L4_VDEC_RG_CTRL_DMA_EXT_MDP	MTK_M4U_ID(4, 10)
/* larb5 -- 8*/
#define M4U_PORT_L5_VDEC_LAT0_VLD_EXT_DISP	MTK_M4U_ID(5, 0)
#define M4U_PORT_L5_VDEC_LAT0_VLD2_EXT_DISP	MTK_M4U_ID(5, 1)
#define M4U_PORT_L5_VDEC_LAT0_AVC_MV_EXT_DISP	MTK_M4U_ID(5, 2)
#define M4U_PORT_L5_VDEC_LAT0_PRED_RD_EXT_DISP	MTK_M4U_ID(5, 3)
#define M4U_PORT_L5_VDEC_LAT0_TILE_EXT_DISP	MTK_M4U_ID(5, 4)
#define M4U_PORT_L5_VDEC_LAT0_WDMA_EXT_DISP	MTK_M4U_ID(5, 5)
#define M4U_PORT_L5_VDEC_LAT0_RG_CTRL_DMA_EXT_DISP	MTK_M4U_ID(5, 6)
#define M4U_PORT_L5_VDEC_UFO_ENC_EXT_DISP	MTK_M4U_ID(5, 7)
/* larb6 -- not existed*/
/* larb7 --/ 27*/
#define M4U_PORT_L7_VENC_RCPU_DISP		MTK_M4U_ID(7, 0)
#define M4U_PORT_L7_VENC_REC_DISP		MTK_M4U_ID(7, 1)
#define M4U_PORT_L7_VENC_BSDMA_DISP		MTK_M4U_ID(7, 2)
#define M4U_PORT_L7_VENC_SV_COMV_DISP		MTK_M4U_ID(7, 3)
#define M4U_PORT_L7_VENC_RD_COMV_DISP		MTK_M4U_ID(7, 4)
#define M4U_PORT_L7_VENC_NBM_RDMA_DISP		MTK_M4U_ID(7, 5)
#define M4U_PORT_L7_VENC_NBM_RDMA_LITE_DISP	MTK_M4U_ID(7, 6)
#define M4U_PORT_L7_JPGENC_Y_RDMA_DISP		MTK_M4U_ID(7, 7)
#define M4U_PORT_L7_JPGENC_C_RDMA_DISP		MTK_M4U_ID(7, 8)
#define M4U_PORT_L7_JPGENC_Q_TABLE_DISP		MTK_M4U_ID(7, 9)
#define M4U_PORT_L7_JPGENC_BSDMA_DISP		MTK_M4U_ID(7, 10)
#define M4U_PORT_L7_JPGENC_WDMA0_DISP		MTK_M4U_ID(7, 11)
#define M4U_PORT_L7_JPGENC_BSDMA0_DISP		MTK_M4U_ID(7, 12)
#define M4U_PORT_L7_VENC_NBM_WDMA_DISP		MTK_M4U_ID(7, 13)
#define M4U_PORT_L7_VENC_NBM_WDMA_LITE_DISP	MTK_M4U_ID(7, 14)
#define M4U_PORT_L7_VENC_CUR_LUMA_DISP		MTK_M4U_ID(7, 15)
#define M4U_PORT_L7_VENC_CUR_CHROMA_DISP	MTK_M4U_ID(7, 16)
#define M4U_PORT_L7_VENC_REF_LUMA_DISP		MTK_M4U_ID(7, 17)
#define M4U_PORT_L7_VENC_REF_CHROMA_DISP	MTK_M4U_ID(7, 18)
#define M4U_PORT_L7_VENC_SUB_R_LUMA_DISP	MTK_M4U_ID(7, 19)
#define M4U_PORT_L7_VENC_SUB_W_LUMA_DISP	MTK_M4U_ID(7, 20)
#define M4U_PORT_L7_VENC_FCS_NBM_RDMA_DISP	MTK_M4U_ID(7, 21)
#define M4U_PORT_L7_VENC_FCS_NBM_WDMA_DISP	MTK_M4U_ID(7, 22)
#define M4U_PORT_L7_JPGENC_WDMA1_DISP		MTK_M4U_ID(7, 23)
#define M4U_PORT_L7_JPGENC_BSDMA1_DISP		MTK_M4U_ID(7, 24)
#define M4U_PORT_L7_JPGENC_HUFF_OFFSET1_DISP	MTK_M4U_ID(7, 25)
#define M4U_PORT_L7_JPGENC_HUFF_OFFSET0_DISP	MTK_M4U_ID(7, 26)
/* larb8 -- 27*/
#define M4U_PORT_L8_VENC_RCPU_MDP		MTK_M4U_ID(8, 0)
#define M4U_PORT_L8_VENC_REC_MDP		MTK_M4U_ID(8, 1)
#define M4U_PORT_L8_VENC_BSDMA_MDP		MTK_M4U_ID(8, 2)
#define M4U_PORT_L8_VENC_SV_COMV_MDP		MTK_M4U_ID(8, 3)
#define M4U_PORT_L8_VENC_RD_COMV_MDP		MTK_M4U_ID(8, 4)
#define M4U_PORT_L8_VENC_NBM_RDMA_MDP		MTK_M4U_ID(8, 5)
#define M4U_PORT_L8_VENC_NBM_RDMA_LITE_MDP	MTK_M4U_ID(8, 6)
#define M4U_PORT_L8_JPGENC_Y_RDMA_MDP		MTK_M4U_ID(8, 7)
#define M4U_PORT_L8_JPGENC_C_RDMA_MDP		MTK_M4U_ID(8, 8)
#define M4U_PORT_L8_JPGENC_Q_TABLE_MDP		MTK_M4U_ID(8, 9)
#define M4U_PORT_L8_JPGENC_BSDMA_MDP		MTK_M4U_ID(8, 10)
#define M4U_PORT_L8_JPGENC_WDMA0_MDP		MTK_M4U_ID(8, 11)
#define M4U_PORT_L8_JPGENC_BSDMA0_MDP		MTK_M4U_ID(8, 12)
#define M4U_PORT_L8_VENC_NBM_WDMA_MDP		MTK_M4U_ID(8, 13)
#define M4U_PORT_L8_VENC_NBM_WDMA_LITE_MDP	MTK_M4U_ID(8, 14)
#define M4U_PORT_L8_VENC_CUR_LUMA_MDP		MTK_M4U_ID(8, 15)
#define M4U_PORT_L8_VENC_CUR_CHROMA_MDP		MTK_M4U_ID(8, 16)
#define M4U_PORT_L8_VENC_REF_LUMA_MDP		MTK_M4U_ID(8, 17)
#define M4U_PORT_L8_VENC_REF_CHROMA_MDP		MTK_M4U_ID(8, 18)
#define M4U_PORT_L8_VENC_SUB_R_LUMA_MDP		MTK_M4U_ID(8, 19)
#define M4U_PORT_L8_VENC_SUB_W_LUMA_MDP		MTK_M4U_ID(8, 20)
#define M4U_PORT_L8_VENC_FCS_NBM_RDMA_MDP	MTK_M4U_ID(8, 21)
#define M4U_PORT_L8_VENC_FCS_NBM_WDMA_MDP	MTK_M4U_ID(8, 22)
#define M4U_PORT_L8_JPGENC_WDMA1_MDP		MTK_M4U_ID(8, 23)
#define M4U_PORT_L8_JPGENC_BSDMA1_MDP		MTK_M4U_ID(8, 24)
#define M4U_PORT_L8_JPGENC_HUFF_OFFSET1_MDP	MTK_M4U_ID(8, 25)
#define M4U_PORT_L8_JPGENC_HUFF_OFFSET0_MDP	MTK_M4U_ID(8, 26)
/* larb9 -- 29*/
#define M4U_PORT_L9_IMG_IMGI_D1_MDP	MTK_M4U_ID(9, 0)
#define M4U_PORT_L9_IMG_IMGBI_D1_MDP	MTK_M4U_ID(9, 1)
#define M4U_PORT_L9_IMG_DMGI_D1_MDP	MTK_M4U_ID(9, 2)
#define M4U_PORT_L9_IMG_DEPI_D1_MDP	MTK_M4U_ID(9, 3)
#define M4U_PORT_L9_IMG_ICE_D1_MDP	MTK_M4U_ID(9, 4)
#define M4U_PORT_L9_IMG_SMTI_D1_MDP	MTK_M4U_ID(9, 5)
#define M4U_PORT_L9_IMG_SMTO_D2_MDP	MTK_M4U_ID(9, 6)
#define M4U_PORT_L9_IMG_SMTO_D1_MDP	MTK_M4U_ID(9, 7)
#define M4U_PORT_L9_IMG_CRZO_D1_MDP	MTK_M4U_ID(9, 8)
#define M4U_PORT_L9_IMG_IMG3O_D1_MDP	MTK_M4U_ID(9, 9)
#define M4U_PORT_L9_IMG_VIPI_D1_MDP	MTK_M4U_ID(9, 10)
#define M4U_PORT_L9_IMG_SMTI_D5_MDP	MTK_M4U_ID(9, 11)
#define M4U_PORT_L9_IMG_TIMGO_D1_MDP	MTK_M4U_ID(9, 12)
#define M4U_PORT_L9_IMG_UFBC_W0_MDP	MTK_M4U_ID(9, 13)
#define M4U_PORT_L9_IMG_UFBC_R0_MDP	MTK_M4U_ID(9, 14)
#define M4U_PORT_L9_IMG_WPE_RDMA1_MDP	MTK_M4U_ID(9, 15)
#define M4U_PORT_L9_IMG_WPE_RDMA0_MDP	MTK_M4U_ID(9, 16)
#define M4U_PORT_L9_IMG_WPE_WDMA_MDP	MTK_M4U_ID(9, 17)
#define M4U_PORT_L9_IMG_MFB_RDMA0_MDP	MTK_M4U_ID(9, 18)
#define M4U_PORT_L9_IMG_MFB_RDMA1_MDP	MTK_M4U_ID(9, 19)
#define M4U_PORT_L9_IMG_MFB_RDMA2_MDP	MTK_M4U_ID(9, 20)
#define M4U_PORT_L9_IMG_MFB_RDMA3_MDP	MTK_M4U_ID(9, 21)
#define M4U_PORT_L9_IMG_MFB_RDMA4_MDP	MTK_M4U_ID(9, 22)
#define M4U_PORT_L9_IMG_MFB_RDMA5_MDP	MTK_M4U_ID(9, 23)
#define M4U_PORT_L9_IMG_MFB_WDMA0_MDP	MTK_M4U_ID(9, 24)
#define M4U_PORT_L9_IMG_MFB_WDMA1_MDP	MTK_M4U_ID(9, 25)
#define M4U_PORT_L9_IMG_RESERVE6_MDP	MTK_M4U_ID(9, 26)
#define M4U_PORT_L9_IMG_RESERVE7_MDP	MTK_M4U_ID(9, 27)
#define M4U_PORT_L9_IMG_RESERVE8_MDP	MTK_M4U_ID(9, 28)
/* larb10 -- not existed*/
/* larb11 -- 29*/
#define M4U_PORT_L11_IMG_IMGI_D1_DISP	MTK_M4U_ID(11, 0)
#define M4U_PORT_L11_IMG_IMGBI_D1_DISP	MTK_M4U_ID(11, 1)
#define M4U_PORT_L11_IMG_DMGI_D1_DISP	MTK_M4U_ID(11, 2)
#define M4U_PORT_L11_IMG_DEPI_D1_DISP	MTK_M4U_ID(11, 3)
#define M4U_PORT_L11_IMG_ICE_D1_DISP	MTK_M4U_ID(11, 4)
#define M4U_PORT_L11_IMG_SMTI_D1_DISP	MTK_M4U_ID(11, 5)
#define M4U_PORT_L11_IMG_SMTO_D2_DISP	MTK_M4U_ID(11, 6)
#define M4U_PORT_L11_IMG_SMTO_D1_DISP	MTK_M4U_ID(11, 7)
#define M4U_PORT_L11_IMG_CRZO_D1_DISP	MTK_M4U_ID(11, 8)
#define M4U_PORT_L11_IMG_IMG3O_D1_DISP	MTK_M4U_ID(11, 9)
#define M4U_PORT_L11_IMG_VIPI_D1_DISP	MTK_M4U_ID(11, 10)
#define M4U_PORT_L11_IMG_SMTI_D5_DISP	MTK_M4U_ID(11, 11)
#define M4U_PORT_L11_IMG_TIMGO_D1_DISP	MTK_M4U_ID(11, 12)
#define M4U_PORT_L11_IMG_UFBC_W0_DISP	MTK_M4U_ID(11, 13)
#define M4U_PORT_L11_IMG_UFBC_R0_DISP	MTK_M4U_ID(11, 14)
#define M4U_PORT_L11_IMG_WPE_RDMA1_DISP	MTK_M4U_ID(11, 15)
#define M4U_PORT_L11_IMG_WPE_RDMA0_DISP	MTK_M4U_ID(11, 16)
#define M4U_PORT_L11_IMG_WPE_WDMA_DISP	MTK_M4U_ID(11, 17)
#define M4U_PORT_L11_IMG_MFB_RDMA0_DISP	MTK_M4U_ID(11, 18)
#define M4U_PORT_L11_IMG_MFB_RDMA1_DISP	MTK_M4U_ID(11, 19)
#define M4U_PORT_L11_IMG_MFB_RDMA2_DISP	MTK_M4U_ID(11, 20)
#define M4U_PORT_L11_IMG_MFB_RDMA3_DISP	MTK_M4U_ID(11, 21)
#define M4U_PORT_L11_IMG_MFB_RDMA4_DISP	MTK_M4U_ID(11, 22)
#define M4U_PORT_L11_IMG_MFB_RDMA5_DISP	MTK_M4U_ID(11, 23)
#define M4U_PORT_L11_IMG_MFB_WDMA0_DISP	MTK_M4U_ID(11, 24)
#define M4U_PORT_L11_IMG_MFB_WDMA1_DISP	MTK_M4U_ID(11, 25)
#define M4U_PORT_L11_IMG_RESERVE6_DISP	MTK_M4U_ID(11, 26)
#define M4U_PORT_L11_IMG_RESERVE7_DISP	MTK_M4U_ID(11, 27)
#define M4U_PORT_L11_IMG_RESERVE8_DISP	MTK_M4U_ID(11, 28)
/* larb12 -- not existed*/
/* larb13 -- 12*/
#define M4U_PORT_L13_CAM_MRAWI_MDP	MTK_M4U_ID(13, 0)
#define M4U_PORT_L13_CAM_MRAWO0_MDP	MTK_M4U_ID(13, 1)
#define M4U_PORT_L13_CAM_MRAWO1_MDP	MTK_M4U_ID(13, 2)
#define M4U_PORT_L13_CAM_CAMSV1_MDP	MTK_M4U_ID(13, 3)
#define M4U_PORT_L13_CAM_CAMSV2_MDP	MTK_M4U_ID(13, 4)
#define M4U_PORT_L13_CAM_CAMSV3_MDP	MTK_M4U_ID(13, 5)
#define M4U_PORT_L13_CAM_CAMSV4_MDP	MTK_M4U_ID(13, 6)
#define M4U_PORT_L13_CAM_CAMSV5_MDP	MTK_M4U_ID(13, 7)
#define M4U_PORT_L13_CAM_CAMSV6_MDP	MTK_M4U_ID(13, 8)
#define M4U_PORT_L13_CAM_CCUI_MDP	MTK_M4U_ID(13, 9)
#define M4U_PORT_L13_CAM_CCUO_MDP	MTK_M4U_ID(13, 10)
#define M4U_PORT_L13_CAM_FAKE_MDP	MTK_M4U_ID(13, 11)
/* larb14 -- 6*/
#define M4U_PORT_L14_CAM_MRAWI_DISP	MTK_M4U_ID(14, 0)
#define M4U_PORT_L14_CAM_MRAWO0_DISP	MTK_M4U_ID(14, 1)
#define M4U_PORT_L14_CAM_MRAWO1_DISP	MTK_M4U_ID(14, 2)
#define M4U_PORT_L14_CAM_CAMSV0_DISP	MTK_M4U_ID(14, 3)
#define M4U_PORT_L14_CAM_CCUI_DISP	MTK_M4U_ID(14, 4)
#define M4U_PORT_L14_CAM_CCUO_DISP	MTK_M4U_ID(14, 5)
/* larb15 -- no iommu user*/
/* larb16 -- 17*/
#define M4U_PORT_L16_CAM_IMGO_R1_A_MDP	MTK_M4U_ID(16, 0)
#define M4U_PORT_L16_CAM_RRZO_R1_A_MDP	MTK_M4U_ID(16, 1)
#define M4U_PORT_L16_CAM_CQI_R1_A_MDP	MTK_M4U_ID(16, 2)
#define M4U_PORT_L16_CAM_BPCI_R1_A_MDP	MTK_M4U_ID(16, 3)
#define M4U_PORT_L16_CAM_YUVO_R1_A_MDP	MTK_M4U_ID(16, 4)
#define M4U_PORT_L16_CAM_UFDI_R2_A_MDP	MTK_M4U_ID(16, 5)
#define M4U_PORT_L16_CAM_RAWI_R2_A_MDP	MTK_M4U_ID(16, 6)
#define M4U_PORT_L16_CAM_RAWI_R3_A_MDP	MTK_M4U_ID(16, 7)
#define M4U_PORT_L16_CAM_AAO_R1_A_MDP	MTK_M4U_ID(16, 8)
#define M4U_PORT_L16_CAM_AFO_R1_A_MDP	MTK_M4U_ID(16, 9)
#define M4U_PORT_L16_CAM_FLKO_R1_A_MDP	MTK_M4U_ID(16, 10)
#define M4U_PORT_L16_CAM_LCESO_R1_A_MDP	MTK_M4U_ID(16, 11)
#define M4U_PORT_L16_CAM_CRZO_R1_A_MDP	MTK_M4U_ID(16, 12)
#define M4U_PORT_L16_CAM_LTMSO_R1_A_MDP	MTK_M4U_ID(16, 13)
#define M4U_PORT_L16_CAM_RSSO_R1_A_MDP	MTK_M4U_ID(16, 14)
#define M4U_PORT_L16_CAM_AAHO_R1_A_MDP	MTK_M4U_ID(16, 15)
#define M4U_PORT_L16_CAM_LSCI_R1_A_MDP	MTK_M4U_ID(16, 16)
/* larb17 -- 17*/
#define M4U_PORT_L17_CAM_IMGO_R1_B_DISP		MTK_M4U_ID(17, 0)
#define M4U_PORT_L17_CAM_RRZO_R1_B_DISP		MTK_M4U_ID(17, 1)
#define M4U_PORT_L17_CAM_CQI_R1_B_DISP		MTK_M4U_ID(17, 2)
#define M4U_PORT_L17_CAM_BPCI_R1_B_DISP		MTK_M4U_ID(17, 3)
#define M4U_PORT_L17_CAM_YUVO_R1_B_DISP		MTK_M4U_ID(17, 4)
#define M4U_PORT_L17_CAM_UFDI_R2_B_DISP		MTK_M4U_ID(17, 5)
#define M4U_PORT_L17_CAM_RAWI_R2_B_DISP		MTK_M4U_ID(17, 6)
#define M4U_PORT_L17_CAM_RAWI_R3_B_DISP		MTK_M4U_ID(17, 7)
#define M4U_PORT_L17_CAM_AAO_R1_B_DISP		MTK_M4U_ID(17, 8)
#define M4U_PORT_L17_CAM_AFO_R1_B_DISP		MTK_M4U_ID(17, 9)
#define M4U_PORT_L17_CAM_FLKO_R1_B_DISP		MTK_M4U_ID(17, 10)
#define M4U_PORT_L17_CAM_LCESO_R1_B_DISP	MTK_M4U_ID(17, 11)
#define M4U_PORT_L17_CAM_CRZO_R1_B_DISP		MTK_M4U_ID(17, 12)
#define M4U_PORT_L17_CAM_LTMSO_R1_B_DISP	MTK_M4U_ID(17, 13)
#define M4U_PORT_L17_CAM_RSSO_R1_B_DISP		MTK_M4U_ID(17, 14)
#define M4U_PORT_L17_CAM_AAHO_R1_B_DISP		MTK_M4U_ID(17, 15)
#define M4U_PORT_L17_CAM_LSCI_R1_B_DISP		MTK_M4U_ID(17, 16)
/* larb18 -- 17*/
#define M4U_PORT_L18_CAM_IMGO_R1_C_MDP	MTK_M4U_ID(18, 0)
#define M4U_PORT_L18_CAM_RRZO_R1_C_MDP	MTK_M4U_ID(18, 1)
#define M4U_PORT_L18_CAM_CQI_R1_C_MDP	MTK_M4U_ID(18, 2)
#define M4U_PORT_L18_CAM_BPCI_R1_C_MDP	MTK_M4U_ID(18, 3)
#define M4U_PORT_L18_CAM_YUVO_R1_C_MDP	MTK_M4U_ID(18, 4)
#define M4U_PORT_L18_CAM_UFDI_R2_C_MDP	MTK_M4U_ID(18, 5)
#define M4U_PORT_L18_CAM_RAWI_R2_C_MDP	MTK_M4U_ID(18, 6)
#define M4U_PORT_L18_CAM_RAWI_R3_C_MDP	MTK_M4U_ID(18, 7)
#define M4U_PORT_L18_CAM_AAO_R1_C_MDP	MTK_M4U_ID(18, 8)
#define M4U_PORT_L18_CAM_AFO_R1_C_MDP	MTK_M4U_ID(18, 9)
#define M4U_PORT_L18_CAM_FLKO_R1_C_MDP	MTK_M4U_ID(18, 10)
#define M4U_PORT_L18_CAM_LCESO_R1_C_MDP	MTK_M4U_ID(18, 11)
#define M4U_PORT_L18_CAM_CRZO_R1_C_MDP	MTK_M4U_ID(18, 12)
#define M4U_PORT_L18_CAM_LTMSO_R1_C_MDP	MTK_M4U_ID(18, 13)
#define M4U_PORT_L18_CAM_RSSO_R1_C_MDP	MTK_M4U_ID(18, 14)
#define M4U_PORT_L18_CAM_AAHO_R1_C_MDP	MTK_M4U_ID(18, 15)
#define M4U_PORT_L18_CAM_LSCI_R1_C_MDP	MTK_M4U_ID(18, 16)
/* larb19 -- 4*/
#define M4U_PORT_L19_IPE_DVS_RDMA_DISP	MTK_M4U_ID(19, 0)
#define M4U_PORT_L19_IPE_DVS_WDMA_DISP	MTK_M4U_ID(19, 1)
#define M4U_PORT_L19_IPE_DVP_RDMA_DISP	MTK_M4U_ID(19, 2)
#define M4U_PORT_L19_IPE_DVP_WDMA_DISP	MTK_M4U_ID(19, 3)
/* larb20 -- 6*/
#define M4U_PORT_L20_IPE_FDVT_RDA_DISP	MTK_M4U_ID(20, 0)
#define M4U_PORT_L20_IPE_FDVT_RDB_DISP	MTK_M4U_ID(20, 1)
#define M4U_PORT_L20_IPE_FDVT_WRA_DISP	MTK_M4U_ID(20, 2)
#define M4U_PORT_L20_IPE_FDVT_WRB_DISP	MTK_M4U_ID(20, 3)
#define M4U_PORT_L20_IPE_RSC_RDMA0_DISP	MTK_M4U_ID(20, 4)
#define M4U_PORT_L20_IPE_RSC_WDMA_DISP	MTK_M4U_ID(20, 5)

#define M4U_PORT_L21_APU_FAKE_CODE  MTK_M4U_ID(APU_PSEUDO_LARBID, 0)
#define M4U_PORT_L21_APU_FAKE_DATA  MTK_M4U_ID(APU_PSEUDO_LARBID, 1)
#define M4U_PORT_L21_APU_FAKE_VLM  MTK_M4U_ID(APU_PSEUDO_LARBID, 2)
#define M4U_PORT_L22_CCU_DISP  MTK_M4U_ID(CCU_PSEUDO_LARBID_DISP, 0)
#define M4U_PORT_L23_CCU_MDP  MTK_M4U_ID(CCU_PSEUDO_LARBID_MDP, 0)
#define M4U_PORT_UNKNOWN	(M4U_PORT_L23_CCU_MDP + 1)
#define M4U_PORT_APU	M4U_PORT_L21_APU_FAKE_DATA

#define M4U_PORT_DISPLAY_MIN (M4U_PORT_L0_DISP_POSTMASK0)
#define M4U_PORT_DISPLAY_MAX (M4U_PORT_L1_DISP_FAKE1)

#define SLAVE_L0 (0)
#define SLAVE_L1 (0)
#define SLAVE_L2 (0)
#define SLAVE_L3 (0)
#define SLAVE_L4 (0)
#define SLAVE_L5 (0)
#define SLAVE_L7 (0)
#define SLAVE_L8 (0)
#define SLAVE_L9 (0)
#define SLAVE_L11 (0)
#define SLAVE_L13 (0)
#define SLAVE_L14 (0)
#define SLAVE_L16 (0)
#define SLAVE_L17 (0)
#define SLAVE_L18 (0)
#define SLAVE_L19 (0)
#define SLAVE_L20 (0)
#define SLAVE_APU (0)
#define SLAVE_CCU_DISP (0)
#define SLAVE_CCU_MDP (0)

/* MM_IOMMU AXI_ID */
#define TF_LARB_L0 (0x0)
#define TF_LARB_L1 (0x4)
#define TF_LARB_L2 (0x0)
#define TF_LARB_L3 (0x4)
#define TF_LARB_L4 (0x8)
#define TF_LARB_L5 (0x8)
#define TF_LARB_L7 (0xc)
#define TF_LARB_L8 (0xc)
#define TF_LARB_L9 (0x10)
#define TF_LARB_L11 (0x10)
#define TF_LARB_L13 (0x19)
#define TF_LARB_L14 (0x19)
#define TF_LARB_L16 (0x1c)
#define TF_LARB_L17 (0x1c)
#define TF_LARB_L18 (0x14)
#define TF_LARB_L19 (0x14)
#define TF_LARB_L20 (0x15)
#define TF_APU (0x0)
#define TF_CCU_DISP (0x18)
#define TF_CCU_MDP (0x18)

struct mtk_iommu_port {
	char *name;
	unsigned m4u_id: 2;
	unsigned m4u_slave: 2;
	unsigned larb_id: 6;
	unsigned larb_port: 8;
	unsigned tf_id: 14;     /* 14 bits */
};
#define MTK_IOMMU_PORT_INIT(name, id, slave, larb, tf_larb, port)  {\
	name, id, slave, larb, port, (((tf_larb)<<7)|((port)<<2))\
}
static struct mtk_iommu_port iommu_port[] = {
	/*Larb0 */
	MTK_IOMMU_PORT_INIT("L0_DISP_POSTMASK0", 0,
		SLAVE_L0, 0, TF_LARB_L0, 0),
	MTK_IOMMU_PORT_INIT("L0_MDP_RDMA4", 0,
		SLAVE_L0, 0, TF_LARB_L0, 1),
	MTK_IOMMU_PORT_INIT("L0_OVL_RDMA0_HDR", 0,
		SLAVE_L0, 0, TF_LARB_L0, 2),
	MTK_IOMMU_PORT_INIT("L0_OVL_2L_RDMA1_HDR", 0,
		SLAVE_L0, 0, TF_LARB_L0, 3),
	MTK_IOMMU_PORT_INIT("L0_OVL_2L_RDMA3_HDR", 0,
		SLAVE_L0, 0, TF_LARB_L0, 4),
	MTK_IOMMU_PORT_INIT("L0_OVL_RDMA0", 0,
		SLAVE_L0, 0, TF_LARB_L0, 5),
	MTK_IOMMU_PORT_INIT("L0_OVL_2L_RDMA1", 0,
		SLAVE_L0, 0, TF_LARB_L0, 6),
	MTK_IOMMU_PORT_INIT("L0_OVL_2L_RDMA3", 0,
		SLAVE_L0, 0, TF_LARB_L0, 7),
	MTK_IOMMU_PORT_INIT("L0_OVL_RDMA1_SYSRAM", 0,
		SLAVE_L0, 0, TF_LARB_L0, 8),
	MTK_IOMMU_PORT_INIT("L0_OVL_2L_RDMA0_SYSRAM	", 0,
		SLAVE_L0, 0, TF_LARB_L0, 9),
	MTK_IOMMU_PORT_INIT("L0_OVL_2L_RDMA2_SYSRAM", 0,
		SLAVE_L0, 0, TF_LARB_L0, 10),
	MTK_IOMMU_PORT_INIT("L0_DISP_WDMA0", 0,
		SLAVE_L0, 0, TF_LARB_L0, 11),
	MTK_IOMMU_PORT_INIT("L0_DISP_RDMA0", 0,
		SLAVE_L0, 0, TF_LARB_L0, 12),
	MTK_IOMMU_PORT_INIT("L0_DISP_UFBC_WDMA0", 0,
		SLAVE_L0, 0, TF_LARB_L0, 13),
	MTK_IOMMU_PORT_INIT("L0_DISP_FAKE0	", 0,
		SLAVE_L0, 0, TF_LARB_L0, 14),
	/*Larb1 */
	MTK_IOMMU_PORT_INIT("L1_DISP_POSTMASK1", 0,
		SLAVE_L1, 1, TF_LARB_L1, 0),
	MTK_IOMMU_PORT_INIT("L1_MDP_RDMA5", 0,
		SLAVE_L1, 1, TF_LARB_L1, 1),
	MTK_IOMMU_PORT_INIT("L1_OVL_RDMA1_HDR", 0,
		SLAVE_L1, 1, TF_LARB_L1, 2),
	MTK_IOMMU_PORT_INIT("L1_OVL_2L_RDMA0_HDR", 0,
		SLAVE_L1, 1, TF_LARB_L1, 3),
	MTK_IOMMU_PORT_INIT("L1_OVL_2L_RDMA2_HDR", 0,
		SLAVE_L1, 1, TF_LARB_L1, 4),
	MTK_IOMMU_PORT_INIT("L1_OVL_RDMA1_HDR", 0,
		SLAVE_L1, 1, TF_LARB_L1, 5),
	MTK_IOMMU_PORT_INIT("L1_OVL_2L_RDMA0", 0,
		SLAVE_L1, 1, TF_LARB_L1, 6),
	MTK_IOMMU_PORT_INIT("L1_OVL_2L_RDMA2", 0,
		SLAVE_L1, 1, TF_LARB_L1, 7),
	MTK_IOMMU_PORT_INIT("L1_OVL_RDMA0_SYSRAM", 0,
		SLAVE_L1, 1, TF_LARB_L1, 8),
	MTK_IOMMU_PORT_INIT("L1_OVL_2L_RDMA1_SYSRAM", 0,
		SLAVE_L1, 1, TF_LARB_L1, 9),
	MTK_IOMMU_PORT_INIT("L1_OVL_2L_RDMA3_SYSRAM", 0,
		SLAVE_L1, 1, TF_LARB_L1, 10),
	MTK_IOMMU_PORT_INIT("L1_DISP_WDMA1", 0,
		SLAVE_L1, 1, TF_LARB_L1, 11),
	MTK_IOMMU_PORT_INIT("L1_DISP_RDMA1", 0,
		SLAVE_L1, 1, TF_LARB_L1, 12),
	MTK_IOMMU_PORT_INIT("L1_DISP_UFBC_WDMA1", 0,
		SLAVE_L1, 1, TF_LARB_L1, 13),
	MTK_IOMMU_PORT_INIT("L1_DISP_FAKE1", 0,
		SLAVE_L1, 1, TF_LARB_L1, 14),
	/*Larb2 */
	MTK_IOMMU_PORT_INIT("L2_MDP_RDMA0", 1,
		SLAVE_L2, 2, TF_LARB_L2, 0),
	MTK_IOMMU_PORT_INIT("L2_MDP_RDMA2", 1,
		SLAVE_L2, 2, TF_LARB_L2, 1),
	MTK_IOMMU_PORT_INIT("L2_MDP_WROT0", 1,
		SLAVE_L2, 2, TF_LARB_L2, 2),
	MTK_IOMMU_PORT_INIT("L2_MDP_WROT2", 1,
		SLAVE_L2, 2, TF_LARB_L2, 3),
	MTK_IOMMU_PORT_INIT("L2_MDP_FILMGRAIN0", 1,
		SLAVE_L2, 2, TF_LARB_L2, 4),
	MTK_IOMMU_PORT_INIT("L2_MDP_FAKE0", 1,
		SLAVE_L2, 2, TF_LARB_L2, 5),
	/*Larb3 */
	MTK_IOMMU_PORT_INIT("L3_MDP_RDMA1", 1,
		SLAVE_L3, 3, TF_LARB_L3, 0),
	MTK_IOMMU_PORT_INIT("L3_MDP_RDMA3", 1,
		SLAVE_L3, 3, TF_LARB_L3, 1),
	MTK_IOMMU_PORT_INIT("L3_MDP_WROT1", 1,
		SLAVE_L3, 3, TF_LARB_L3, 2),
	MTK_IOMMU_PORT_INIT("L3_MDP_WROT3", 1,
		SLAVE_L3, 3, TF_LARB_L3, 3),
	MTK_IOMMU_PORT_INIT("L3_MDP_FILMGRAIN1", 1,
		SLAVE_L3, 3, TF_LARB_L3, 4),
	MTK_IOMMU_PORT_INIT("L3_MDP_FAKE1", 1,
		SLAVE_L3, 3, TF_LARB_L3, 5),
	/*Larb4 */
	MTK_IOMMU_PORT_INIT("L4_VDEC_MC_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 0),
	MTK_IOMMU_PORT_INIT("L4_VDEC_UFO_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 1),
	MTK_IOMMU_PORT_INIT("L4_VDEC_PP_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 2),
	MTK_IOMMU_PORT_INIT("L4_VDEC_PRED_RD_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 3),
	MTK_IOMMU_PORT_INIT("L4_VDEC_PRED_WR_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 4),
	MTK_IOMMU_PORT_INIT("L4_VDEC_PPWRAP_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 5),
	MTK_IOMMU_PORT_INIT("L4_VDEC_TILE_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 6),
	MTK_IOMMU_PORT_INIT("L4_VDEC_VLD_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 7),
	MTK_IOMMU_PORT_INIT("L4_VDEC_VLD2_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 8),
	MTK_IOMMU_PORT_INIT("L4_VDEC_AVC_MV_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 9),
	MTK_IOMMU_PORT_INIT("L4_VDEC_RG_CTRL_DMA_EXT_MDP", 1,
		SLAVE_L4, 4, TF_LARB_L4, 10),
	/*Larb5 */
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_VLD_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 0),
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_VLD2_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 1),
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_AVC_MV_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 2),
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_PRED_RD_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 3),
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_TILE_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 4),
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_WDMA_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 5),
	MTK_IOMMU_PORT_INIT("L5_VDEC_LAT0_RG_CTRL_DMA_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 6),
	MTK_IOMMU_PORT_INIT("L5_VDEC_UFO_ENC_EXT_DISP", 0,
		SLAVE_L5, 5, TF_LARB_L5, 7),
	/*Larb7 */
	MTK_IOMMU_PORT_INIT("L7_VENC_RCPU_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 0),
	MTK_IOMMU_PORT_INIT("L7_VENC_REC_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 1),
	MTK_IOMMU_PORT_INIT("L7_VENC_BSDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 2),
	MTK_IOMMU_PORT_INIT("L7_VENC_SV_COMV_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 3),
	MTK_IOMMU_PORT_INIT("L7_VENC_RD_COMV_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 4),
	MTK_IOMMU_PORT_INIT("L7_VENC_NBM_RDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 5),
	MTK_IOMMU_PORT_INIT("L7_VENC_NBM_RDMA_LITE_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 6),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_Y_RDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 7),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_C_RDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 8),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_Q_TABLE_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 9),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_BSDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 10),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_WDMA0_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 11),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_BSDMA0_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 12),
	MTK_IOMMU_PORT_INIT("L7_VENC_NBM_WDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 13),
	MTK_IOMMU_PORT_INIT("L7_VENC_NBM_WDMA_LITE_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 14),
	MTK_IOMMU_PORT_INIT("L7_VENC_CUR_LUMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 15),
	MTK_IOMMU_PORT_INIT("L7_VENC_CUR_CHROMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 16),
	MTK_IOMMU_PORT_INIT("L7_VENC_REF_LUMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 17),
	MTK_IOMMU_PORT_INIT("L7_VENC_REF_CHROMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 18),
	MTK_IOMMU_PORT_INIT("L7_VENC_SUB_R_LUMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 19),
	MTK_IOMMU_PORT_INIT("L7_VENC_SUB_W_LUMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 20),
	MTK_IOMMU_PORT_INIT("L7_VENC_FCS_NBM_RDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 21),
	MTK_IOMMU_PORT_INIT("L7_VENC_FCS_NBM_WDMA_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 22),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_WDMA1_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 23),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_BSDMA1_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 24),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_HUFF_OFFSET1_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 25),
	MTK_IOMMU_PORT_INIT("L7_JPGENC_HUFF_OFFSET0_DISP", 0,
		SLAVE_L7, 7, TF_LARB_L7, 26),
	/*Larb8 */
	MTK_IOMMU_PORT_INIT("L8_VENC_RCPU_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 0),
	MTK_IOMMU_PORT_INIT("L8_VENC_REC_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 1),
	MTK_IOMMU_PORT_INIT("L8_VENC_BSDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 2),
	MTK_IOMMU_PORT_INIT("L8_VENC_SV_COMV_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 3),
	MTK_IOMMU_PORT_INIT("L8_VENC_RD_COMV_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 4),
	MTK_IOMMU_PORT_INIT("L8_VENC_NBM_RDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 5),
	MTK_IOMMU_PORT_INIT("L8_VENC_NBM_RDMA_LITE_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 6),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_Y_RDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 7),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_C_RDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 8),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_Q_TABLE_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 9),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_BSDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 10),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_WDMA0_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 11),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_BSDMA0_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 12),
	MTK_IOMMU_PORT_INIT("L8_VENC_NBM_WDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 13),
	MTK_IOMMU_PORT_INIT("L8_VENC_NBM_WDMA_LITE_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 14),
	MTK_IOMMU_PORT_INIT("L8_VENC_CUR_LUMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 15),
	MTK_IOMMU_PORT_INIT("L8_VENC_CUR_CHROMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 16),
	MTK_IOMMU_PORT_INIT("L8_VENC_REF_LUMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 17),
	MTK_IOMMU_PORT_INIT("L8_VENC_REF_CHROMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 18),
	MTK_IOMMU_PORT_INIT("L8_VENC_SUB_R_LUMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 19),
	MTK_IOMMU_PORT_INIT("L8_VENC_SUB_W_LUMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 20),
	MTK_IOMMU_PORT_INIT("L8_VENC_FCS_NBM_RDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 21),
	MTK_IOMMU_PORT_INIT("L8_VENC_FCS_NBM_WDMA_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 22),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_WDMA1_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 23),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_BSDMA1_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 24),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_HUFF_OFFSET1_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 25),
	MTK_IOMMU_PORT_INIT("L8_JPGENC_HUFF_OFFSET0_MDP", 1,
		SLAVE_L8, 8, TF_LARB_L8, 26),
	/*Larb9 */
	MTK_IOMMU_PORT_INIT("L9_IMG_IMGI_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 0),
	MTK_IOMMU_PORT_INIT("L9_IMG_IMGBI_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 1),
	MTK_IOMMU_PORT_INIT("L9_IMG_DMGI_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 2),
	MTK_IOMMU_PORT_INIT("L9_IMG_DEPI_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 3),
	MTK_IOMMU_PORT_INIT("L9_IMG_ICE_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 4),
	MTK_IOMMU_PORT_INIT("L9_IMG_SMTI_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 5),
	MTK_IOMMU_PORT_INIT("L9_IMG_SMTO_D2_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 6),
	MTK_IOMMU_PORT_INIT("L9_IMG_SMTO_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 7),
	MTK_IOMMU_PORT_INIT("L9_IMG_CRZO_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 8),
	MTK_IOMMU_PORT_INIT("L9_IMG_IMG3O_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 9),
	MTK_IOMMU_PORT_INIT("L9_IMG_VIPI_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 10),
	MTK_IOMMU_PORT_INIT("L9_IMG_SMTI_D5_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 11),
	MTK_IOMMU_PORT_INIT("L9_IMG_TIMGO_D1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 12),
	MTK_IOMMU_PORT_INIT("L9_IMG_UFBC_W0_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 13),
	MTK_IOMMU_PORT_INIT("L9_IMG_UFBC_R0_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 14),
	MTK_IOMMU_PORT_INIT("L9_IMG_WPE_RDMA1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 15),
	MTK_IOMMU_PORT_INIT("L9_IMG_WPE_RDMA0_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 16),
	MTK_IOMMU_PORT_INIT("L9_IMG_WPE_WDMA_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 17),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_RDMA0_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 18),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_RDMA1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 19),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_RDMA2_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 20),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_RDMA3_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 21),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_RDMA4_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 22),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_RDMA5_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 23),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_WDMA0_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 24),
	MTK_IOMMU_PORT_INIT("L9_IMG_MFB_WDMA1_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 25),
	MTK_IOMMU_PORT_INIT("L9_IMG_RESERVE6_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 26),
	MTK_IOMMU_PORT_INIT("L9_IMG_RESERVE7_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 27),
	MTK_IOMMU_PORT_INIT("L9_IMG_RESERVE8_MDP", 1,
		SLAVE_L9, 9, TF_LARB_L9, 28),
	/*Larb11 */
	MTK_IOMMU_PORT_INIT("L11_IMG_IMGI_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 0),
	MTK_IOMMU_PORT_INIT("L11_IMG_IMGBI_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 1),
	MTK_IOMMU_PORT_INIT("L11_IMG_DMGI_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 2),
	MTK_IOMMU_PORT_INIT("L11_IMG_DEPI_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 3),
	MTK_IOMMU_PORT_INIT("L11_IMG_ICE_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 4),
	MTK_IOMMU_PORT_INIT("L11_IMG_SMTI_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 5),
	MTK_IOMMU_PORT_INIT("L11_IMG_SMTO_D2_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 6),
	MTK_IOMMU_PORT_INIT("L11_IMG_SMTO_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 7),
	MTK_IOMMU_PORT_INIT("L11_IMG_CRZO_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 8),
	MTK_IOMMU_PORT_INIT("L11_IMG_IMG3O_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 9),
	MTK_IOMMU_PORT_INIT("L11_IMG_VIPI_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 10),
	MTK_IOMMU_PORT_INIT("L11_IMG_SMTI_D5_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 11),
	MTK_IOMMU_PORT_INIT("L11_IMG_TIMGO_D1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 12),
	MTK_IOMMU_PORT_INIT("L11_IMG_UFBC_W0_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 13),
	MTK_IOMMU_PORT_INIT("L11_IMG_UFBC_R0_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 14),
	MTK_IOMMU_PORT_INIT("L11_IMG_WPE_RDMA1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 15),
	MTK_IOMMU_PORT_INIT("L11_IMG_WPE_RDMA0_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 16),
	MTK_IOMMU_PORT_INIT("L11_IMG_WPE_WDMA_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 17),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_RDMA0_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 18),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_RDMA1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 19),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_RDMA2_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 20),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_RDMA3_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 21),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_RDMA4_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 22),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_RDMA5_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 23),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_WDMA0_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 24),
	MTK_IOMMU_PORT_INIT("L11_IMG_MFB_WDMA1_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 25),
	MTK_IOMMU_PORT_INIT("L11_IMG_RESERVE6_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 26),
	MTK_IOMMU_PORT_INIT("L11_IMG_RESERVE7_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 27),
	MTK_IOMMU_PORT_INIT("L11_IMG_RESERVE8_DISP", 0,
		SLAVE_L11, 11, TF_LARB_L11, 28),
	/*Larb13 */
	MTK_IOMMU_PORT_INIT("L13_CAM_MRAWI_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 0),
	MTK_IOMMU_PORT_INIT("L13_CAM_MRAWO0_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 1),
	MTK_IOMMU_PORT_INIT("L13_CAM_MRAWO1_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 2),
	MTK_IOMMU_PORT_INIT("L13_CAM_CAMSV1_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 3),
	MTK_IOMMU_PORT_INIT("L13_CAM_CAMSV2_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 4),
	MTK_IOMMU_PORT_INIT("L13_CAM_CAMSV3_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 5),
	MTK_IOMMU_PORT_INIT("L13_CAM_CAMSV4_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 6),
	MTK_IOMMU_PORT_INIT("L13_CAM_CAMSV5_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 7),
	MTK_IOMMU_PORT_INIT("L13_CAM_CAMSV6_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 8),
	MTK_IOMMU_PORT_INIT("L13_CAM_CCUI_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 9),
	MTK_IOMMU_PORT_INIT("L13_CAM_CCUO_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 10),
	MTK_IOMMU_PORT_INIT("L13_CAM_FAKE_MDP", 1,
		SLAVE_L13, 13, TF_LARB_L13, 11),
	/*Larb14 */
	MTK_IOMMU_PORT_INIT("L14_CAM_MRAWI_DISP", 0,
		SLAVE_L14, 14, TF_LARB_L14, 0),
	MTK_IOMMU_PORT_INIT("L14_CAM_MRAWO0_DISP", 0,
		SLAVE_L14, 14, TF_LARB_L14, 1),
	MTK_IOMMU_PORT_INIT("L14_CAM_MRAWO1_DISP", 0,
		SLAVE_L14, 14, TF_LARB_L14, 2),
	MTK_IOMMU_PORT_INIT("L14_CAM_CAMSV0_DISP", 0,
		SLAVE_L14, 14, TF_LARB_L14, 3),
	MTK_IOMMU_PORT_INIT("L14_CAM_CCUI_DISP", 0,
		SLAVE_L14, 14, TF_LARB_L14, 4),
	MTK_IOMMU_PORT_INIT("L14_CAM_CCUO_DISP", 0,
		SLAVE_L14, 14, TF_LARB_L14, 5),
	/*Larb16 */
	MTK_IOMMU_PORT_INIT("L16_CAM_IMGO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 0),
	MTK_IOMMU_PORT_INIT("L16_CAM_RRZO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 1),
	MTK_IOMMU_PORT_INIT("L16_CAM_CQI_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 2),
	MTK_IOMMU_PORT_INIT("L16_CAM_BPCI_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 3),
	MTK_IOMMU_PORT_INIT("L16_CAM_YUVO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 4),
	MTK_IOMMU_PORT_INIT("L16_CAM_UFDI_R2_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 5),
	MTK_IOMMU_PORT_INIT("L16_CAM_RAWI_R2_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 6),
	MTK_IOMMU_PORT_INIT("L16_CAM_RAWI_R3_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 7),
	MTK_IOMMU_PORT_INIT("L16_CAM_AAO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 8),
	MTK_IOMMU_PORT_INIT("L16_CAM_AFO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 9),
	MTK_IOMMU_PORT_INIT("L16_CAM_FLKO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 10),
	MTK_IOMMU_PORT_INIT("L16_CAM_LCESO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 11),
	MTK_IOMMU_PORT_INIT("L16_CAM_CRZO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 12),
	MTK_IOMMU_PORT_INIT("L16_CAM_LTMSO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 13),
	MTK_IOMMU_PORT_INIT("L16_CAM_RSSO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 14),
	MTK_IOMMU_PORT_INIT("L16_CAM_AAHO_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 15),
	MTK_IOMMU_PORT_INIT("L16_CAM_LSCI_R1_A_MDP", 1,
		SLAVE_L16, 16, TF_LARB_L16, 16),
	/*Larb17 */
	MTK_IOMMU_PORT_INIT("L17_CAM_IMGO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 0),
	MTK_IOMMU_PORT_INIT("L17_CAM_RRZO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 1),
	MTK_IOMMU_PORT_INIT("L17_CAM_CQI_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 2),
	MTK_IOMMU_PORT_INIT("L17_CAM_BPCI_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 3),
	MTK_IOMMU_PORT_INIT("L17_CAM_YUVO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 4),
	MTK_IOMMU_PORT_INIT("L17_CAM_UFDI_R2_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 5),
	MTK_IOMMU_PORT_INIT("L17_CAM_RAWI_R2_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 6),
	MTK_IOMMU_PORT_INIT("L17_CAM_RAWI_R3_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 7),
	MTK_IOMMU_PORT_INIT("L17_CAM_AAO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 8),
	MTK_IOMMU_PORT_INIT("L17_CAM_AFO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 9),
	MTK_IOMMU_PORT_INIT("L17_CAM_FLKO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 10),
	MTK_IOMMU_PORT_INIT("L17_CAM_LCESO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 11),
	MTK_IOMMU_PORT_INIT("L17_CAM_CRZO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 12),
	MTK_IOMMU_PORT_INIT("L17_CAM_LTMSO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 13),
	MTK_IOMMU_PORT_INIT("L17_CAM_RSSO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 14),
	MTK_IOMMU_PORT_INIT("L17_CAM_AAHO_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 15),
	MTK_IOMMU_PORT_INIT("L17_CAM_LSCI_R1_B_DISP", 0,
		SLAVE_L17, 17, TF_LARB_L17, 16),
	/*Larb18 */
	MTK_IOMMU_PORT_INIT("L18_CAM_IMGO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 0),
	MTK_IOMMU_PORT_INIT("L18_CAM_RRZO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 1),
	MTK_IOMMU_PORT_INIT("L18_CAM_CQI_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 2),
	MTK_IOMMU_PORT_INIT("L18_CAM_BPCI_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 3),
	MTK_IOMMU_PORT_INIT("L18_CAM_YUVO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 4),
	MTK_IOMMU_PORT_INIT("L18_CAM_UFDI_R2_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 5),
	MTK_IOMMU_PORT_INIT("L18_CAM_RAWI_R2_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 6),
	MTK_IOMMU_PORT_INIT("L18_CAM_RAWI_R3_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 7),
	MTK_IOMMU_PORT_INIT("L18_CAM_AAO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 8),
	MTK_IOMMU_PORT_INIT("L18_CAM_AFO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 9),
	MTK_IOMMU_PORT_INIT("L18_CAM_FLKO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 10),
	MTK_IOMMU_PORT_INIT("L18_CAM_LCESO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 11),
	MTK_IOMMU_PORT_INIT("L18_CAM_CRZO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 12),
	MTK_IOMMU_PORT_INIT("L18_CAM_LTMSO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 13),
	MTK_IOMMU_PORT_INIT("L18_CAM_RSSO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 14),
	MTK_IOMMU_PORT_INIT("L18_CAM_AAHO_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 15),
	MTK_IOMMU_PORT_INIT("L18_CAM_LSCI_R1_C_MDP", 1,
		SLAVE_L18, 18, TF_LARB_L18, 16),
	/*Larb19 */
	MTK_IOMMU_PORT_INIT("L19_IPE_DVS_RDMA_DISP", 0,
		SLAVE_L19, 19, TF_LARB_L19, 0),
	MTK_IOMMU_PORT_INIT("L19_IPE_DVS_WDMA_DISP", 0,
		SLAVE_L19, 19, TF_LARB_L19, 1),
	MTK_IOMMU_PORT_INIT("L19_IPE_DVP_RDMA_DISP", 0,
		SLAVE_L19, 19, TF_LARB_L19, 2),
	MTK_IOMMU_PORT_INIT("L19_IPE_DVP_WDMA_DISP", 0,
		SLAVE_L19, 19, TF_LARB_L19, 3),
	/*Larb20 */
	MTK_IOMMU_PORT_INIT("L20_IPE_FDVT_RDA_DISP", 0,
		SLAVE_L20, 20, TF_LARB_L20, 0),
	MTK_IOMMU_PORT_INIT("L20_IPE_FDVT_RDB_DISP", 0,
		SLAVE_L20, 20, TF_LARB_L20, 1),
	MTK_IOMMU_PORT_INIT("L20_IPE_FDVT_WRA_DISP", 0,
		SLAVE_L20, 20, TF_LARB_L20, 2),
	MTK_IOMMU_PORT_INIT("L20_IPE_FDVT_WRB_DISP", 0,
		SLAVE_L20, 20, TF_LARB_L20, 3),
	MTK_IOMMU_PORT_INIT("L20_IPE_RSC_RDMA0_DISP", 0,
		SLAVE_L20, 20, TF_LARB_L20, 4),
	MTK_IOMMU_PORT_INIT("L20_IPE_RSC_WDMA_DISP", 0,
		SLAVE_L20, 20, TF_LARB_L20, 5),
	/*Larb21 */
	MTK_IOMMU_PORT_INIT("L21_APU_FAKE_CODE", 2,
		SLAVE_APU, 21, TF_APU, 0),
	MTK_IOMMU_PORT_INIT("L21_APU_FAKE_DATA", 2,
		SLAVE_APU, 21, TF_APU, 1),
	MTK_IOMMU_PORT_INIT("L21_APU_FAKE_VLM", 2,
		SLAVE_APU, 21, TF_APU, 2),
	/*Larb22 */
	MTK_IOMMU_PORT_INIT("L22_CCU_DISP", 0,
		SLAVE_CCU_DISP, 22, TF_CCU_DISP, 0),
	/*Larb23 */
	MTK_IOMMU_PORT_INIT("L23_CCU_MDP", 1,
		SLAVE_CCU_MDP, 23, TF_CCU_MDP, 0),

	MTK_IOMMU_PORT_INIT("UNKNOWN", 0, 0, 0, 0, 0)
};
#if 0
static int mtk_iommu_larb_port_count[] = {
	15, 15, 6, 6, 11,//0~4
	8, 0, 27, 27, 29, //5~9
	0, 29, 0, 12, 6, //10~14
	0, 17, 17, 17, 4, //15~19
	6, 3, 1, 1 //20~23
};
#endif
static int mtk_iommu_larb_distance[] = {
	0, 15, 30, 36, 42, //0~4
	53, -1, 61, 88, 115, //5~9
	-1, 144, -1, 173, 185, //10~14
	-1, 191, 208, 225, 242,//15~19
	246, 252, 255, 256 //20~23
};

static inline int mtk_iommu_get_tf_larb_port_idx(unsigned int m4uid, int tf_id)
{
	int i;

	for (i = 0; i < M4U_PORT_NR; i++) {
		if (iommu_port[i].tf_id == tf_id &&
		    iommu_port[i].m4u_id == m4uid)
			return i;
		if (((iommu_port[i].tf_id & 0xf80) >> 7) == TF_CCU_DISP &&
		    iommu_port[i].m4u_id == m4uid)
			return i;
		if (((iommu_port[i].tf_id & 0xf80) >> 7) == TF_CCU_MDP &&
		    iommu_port[i].m4u_id == m4uid)
			return i;
	}
	return M4U_PORT_UNKNOWN;
}
#if 0
static int m4u_get_port_id(unsigned int m4uid, int fault_id)
{
	int id;

#ifdef IOMMU_VPU_INDEX
	if (m4uid >= IOMMU_VPU_INDEX)
		return M4U_PORT_APU;
#endif

	id = mtk_iommu_get_tf_larb_port_idx(m4uid, F_MMU_INT_TF_VAL(fault_id));
	if (id == M4U_PORT_UNKNOWN)
		return M4U_PORT_UNKNOWN;

	return MTK_M4U_ID(iommu_port[id].larb_id, iommu_port[id].larb_port);
}

static int m4u_get_port_index(unsigned int m4uid, int fault_id)
{
	int id;

	id = mtk_iommu_get_tf_larb_port_idx(m4uid, F_MMU_INT_TF_VAL(fault_id));
	return id;
}

static inline char *m4u_get_vpu_port_name_of_tf(int fault_id)
{
	int i;

	for (i = 0; i < IOMMU_APU_AXI_PORT_NR; i++) {
		if (((fault_id & vpu_axi_bus_mask[i]) >> 7) ==
		    vpu_axi_bus_id[i])
			return vpu_axi_bus_name[i];
	}
	return "VPU_UNKNOWN";
}

static inline char *m4u_get_port_name_of_tf(unsigned int m4uid, int fault_id)
{
	int id;

	id = mtk_iommu_get_tf_larb_port_idx(m4uid, F_MMU_INT_TF_VAL(fault_id));
	return iommu_port[id].name;
}
#endif

static inline int m4u_port_2_larb_port(unsigned int port)
{
	if (port < M4U_PORT_UNKNOWN)
		return MTK_IOMMU_TO_PORT(port);
	return M4U_PORT_UNKNOWN;
}

static inline int m4u_port_2_larb_id(unsigned int port)
{
	if (port < M4U_PORT_UNKNOWN)
		return MTK_IOMMU_TO_LARB(port);
	return M4U_PORT_UNKNOWN;
}

static int mtk_iommu_larb_port_idx(int id)
{
	unsigned int larb, port;
	int index;

	larb = MTK_IOMMU_TO_LARB(id);
	port = MTK_IOMMU_TO_PORT(id);

	if (larb >= M4U_LARB_NR)
		return M4U_PORT_UNKNOWN;

	index = mtk_iommu_larb_distance[larb];
	if ((index >= M4U_PORT_NR) || (index < 0))
		return M4U_PORT_UNKNOWN;

	index += port;
	if ((iommu_port[index].larb_id == larb) &&
		(iommu_port[index].larb_port == port))
		return index;

	return M4U_PORT_UNKNOWN;
}

static inline char *m4u_get_port_name(int port)
{
	int idx;

	idx = mtk_iommu_larb_port_idx(port);
	return iommu_port[idx].name;
}
#if 0
static inline unsigned int m4u_get_port_iommu_index(int port)
{
	int idx;

	idx = mtk_iommu_larb_port_idx(port);
	if (idx == M4U_PORT_UNKNOWN)
		return M4U_IOMMU_NR;

	return iommu_port[idx].m4u_id;
}

static inline int m4u_map_smi_larb(void)
{
	int ret;
	int i;

	for (i = 0; i < SMI_LARB_NR; i++) {
		if (!smiLarbBasePA[i]) {
			smiLarbBaseAddr[i] = 0;
			continue;
		}
		ret = msee_mmap_region((uint64_t)smiLarbBasePA[i], (void **)&smiLarbBaseAddr[i], SMI_LARB_SZ,
			MSEE_MAP_READABLE|MSEE_MAP_WRITABLE|MSEE_MAP_UNCACHED|MSEE_MAP_IO);

		if(ret != DRV_FWK_API_OK) {
			msee_loge("map larb %d register fail: pa=0x%x, size=0x%x\n", i,  smiLarbBasePA[i], SMI_LARB_SZ);
			return -1;
		}
		msee_logd("smi larb %d map register: va=0x%x, pa=0x%x, size=0x%x\n", i, smiLarbBaseAddr[i], smiLarbBasePA[i], SMI_LARB_SZ);
	}

	return 0;
}
#endif

#endif
