<table align="center" frame="border" rules="cols" border="1">
   <tr>
      <td valign="top"> created by          : </td>
   </tr>
   <tr>
      <td valign="top"> generated by        : yoesha01</td>
   </tr>
   <tr>
      <td valign="top"> generated from      : /home/hw/yoesha01/P4/cc_7/cc715_r0/env/src/regs/XL/regdb.xlsx</td>
   </tr>
   <tr>
      <td valign="top"> IDesignSpec rev     : idsbatch v 4.12.19.1 </td>
   </tr>
   <tr>
      <td valign="top"> XML Revision        : </td>
   </tr>
</table>
<center>
   <h1>chip : CryptoCell</h1>
</center>
<table border="0">
   <tr>
      <td width="40"></td>
      <td>
         <table frame="border">
            <tr>
               <td align="center" colspan="3"><b>LEGEND</b></td>
            </tr>
            <tr>
               <td colspan="3"><b>RO : Read Only                                             </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>WO : Write Only                                            </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>RW : Read/Write                                            </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>RW1: Read/Write once                                       </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>W1 : Write once                                            </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>RWC: Read/Write change (Register value changes internally) </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>RC : Read Change  (Readable, register valus changes)       </b></td>
            </tr>
            <tr>
               <td colspan="3"><b>WM : Write Modify (Write triggers an internal FSM)         </b></td>
            </tr>
         </table>
      </td>
   </tr>
</table>
<table border="0">
   <tr>
      <td width="40"></td>
      <td>
         <table frame="border">
            <tr>
               <td align="center" colspan="3"><b>INDEX</b></td>
            </tr>
            <tr>
               <td width="100">1.1</td>
               <td>block: <a href="#1.1">PKA</a></td>
               <td width="60"></td>
               <td>0x000000000</td>
            </tr>
            <tr>
               <td width="100">1.1.1</td>
               <td>reg: <a href="#1.1.1">MEMORY_MAP0</a></td>
               <td width="60"></td>
               <td>0x000000000</td>
            </tr>
            <tr>
               <td width="100">1.1.2</td>
               <td>reg: <a href="#1.1.2">MEMORY_MAP1</a></td>
               <td width="60"></td>
               <td>0x000000004</td>
            </tr>
            <tr>
               <td width="100">1.1.3</td>
               <td>reg: <a href="#1.1.3">MEMORY_MAP2</a></td>
               <td width="60"></td>
               <td>0x000000008</td>
            </tr>
            <tr>
               <td width="100">1.1.4</td>
               <td>reg: <a href="#1.1.4">MEMORY_MAP3</a></td>
               <td width="60"></td>
               <td>0x00000000C</td>
            </tr>
            <tr>
               <td width="100">1.1.5</td>
               <td>reg: <a href="#1.1.5">MEMORY_MAP4</a></td>
               <td width="60"></td>
               <td>0x000000010</td>
            </tr>
            <tr>
               <td width="100">1.1.6</td>
               <td>reg: <a href="#1.1.6">MEMORY_MAP5</a></td>
               <td width="60"></td>
               <td>0x000000014</td>
            </tr>
            <tr>
               <td width="100">1.1.7</td>
               <td>reg: <a href="#1.1.7">MEMORY_MAP6</a></td>
               <td width="60"></td>
               <td>0x000000018</td>
            </tr>
            <tr>
               <td width="100">1.1.8</td>
               <td>reg: <a href="#1.1.8">MEMORY_MAP7</a></td>
               <td width="60"></td>
               <td>0x00000001C</td>
            </tr>
            <tr>
               <td width="100">1.1.9</td>
               <td>reg: <a href="#1.1.9">MEMORY_MAP8</a></td>
               <td width="60"></td>
               <td>0x000000020</td>
            </tr>
            <tr>
               <td width="100">1.1.10</td>
               <td>reg: <a href="#1.1.10">MEMORY_MAP9</a></td>
               <td width="60"></td>
               <td>0x000000024</td>
            </tr>
            <tr>
               <td width="100">1.1.11</td>
               <td>reg: <a href="#1.1.11">MEMORY_MAP10</a></td>
               <td width="60"></td>
               <td>0x000000028</td>
            </tr>
            <tr>
               <td width="100">1.1.12</td>
               <td>reg: <a href="#1.1.12">MEMORY_MAP11</a></td>
               <td width="60"></td>
               <td>0x00000002C</td>
            </tr>
            <tr>
               <td width="100">1.1.13</td>
               <td>reg: <a href="#1.1.13">MEMORY_MAP12</a></td>
               <td width="60"></td>
               <td>0x000000030</td>
            </tr>
            <tr>
               <td width="100">1.1.14</td>
               <td>reg: <a href="#1.1.14">MEMORY_MAP13</a></td>
               <td width="60"></td>
               <td>0x000000034</td>
            </tr>
            <tr>
               <td width="100">1.1.15</td>
               <td>reg: <a href="#1.1.15">MEMORY_MAP14</a></td>
               <td width="60"></td>
               <td>0x000000038</td>
            </tr>
            <tr>
               <td width="100">1.1.16</td>
               <td>reg: <a href="#1.1.16">MEMORY_MAP15</a></td>
               <td width="60"></td>
               <td>0x00000003C</td>
            </tr>
            <tr>
               <td width="100">1.1.17</td>
               <td>reg: <a href="#1.1.17">MEMORY_MAP16</a></td>
               <td width="60"></td>
               <td>0x000000040</td>
            </tr>
            <tr>
               <td width="100">1.1.18</td>
               <td>reg: <a href="#1.1.18">MEMORY_MAP17</a></td>
               <td width="60"></td>
               <td>0x000000044</td>
            </tr>
            <tr>
               <td width="100">1.1.19</td>
               <td>reg: <a href="#1.1.19">MEMORY_MAP18</a></td>
               <td width="60"></td>
               <td>0x000000048</td>
            </tr>
            <tr>
               <td width="100">1.1.20</td>
               <td>reg: <a href="#1.1.20">MEMORY_MAP19</a></td>
               <td width="60"></td>
               <td>0x00000004C</td>
            </tr>
            <tr>
               <td width="100">1.1.21</td>
               <td>reg: <a href="#1.1.21">MEMORY_MAP20</a></td>
               <td width="60"></td>
               <td>0x000000050</td>
            </tr>
            <tr>
               <td width="100">1.1.22</td>
               <td>reg: <a href="#1.1.22">MEMORY_MAP21</a></td>
               <td width="60"></td>
               <td>0x000000054</td>
            </tr>
            <tr>
               <td width="100">1.1.23</td>
               <td>reg: <a href="#1.1.23">MEMORY_MAP22</a></td>
               <td width="60"></td>
               <td>0x000000058</td>
            </tr>
            <tr>
               <td width="100">1.1.24</td>
               <td>reg: <a href="#1.1.24">MEMORY_MAP23</a></td>
               <td width="60"></td>
               <td>0x00000005C</td>
            </tr>
            <tr>
               <td width="100">1.1.25</td>
               <td>reg: <a href="#1.1.25">MEMORY_MAP24</a></td>
               <td width="60"></td>
               <td>0x000000060</td>
            </tr>
            <tr>
               <td width="100">1.1.26</td>
               <td>reg: <a href="#1.1.26">MEMORY_MAP25</a></td>
               <td width="60"></td>
               <td>0x000000064</td>
            </tr>
            <tr>
               <td width="100">1.1.27</td>
               <td>reg: <a href="#1.1.27">MEMORY_MAP26</a></td>
               <td width="60"></td>
               <td>0x000000068</td>
            </tr>
            <tr>
               <td width="100">1.1.28</td>
               <td>reg: <a href="#1.1.28">MEMORY_MAP27</a></td>
               <td width="60"></td>
               <td>0x00000006C</td>
            </tr>
            <tr>
               <td width="100">1.1.29</td>
               <td>reg: <a href="#1.1.29">MEMORY_MAP28</a></td>
               <td width="60"></td>
               <td>0x000000070</td>
            </tr>
            <tr>
               <td width="100">1.1.30</td>
               <td>reg: <a href="#1.1.30">MEMORY_MAP29</a></td>
               <td width="60"></td>
               <td>0x000000074</td>
            </tr>
            <tr>
               <td width="100">1.1.31</td>
               <td>reg: <a href="#1.1.31">MEMORY_MAP30</a></td>
               <td width="60"></td>
               <td>0x000000078</td>
            </tr>
            <tr>
               <td width="100">1.1.32</td>
               <td>reg: <a href="#1.1.32">MEMORY_MAP31</a></td>
               <td width="60"></td>
               <td>0x00000007C</td>
            </tr>
            <tr>
               <td width="100">1.1.33</td>
               <td>reg: <a href="#1.1.33">OPCODE</a></td>
               <td width="60"></td>
               <td>0x000000080</td>
            </tr>
            <tr>
               <td width="100">1.1.34</td>
               <td>reg: <a href="#1.1.34">N_NP_T0_T1_ADDR</a></td>
               <td width="60"></td>
               <td>0x000000084</td>
            </tr>
            <tr>
               <td width="100">1.1.35</td>
               <td>reg: <a href="#1.1.35">PKA_STATUS</a></td>
               <td width="60"></td>
               <td>0x000000088</td>
            </tr>
            <tr>
               <td width="100">1.1.36</td>
               <td>reg: <a href="#1.1.36">PKA_SW_RESET</a></td>
               <td width="60"></td>
               <td>0x00000008C</td>
            </tr>
            <tr>
               <td width="100">1.1.37</td>
               <td>reg: <a href="#1.1.37">PKA_L0</a></td>
               <td width="60"></td>
               <td>0x000000090</td>
            </tr>
            <tr>
               <td width="100">1.1.38</td>
               <td>reg: <a href="#1.1.38">PKA_L1</a></td>
               <td width="60"></td>
               <td>0x000000094</td>
            </tr>
            <tr>
               <td width="100">1.1.39</td>
               <td>reg: <a href="#1.1.39">PKA_L2</a></td>
               <td width="60"></td>
               <td>0x000000098</td>
            </tr>
            <tr>
               <td width="100">1.1.40</td>
               <td>reg: <a href="#1.1.40">PKA_L3</a></td>
               <td width="60"></td>
               <td>0x00000009C</td>
            </tr>
            <tr>
               <td width="100">1.1.41</td>
               <td>reg: <a href="#1.1.41">PKA_L4</a></td>
               <td width="60"></td>
               <td>0x0000000A0</td>
            </tr>
            <tr>
               <td width="100">1.1.42</td>
               <td>reg: <a href="#1.1.42">PKA_L5</a></td>
               <td width="60"></td>
               <td>0x0000000A4</td>
            </tr>
            <tr>
               <td width="100">1.1.43</td>
               <td>reg: <a href="#1.1.43">PKA_L6</a></td>
               <td width="60"></td>
               <td>0x0000000A8</td>
            </tr>
            <tr>
               <td width="100">1.1.44</td>
               <td>reg: <a href="#1.1.44">PKA_L7</a></td>
               <td width="60"></td>
               <td>0x0000000AC</td>
            </tr>
            <tr>
               <td width="100">1.1.45</td>
               <td>reg: <a href="#1.1.45">PKA_PIPE_RDY</a></td>
               <td width="60"></td>
               <td>0x0000000B0</td>
            </tr>
            <tr>
               <td width="100">1.1.46</td>
               <td>reg: <a href="#1.1.46">PKA_DONE</a></td>
               <td width="60"></td>
               <td>0x0000000B4</td>
            </tr>
            <tr>
               <td width="100">1.1.47</td>
               <td>reg: <a href="#1.1.47">PKA_MON_SELECT</a></td>
               <td width="60"></td>
               <td>0x0000000B8</td>
            </tr>
            <tr>
               <td width="100">1.1.48</td>
               <td>reg: <a href="#1.1.48">PKA_VERSION</a></td>
               <td width="60"></td>
               <td>0x0000000C4</td>
            </tr>
            <tr>
               <td width="100">1.1.49</td>
               <td>reg: <a href="#1.1.49">PKA_MON_READ</a></td>
               <td width="60"></td>
               <td>0x0000000D0</td>
            </tr>
            <tr>
               <td width="100">1.1.50</td>
               <td>reg: <a href="#1.1.50">PKA_SRAM_ADDR</a></td>
               <td width="60"></td>
               <td>0x0000000D4</td>
            </tr>
            <tr>
               <td width="100">1.1.51</td>
               <td>reg: <a href="#1.1.51">PKA_SRAM_WDATA</a></td>
               <td width="60"></td>
               <td>0x0000000D8</td>
            </tr>
            <tr>
               <td width="100">1.1.52</td>
               <td>reg: <a href="#1.1.52">PKA_SRAM_RDATA</a></td>
               <td width="60"></td>
               <td>0x0000000DC</td>
            </tr>
            <tr>
               <td width="100">1.1.53</td>
               <td>reg: <a href="#1.1.53">PKA_SRAM_WR_CLR</a></td>
               <td width="60"></td>
               <td>0x0000000E0</td>
            </tr>
            <tr>
               <td width="100">1.1.54</td>
               <td>reg: <a href="#1.1.54">PKA_SRAM_RADDR</a></td>
               <td width="60"></td>
               <td>0x0000000E4</td>
            </tr>
            <tr>
               <td width="100">1.1.55</td>
               <td>reg: <a href="#1.1.55">PKA_WORD_ACCESS</a></td>
               <td width="60"></td>
               <td>0x0000000F0</td>
            </tr>
            <tr>
               <td width="100">1.1.56</td>
               <td>reg: <a href="#1.1.56">PKA_BUFF_ADDR</a></td>
               <td width="60"></td>
               <td>0x0000000F8</td>
            </tr>
            <tr>
               <td width="100">1.2</td>
               <td>block: <a href="#1.2">RNG</a></td>
               <td width="60"></td>
               <td>0x000000100</td>
            </tr>
            <tr>
               <td width="100">1.2.1</td>
               <td>reg: <a href="#1.2.1">RNG_IMR</a></td>
               <td width="60"></td>
               <td>0x000000100</td>
            </tr>
            <tr>
               <td width="100">1.2.2</td>
               <td>reg: <a href="#1.2.2">RNG_ISR</a></td>
               <td width="60"></td>
               <td>0x000000104</td>
            </tr>
            <tr>
               <td width="100">1.2.3</td>
               <td>reg: <a href="#1.2.3">RNG_ICR</a></td>
               <td width="60"></td>
               <td>0x000000108</td>
            </tr>
            <tr>
               <td width="100">1.2.4</td>
               <td>reg: <a href="#1.2.4">TRNG_CONFIG</a></td>
               <td width="60"></td>
               <td>0x00000010C</td>
            </tr>
            <tr>
               <td width="100">1.2.5</td>
               <td>reg: <a href="#1.2.5">TRNG_VALID</a></td>
               <td width="60"></td>
               <td>0x000000110</td>
            </tr>
            <tr>
               <td width="100">1.2.6</td>
               <td>reg: <a href="#1.2.6">EHR_DATA_0</a></td>
               <td width="60"></td>
               <td>0x000000114</td>
            </tr>
            <tr>
               <td width="100">1.2.7</td>
               <td>reg: <a href="#1.2.7">EHR_DATA_1</a></td>
               <td width="60"></td>
               <td>0x000000118</td>
            </tr>
            <tr>
               <td width="100">1.2.8</td>
               <td>reg: <a href="#1.2.8">EHR_DATA_2</a></td>
               <td width="60"></td>
               <td>0x00000011C</td>
            </tr>
            <tr>
               <td width="100">1.2.9</td>
               <td>reg: <a href="#1.2.9">EHR_DATA_3</a></td>
               <td width="60"></td>
               <td>0x000000120</td>
            </tr>
            <tr>
               <td width="100">1.2.10</td>
               <td>reg: <a href="#1.2.10">EHR_DATA_4</a></td>
               <td width="60"></td>
               <td>0x000000124</td>
            </tr>
            <tr>
               <td width="100">1.2.11</td>
               <td>reg: <a href="#1.2.11">EHR_DATA_5</a></td>
               <td width="60"></td>
               <td>0x000000128</td>
            </tr>
            <tr>
               <td width="100">1.2.12</td>
               <td>reg: <a href="#1.2.12">RND_SOURCE_ENABLE</a></td>
               <td width="60"></td>
               <td>0x00000012C</td>
            </tr>
            <tr>
               <td width="100">1.2.13</td>
               <td>reg: <a href="#1.2.13">SAMPLE_CNT1</a></td>
               <td width="60"></td>
               <td>0x000000130</td>
            </tr>
            <tr>
               <td width="100">1.2.14</td>
               <td>reg: <a href="#1.2.14">AUTOCORR_STATISTIC</a></td>
               <td width="60"></td>
               <td>0x000000134</td>
            </tr>
            <tr>
               <td width="100">1.2.15</td>
               <td>reg: <a href="#1.2.15">TRNG_DEBUG_CONTROL</a></td>
               <td width="60"></td>
               <td>0x000000138</td>
            </tr>
            <tr>
               <td width="100">1.2.16</td>
               <td>reg: <a href="#1.2.16">RNG_SW_RESET</a></td>
               <td width="60"></td>
               <td>0x000000140</td>
            </tr>
            <tr>
               <td width="100">1.2.17</td>
               <td>reg: <a href="#1.2.17">RNG_DEBUG_EN_INPUT</a></td>
               <td width="60"></td>
               <td>0x0000001B4</td>
            </tr>
            <tr>
               <td width="100">1.2.18</td>
               <td>reg: <a href="#1.2.18">RNG_BUSY</a></td>
               <td width="60"></td>
               <td>0x0000001B8</td>
            </tr>
            <tr>
               <td width="100">1.2.19</td>
               <td>reg: <a href="#1.2.19">RST_BITS_COUNTER</a></td>
               <td width="60"></td>
               <td>0x0000001BC</td>
            </tr>
            <tr>
               <td width="100">1.2.20</td>
               <td>reg: <a href="#1.2.20">RNG_VERSION</a></td>
               <td width="60"></td>
               <td>0x0000001C0</td>
            </tr>
            <tr>
               <td width="100">1.2.21</td>
               <td>reg: <a href="#1.2.21">RNG_CLK_ENABLE</a></td>
               <td width="60"></td>
               <td>0x0000001C4</td>
            </tr>
            <tr>
               <td width="100">1.2.22</td>
               <td>reg: <a href="#1.2.22">RNG_DMA_ENABLE</a></td>
               <td width="60"></td>
               <td>0x0000001C8</td>
            </tr>
            <tr>
               <td width="100">1.2.23</td>
               <td>reg: <a href="#1.2.23">RNG_DMA_SRC_MASK</a></td>
               <td width="60"></td>
               <td>0x0000001CC</td>
            </tr>
            <tr>
               <td width="100">1.2.24</td>
               <td>reg: <a href="#1.2.24">RNG_DMA_SRAM_ADDR</a></td>
               <td width="60"></td>
               <td>0x0000001D0</td>
            </tr>
            <tr>
               <td width="100">1.2.25</td>
               <td>reg: <a href="#1.2.25">RNG_DMA_SAMPLES_NUM</a></td>
               <td width="60"></td>
               <td>0x0000001D4</td>
            </tr>
            <tr>
               <td width="100">1.2.26</td>
               <td>reg: <a href="#1.2.26">RNG_WATCHDOG_VAL</a></td>
               <td width="60"></td>
               <td>0x0000001D8</td>
            </tr>
            <tr>
               <td width="100">1.2.27</td>
               <td>reg: <a href="#1.2.27">RNG_DMA_STATUS</a></td>
               <td width="60"></td>
               <td>0x0000001DC</td>
            </tr>
            <tr>
               <td width="100">1.3</td>
               <td>block: <a href="#1.3">MISC</a></td>
               <td width="60"></td>
               <td>0x000000800</td>
            </tr>
            <tr>
               <td width="100">1.3.1</td>
               <td>reg: <a href="#1.3.1">AES_CLK_ENABLE</a></td>
               <td width="60"></td>
               <td>0x000000810</td>
            </tr>
            <tr>
               <td width="100">1.3.2</td>
               <td>reg: <a href="#1.3.2">DES_CLK_ENABLE</a></td>
               <td width="60"></td>
               <td>0x000000814</td>
            </tr>
            <tr>
               <td width="100">1.3.3</td>
               <td>reg: <a href="#1.3.3">HASH_CLK_ENABLE</a></td>
               <td width="60"></td>
               <td>0x000000818</td>
            </tr>
            <tr>
               <td width="100">1.3.4</td>
               <td>reg: <a href="#1.3.4">PKA_CLK_ENABLE</a></td>
               <td width="60"></td>
               <td>0x00000081C</td>
            </tr>
            <tr>
               <td width="100">1.3.5</td>
               <td>reg: <a href="#1.3.5">DMA_CLK_ENABLE</a></td>
               <td width="60"></td>
               <td>0x000000820</td>
            </tr>
            <tr>
               <td width="100">1.3.6</td>
               <td>reg: <a href="#1.3.6">CLK_STATUS</a></td>
               <td width="60"></td>
               <td>0x000000824</td>
            </tr>
            <tr>
               <td width="100">1.4</td>
               <td>block: <a href="#1.4">HOST_RGF</a></td>
               <td width="60"></td>
               <td>0x000000A00</td>
            </tr>
            <tr>
               <td width="100">1.4.1</td>
               <td>reg: <a href="#1.4.1">HOST_RGF_IRR</a></td>
               <td width="60"></td>
               <td>0x000000A00</td>
            </tr>
            <tr>
               <td width="100">1.4.2</td>
               <td>reg: <a href="#1.4.2">HOST_RGF_IMR</a></td>
               <td width="60"></td>
               <td>0x000000A04</td>
            </tr>
            <tr>
               <td width="100">1.4.3</td>
               <td>reg: <a href="#1.4.3">HOST_RGF_ICR</a></td>
               <td width="60"></td>
               <td>0x000000A08</td>
            </tr>
            <tr>
               <td width="100">1.4.4</td>
               <td>reg: <a href="#1.4.4">HOST_RGF_ENDIAN</a></td>
               <td width="60"></td>
               <td>0x000000A0C</td>
            </tr>
            <tr>
               <td width="100">1.4.5</td>
               <td>reg: <a href="#1.4.5">HOST_RGF_CC_SW_RST</a></td>
               <td width="60"></td>
               <td>0x000000A20</td>
            </tr>
            <tr>
               <td width="100">1.4.6</td>
               <td>reg: <a href="#1.4.6">HOST_RGF_SIGNATURE</a></td>
               <td width="60"></td>
               <td>0x000000A24</td>
            </tr>
            <tr>
               <td width="100">1.4.7</td>
               <td>reg: <a href="#1.4.7">HOST_BOOT</a></td>
               <td width="60"></td>
               <td>0x000000A28</td>
            </tr>
            <tr>
               <td width="100">1.4.8</td>
               <td>reg: <a href="#1.4.8">HOST_KCP_MASK</a></td>
               <td width="60"></td>
               <td>0x000000A30</td>
            </tr>
            <tr>
               <td width="100">1.4.9</td>
               <td>reg: <a href="#1.4.9">HOST_VERSION</a></td>
               <td width="60"></td>
               <td>0x000000A40</td>
            </tr>
            <tr>
               <td width="100">1.4.10</td>
               <td>reg: <a href="#1.4.10">HOST_KFDE0</a></td>
               <td width="60"></td>
               <td>0x000000A50</td>
            </tr>
            <tr>
               <td width="100">1.4.11</td>
               <td>reg: <a href="#1.4.11">HOST_KFDE1</a></td>
               <td width="60"></td>
               <td>0x000000A54</td>
            </tr>
            <tr>
               <td width="100">1.4.12</td>
               <td>reg: <a href="#1.4.12">HOST_KFDE2</a></td>
               <td width="60"></td>
               <td>0x000000A58</td>
            </tr>
            <tr>
               <td width="100">1.4.13</td>
               <td>reg: <a href="#1.4.13">HOST_KFDE3</a></td>
               <td width="60"></td>
               <td>0x000000A5C</td>
            </tr>
            <tr>
               <td width="100">1.4.14</td>
               <td>reg: <a href="#1.4.14">HOST_GPR</a></td>
               <td width="60"></td>
               <td>0x000000A70</td>
            </tr>
            <tr>
               <td width="100">1.4.15</td>
               <td>reg: <a href="#1.4.15">GPR_HOST</a></td>
               <td width="60"></td>
               <td>0x000000A74</td>
            </tr>
            <tr>
               <td width="100">1.4.16</td>
               <td>reg: <a href="#1.4.16">HOST_POWER_DOWN_EN</a></td>
               <td width="60"></td>
               <td>0x000000A78</td>
            </tr>
            <tr>
               <td width="100">1.5</td>
               <td>block: <a href="#1.5">AXI</a></td>
               <td width="60"></td>
               <td>0x000000B00</td>
            </tr>
            <tr>
               <td width="100">1.5.1</td>
               <td>reg: <a href="#1.5.1">AXIM_MON_INFLIGHT</a></td>
               <td width="60"></td>
               <td>0x000000B00</td>
            </tr>
            <tr>
               <td width="100">1.5.2</td>
               <td>reg: <a href="#1.5.2">AXIM_MON_INFLIGHTLAST</a></td>
               <td width="60"></td>
               <td>0x000000B40</td>
            </tr>
            <tr>
               <td width="100">1.5.3</td>
               <td>reg: <a href="#1.5.3">AXIM_PIDTABLE</a></td>
               <td width="60"></td>
               <td>0x000000B7C</td>
            </tr>
            <tr>
               <td width="100">1.5.4</td>
               <td>reg: <a href="#1.5.4">AXIM_MON_COMP</a></td>
               <td width="60"></td>
               <td>0x000000B80</td>
            </tr>
            <tr>
               <td width="100">1.5.5</td>
               <td>reg: <a href="#1.5.5">AXIM_MON_RMAX</a></td>
               <td width="60"></td>
               <td>0x000000BB4</td>
            </tr>
            <tr>
               <td width="100">1.5.6</td>
               <td>reg: <a href="#1.5.6">AXIM_MON_RMIN</a></td>
               <td width="60"></td>
               <td>0x000000BB8</td>
            </tr>
            <tr>
               <td width="100">1.5.7</td>
               <td>reg: <a href="#1.5.7">AXIM_MON_WMAX</a></td>
               <td width="60"></td>
               <td>0x000000BBC</td>
            </tr>
            <tr>
               <td width="100">1.5.8</td>
               <td>reg: <a href="#1.5.8">AXIM_MON_WMIN</a></td>
               <td width="60"></td>
               <td>0x000000BC0</td>
            </tr>
            <tr>
               <td width="100">1.5.9</td>
               <td>reg: <a href="#1.5.9">AXIM_MON_ERR</a></td>
               <td width="60"></td>
               <td>0x000000BC4</td>
            </tr>
            <tr>
               <td width="100">1.5.10</td>
               <td>reg: <a href="#1.5.10">AXIM_RDSTAT</a></td>
               <td width="60"></td>
               <td>0x000000BC8</td>
            </tr>
            <tr>
               <td width="100">1.5.11</td>
               <td>reg: <a href="#1.5.11">AXIM_RLATENCY</a></td>
               <td width="60"></td>
               <td>0x000000BD0</td>
            </tr>
            <tr>
               <td width="100">1.5.12</td>
               <td>reg: <a href="#1.5.12">AXIM_RBURST</a></td>
               <td width="60"></td>
               <td>0x000000BD4</td>
            </tr>
            <tr>
               <td width="100">1.5.13</td>
               <td>reg: <a href="#1.5.13">AXIM_WLATENCY</a></td>
               <td width="60"></td>
               <td>0x000000BD8</td>
            </tr>
            <tr>
               <td width="100">1.5.14</td>
               <td>reg: <a href="#1.5.14">AXIM_WBURST</a></td>
               <td width="60"></td>
               <td>0x000000BDC</td>
            </tr>
            <tr>
               <td width="100">1.5.15</td>
               <td>reg: <a href="#1.5.15">AXIM_CACHETYPE_CFG</a></td>
               <td width="60"></td>
               <td>0x000000BE0</td>
            </tr>
            <tr>
               <td width="100">1.5.16</td>
               <td>reg: <a href="#1.5.16">AXIM_PROT_CFG</a></td>
               <td width="60"></td>
               <td>0x000000BE4</td>
            </tr>
            <tr>
               <td width="100">1.5.17</td>
               <td>reg: <a href="#1.5.17">AXIM_CFG</a></td>
               <td width="60"></td>
               <td>0x000000BE8</td>
            </tr>
            <tr>
               <td width="100">1.5.18</td>
               <td>reg: <a href="#1.5.18">AXIM_ACE_CONST</a></td>
               <td width="60"></td>
               <td>0x000000BEC</td>
            </tr>
            <tr>
               <td width="100">1.5.19</td>
               <td>reg: <a href="#1.5.19">AXIM_CACHE_PARAMS</a></td>
               <td width="60"></td>
               <td>0x000000BF0</td>
            </tr>
            <tr>
               <td width="100">1.5.20</td>
               <td>reg: <a href="#1.5.20">ADDR_AXIM_CTRL</a></td>
               <td width="60"></td>
               <td>0x000000BF4</td>
            </tr>
            <tr>
               <td width="100">1.6</td>
               <td>block: <a href="#1.6">DSCRPTR</a></td>
               <td width="60"></td>
               <td>0x000000E00</td>
            </tr>
            <tr>
               <td width="100">1.6.1</td>
               <td>reg: <a href="#1.6.1">DSCRPTR_COMPLETION_COUNTER</a></td>
               <td width="60"></td>
               <td>0x000000E00</td>
            </tr>
            <tr>
               <td width="100">1.6.2</td>
               <td>reg: <a href="#1.6.2">DSCRPTR_COMPLETION_STATUS</a></td>
               <td width="60"></td>
               <td>0x000000E3C</td>
            </tr>
            <tr>
               <td width="100">1.6.3</td>
               <td>reg: <a href="#1.6.3">DSCRPTR_SW_RESET</a></td>
               <td width="60"></td>
               <td>0x000000E40</td>
            </tr>
            <tr>
               <td width="100">1.6.4</td>
               <td>reg: <a href="#1.6.4">DSCRPTR_SINGLE_ADDR_EN</a></td>
               <td width="60"></td>
               <td>0x000000E64</td>
            </tr>
            <tr>
               <td width="100">1.6.5</td>
               <td>reg: <a href="#1.6.5">DSCRPTR_MEASURE_CNTR</a></td>
               <td width="60"></td>
               <td>0x000000E68</td>
            </tr>
            <tr>
               <td width="100">1.6.6</td>
               <td>reg: <a href="#1.6.6">DSCRPTR_QUEUE_ARB_MODE</a></td>
               <td width="60"></td>
               <td>0x000000E70</td>
            </tr>
            <tr>
               <td width="100">1.6.7</td>
               <td>reg: <a href="#1.6.7">DSCRPTR_QUEUE_WORD0</a></td>
               <td width="60"></td>
               <td>0x000000E80</td>
            </tr>
            <tr>
               <td width="100">1.6.8</td>
               <td>reg: <a href="#1.6.8">DSCRPTR_QUEUE_WORD1</a></td>
               <td width="60"></td>
               <td>0x000000E84</td>
            </tr>
            <tr>
               <td width="100">1.6.9</td>
               <td>reg: <a href="#1.6.9">DSCRPTR_QUEUE_WORD2</a></td>
               <td width="60"></td>
               <td>0x000000E88</td>
            </tr>
            <tr>
               <td width="100">1.6.10</td>
               <td>reg: <a href="#1.6.10">DSCRPTR_QUEUE_WORD3</a></td>
               <td width="60"></td>
               <td>0x000000E8C</td>
            </tr>
            <tr>
               <td width="100">1.6.11</td>
               <td>reg: <a href="#1.6.11">DSCRPTR_QUEUE_WORD4</a></td>
               <td width="60"></td>
               <td>0x000000E90</td>
            </tr>
            <tr>
               <td width="100">1.6.12</td>
               <td>reg: <a href="#1.6.12">DSCRPTR_QUEUE_WORD5</a></td>
               <td width="60"></td>
               <td>0x000000E94</td>
            </tr>
            <tr>
               <td width="100">1.6.13</td>
               <td>reg: <a href="#1.6.13">DSCRPTR_QUEUE_WATERMARK</a></td>
               <td width="60"></td>
               <td>0x000000E98</td>
            </tr>
            <tr>
               <td width="100">1.6.14</td>
               <td>reg: <a href="#1.6.14">DSCRPTR_QUEUE_CONTENT</a></td>
               <td width="60"></td>
               <td>0x000000E9C</td>
            </tr>
            <tr>
               <td width="100">1.7</td>
               <td>block: <a href="#1.7">HOST_SRAM</a></td>
               <td width="60"></td>
               <td>0x000000F00</td>
            </tr>
            <tr>
               <td width="100">1.7.1</td>
               <td>reg: <a href="#1.7.1">SRAM_DATA</a></td>
               <td width="60"></td>
               <td>0x000000F00</td>
            </tr>
            <tr>
               <td width="100">1.7.2</td>
               <td>reg: <a href="#1.7.2">SRAM_ADDR</a></td>
               <td width="60"></td>
               <td>0x000000F04</td>
            </tr>
            <tr>
               <td width="100">1.7.3</td>
               <td>reg: <a href="#1.7.3">SRAM_DATA_READY</a></td>
               <td width="60"></td>
               <td>0x000000F08</td>
            </tr>
            <tr>
               <td width="100">1.8</td>
               <td>block: <a href="#1.8">NVM</a></td>
               <td width="60"></td>
               <td>0x000000F10</td>
            </tr>
            <tr>
               <td width="100">1.8.1</td>
               <td>reg: <a href="#1.8.1">HOST_DCU_EN</a></td>
               <td width="60"></td>
               <td>0x000000F64</td>
            </tr>
            <tr>
               <td width="100">1.8.2</td>
               <td>reg: <a href="#1.8.2">HOST_SECURE_TIMER_BIST_KICK</a></td>
               <td width="60"></td>
               <td>0x000000F68</td>
            </tr>
            <tr>
               <td width="100">1.8.3</td>
               <td>reg: <a href="#1.8.3">HOST_SECURE_TIMER_BIST_VAL</a></td>
               <td width="60"></td>
               <td>0x000000F6C</td>
            </tr>
            <tr>
               <td width="100">1.8.4</td>
               <td>reg: <a href="#1.8.4">HOST_CC_AO_TEST</a></td>
               <td width="60"></td>
               <td>0x000000F70</td>
            </tr>
            <tr>
               <td width="100">1.8.5</td>
               <td>reg: <a href="#1.8.5">HOST_LOW_RES_SECURE_TIMER_RST</a></td>
               <td width="60"></td>
               <td>0x000000F74</td>
            </tr>
            <tr>
               <td width="100">1.8.6</td>
               <td>reg: <a href="#1.8.6">HOST_LOW_RES_SECURE_TIMER_0</a></td>
               <td width="60"></td>
               <td>0x000000F78</td>
            </tr>
            <tr>
               <td width="100">1.8.7</td>
               <td>reg: <a href="#1.8.7">HOST_LOW_RES_SECURE_TIMER_1</a></td>
               <td width="60"></td>
               <td>0x000000F7C</td>
            </tr>
            <tr>
               <td width="100">1.8.8</td>
               <td>reg: <a href="#1.8.8">HOST_HIGH_RES_SECURE_TIMER_RST</a></td>
               <td width="60"></td>
               <td>0x000000F80</td>
            </tr>
            <tr>
               <td width="100">1.8.9</td>
               <td>reg: <a href="#1.8.9">HOST_HIGH_RES_SECURE_TIMER_0</a></td>
               <td width="60"></td>
               <td>0x000000F84</td>
            </tr>
            <tr>
               <td width="100">1.8.10</td>
               <td>reg: <a href="#1.8.10">HOST_HIGH_RES_SECURE_TIMER_1</a></td>
               <td width="60"></td>
               <td>0x000000F88</td>
            </tr>
            <tr>
               <td width="100">1.8.11</td>
               <td>reg: <a href="#1.8.11">HOST_HIGH_RES_SECURE_TIMER_TH_0</a></td>
               <td width="60"></td>
               <td>0x000000F8C</td>
            </tr>
            <tr>
               <td width="100">1.8.12</td>
               <td>reg: <a href="#1.8.12">HOST_HIGH_RES_SECURE_TIMER_TH_1</a></td>
               <td width="60"></td>
               <td>0x000000F90</td>
            </tr>
            <tr>
               <td width="100">1.8.13</td>
               <td>reg: <a href="#1.8.13">HOST_LATCHED_EXTERNAL_TIMER_0</a></td>
               <td width="60"></td>
               <td>0x000000F94</td>
            </tr>
            <tr>
               <td width="100">1.8.14</td>
               <td>reg: <a href="#1.8.14">HOST_LATCHED_EXTERNAL_TIMER_1</a></td>
               <td width="60"></td>
               <td>0x000000F98</td>
            </tr>
            <tr>
               <td width="100">1.8.15</td>
               <td>reg: <a href="#1.8.15">NVM_CC_BOOT</a></td>
               <td width="60"></td>
               <td>0x000000FA0</td>
            </tr>
            <tr>
               <td width="100">1.8.16</td>
               <td>reg: <a href="#1.8.16">HOST_AIB_ADDR_REG</a></td>
               <td width="60"></td>
               <td>0x000000FA4</td>
            </tr>
            <tr>
               <td width="100">1.8.17</td>
               <td>reg: <a href="#1.8.17">HOST_AIB_WDATA_REG</a></td>
               <td width="60"></td>
               <td>0x000000FA8</td>
            </tr>
            <tr>
               <td width="100">1.8.18</td>
               <td>reg: <a href="#1.8.18">HOST_AIB_RDATA_REG</a></td>
               <td width="60"></td>
               <td>0x000000FAC</td>
            </tr>
            <tr>
               <td width="100">1.8.19</td>
               <td>reg: <a href="#1.8.19">AIB_FUSE_PROG_COMPLETED</a></td>
               <td width="60"></td>
               <td>0x000000FB0</td>
            </tr>
            <tr>
               <td width="100">1.8.20</td>
               <td>reg: <a href="#1.8.20">AIB_FUSE_ACK</a></td>
               <td width="60"></td>
               <td>0x000000FB4</td>
            </tr>
            <tr>
               <td width="100">1.8.21</td>
               <td>reg: <a href="#1.8.21">AIB_DEBUG_STATUS</a></td>
               <td width="60"></td>
               <td>0x000000FB8</td>
            </tr>
            <tr>
               <td width="100">1.8.22</td>
               <td>reg: <a href="#1.8.22">LCS_IS_VALID</a></td>
               <td width="60"></td>
               <td>0x000000FBC</td>
            </tr>
            <tr>
               <td width="100">1.8.23</td>
               <td>reg: <a href="#1.8.23">HOST_SESSION_KEY0</a></td>
               <td width="60"></td>
               <td>0x000000FC0</td>
            </tr>
            <tr>
               <td width="100">1.8.24</td>
               <td>reg: <a href="#1.8.24">HOST_SESSION_KEY1</a></td>
               <td width="60"></td>
               <td>0x000000FC4</td>
            </tr>
            <tr>
               <td width="100">1.8.25</td>
               <td>reg: <a href="#1.8.25">HOST_SESSION_KEY2</a></td>
               <td width="60"></td>
               <td>0x000000FC8</td>
            </tr>
            <tr>
               <td width="100">1.8.26</td>
               <td>reg: <a href="#1.8.26">HOST_SESSION_KEY3</a></td>
               <td width="60"></td>
               <td>0x000000FCC</td>
            </tr>
            <tr>
               <td width="100">1.8.27</td>
               <td>reg: <a href="#1.8.27">HOST_SESSION_KEY_IS_VALID</a></td>
               <td width="60"></td>
               <td>0x000000FD0</td>
            </tr>
            <tr>
               <td width="100">1.8.28</td>
               <td>reg: <a href="#1.8.28">LCS_REG</a></td>
               <td width="60"></td>
               <td>0x000000FD4</td>
            </tr>
            <tr>
               <td width="100">1.8.29</td>
               <td>reg: <a href="#1.8.29">HOST_CPC_SECURITY_DISABLE</a></td>
               <td width="60"></td>
               <td>0x000000FD8</td>
            </tr>
            <tr>
               <td width="100">1.8.30</td>
               <td>reg: <a href="#1.8.30">HOST_AO_CC_STATE_COUNTER</a></td>
               <td width="60"></td>
               <td>0x000000FDC</td>
            </tr>
            <tr>
               <td width="100">1.8.31</td>
               <td>reg: <a href="#1.8.31">HOST_CC_AO_STATE_COUNTER_INC</a></td>
               <td width="60"></td>
               <td>0x000000FE0</td>
            </tr>
            <tr>
               <td width="100">1.8.32</td>
               <td>reg: <a href="#1.8.32">HOST_AO_CC_IS_SD</a></td>
               <td width="60"></td>
               <td>0x000000FE4</td>
            </tr>
            <tr>
               <td width="100">1.8.33</td>
               <td>reg: <a href="#1.8.33">HOST_RMA_RKEK_WR</a></td>
               <td width="60"></td>
               <td>0x000000FE8</td>
            </tr>
            <tr>
               <td width="100">1.8.34</td>
               <td>reg: <a href="#1.8.34">HOST_KCST_DISABLE</a></td>
               <td width="60"></td>
               <td>0x000000FEC</td>
            </tr>
            <tr>
               <td width="100">1.8.35</td>
               <td>reg: <a href="#1.8.35">HOST_KCST_VALID</a></td>
               <td width="60"></td>
               <td>0x000000FF0</td>
            </tr>
            <tr>
               <td width="100">1.8.36</td>
               <td>reg: <a href="#1.8.36">HOST_KPLT_VALID</a></td>
               <td width="60"></td>
               <td>0x000000FF4</td>
            </tr>
            <tr>
               <td width="100">1.9</td>
               <td>block: <a href="#1.9">ENV_REGS</a></td>
               <td width="60"></td>
               <td>0x060003000</td>
            </tr>
            <tr>
               <td width="100">1.9.1</td>
               <td>reg: <a href="#1.9.1">ENV_CC_GPI</a></td>
               <td width="60"></td>
               <td>0x060003018</td>
            </tr>
            <tr>
               <td width="100">1.9.2</td>
               <td>reg: <a href="#1.9.2">ENV_CC_GPO</a></td>
               <td width="60"></td>
               <td>0x06000301C</td>
            </tr>
            <tr>
               <td width="100">1.9.3</td>
               <td>reg: <a href="#1.9.3">ENV_PKA_DEBUG_MODE</a></td>
               <td width="60"></td>
               <td>0x060003024</td>
            </tr>
            <tr>
               <td width="100">1.9.4</td>
               <td>reg: <a href="#1.9.4">ENV_SCAN_MODE</a></td>
               <td width="60"></td>
               <td>0x060003030</td>
            </tr>
            <tr>
               <td width="100">1.9.5</td>
               <td>reg: <a href="#1.9.5">ENV_CC_ALLOW_SCAN</a></td>
               <td width="60"></td>
               <td>0x060003034</td>
            </tr>
            <tr>
               <td width="100">1.9.6</td>
               <td>reg: <a href="#1.9.6">ENV_CC_PUB_HOST_INT</a></td>
               <td width="60"></td>
               <td>0x060003068</td>
            </tr>
            <tr>
               <td width="100">1.9.7</td>
               <td>reg: <a href="#1.9.7">ENV_CC_HOST_INT</a></td>
               <td width="60"></td>
               <td>0x0600030A0</td>
            </tr>
            <tr>
               <td width="100">1.9.8</td>
               <td>reg: <a href="#1.9.8">ENV_CC_RST_N</a></td>
               <td width="60"></td>
               <td>0x0600030A8</td>
            </tr>
            <tr>
               <td width="100">1.9.9</td>
               <td>reg: <a href="#1.9.9">ENV_RST_OVERRIDE</a></td>
               <td width="60"></td>
               <td>0x0600030AC</td>
            </tr>
            <tr>
               <td width="100">1.9.10</td>
               <td>reg: <a href="#1.9.10">ENV_CC_HOST_EXT_ACK</a></td>
               <td width="60"></td>
               <td>0x0600030B0</td>
            </tr>
            <tr>
               <td width="100">1.9.11</td>
               <td>reg: <a href="#1.9.11">ENV_CC_POR_N_ADDR</a></td>
               <td width="60"></td>
               <td>0x0600030E0</td>
            </tr>
            <tr>
               <td width="100">1.9.12</td>
               <td>reg: <a href="#1.9.12">ENV_CC_WARM_BOOT</a></td>
               <td width="60"></td>
               <td>0x0600030E4</td>
            </tr>
            <tr>
               <td width="100">1.9.13</td>
               <td>reg: <a href="#1.9.13">ENV_CC_COLD_BOOT</a></td>
               <td width="60"></td>
               <td>0x0600030E8</td>
            </tr>
            <tr>
               <td width="100">1.9.14</td>
               <td>reg: <a href="#1.9.14">ENV_CC_AO_MODEL_RST</a></td>
               <td width="60"></td>
               <td>0x0600030EC</td>
            </tr>
            <tr>
               <td width="100">1.9.15</td>
               <td>reg: <a href="#1.9.15">ENV_CC_COLD_RST</a></td>
               <td width="60"></td>
               <td>0x0600030FC</td>
            </tr>
            <tr>
               <td width="100">1.9.16</td>
               <td>reg: <a href="#1.9.16">ENV_DUMMY_ADDR</a></td>
               <td width="60"></td>
               <td>0x060003108</td>
            </tr>
            <tr>
               <td width="100">1.9.17</td>
               <td>reg: <a href="#1.9.17">ENV_COUNTER_CLR</a></td>
               <td width="60"></td>
               <td>0x060003118</td>
            </tr>
            <tr>
               <td width="100">1.9.18</td>
               <td>reg: <a href="#1.9.18">ENV_COUNTER_RD</a></td>
               <td width="60"></td>
               <td>0x06000311C</td>
            </tr>
            <tr>
               <td width="100">1.9.19</td>
               <td>reg: <a href="#1.9.19">ENV_CC_SECOND_BM_LOWER_BOUND_ADDR</a></td>
               <td width="60"></td>
               <td>0x060003120</td>
            </tr>
            <tr>
               <td width="100">1.9.20</td>
               <td>reg: <a href="#1.9.20">ENV_RNG_DEBUG_ENABLE</a></td>
               <td width="60"></td>
               <td>0x060003430</td>
            </tr>
            <tr>
               <td width="100">1.9.21</td>
               <td>reg: <a href="#1.9.21">ENV_CC_LCS</a></td>
               <td width="60"></td>
               <td>0x06000343C</td>
            </tr>
            <tr>
               <td width="100">1.9.22</td>
               <td>reg: <a href="#1.9.22">ENV_CC_IS_CM_DM_SECURE_RMA</a></td>
               <td width="60"></td>
               <td>0x060003440</td>
            </tr>
            <tr>
               <td width="100">1.9.23</td>
               <td>reg: <a href="#1.9.23">ENV_DCU_EN</a></td>
               <td width="60"></td>
               <td>0x060003444</td>
            </tr>
            <tr>
               <td width="100">1.9.24</td>
               <td>reg: <a href="#1.9.24">ENV_CC_LCS_IS_VALID</a></td>
               <td width="60"></td>
               <td>0x060003448</td>
            </tr>
            <tr>
               <td width="100">1.9.25</td>
               <td>reg: <a href="#1.9.25">ENV_CRYPTOKEY_0</a></td>
               <td width="60"></td>
               <td>0x060003450</td>
            </tr>
            <tr>
               <td width="100">1.9.26</td>
               <td>reg: <a href="#1.9.26">ENV_CRYPTOKEY_1</a></td>
               <td width="60"></td>
               <td>0x060003454</td>
            </tr>
            <tr>
               <td width="100">1.9.27</td>
               <td>reg: <a href="#1.9.27">ENV_CRYPTOKEY_2</a></td>
               <td width="60"></td>
               <td>0x060003458</td>
            </tr>
            <tr>
               <td width="100">1.9.28</td>
               <td>reg: <a href="#1.9.28">ENV_CRYPTOKEY_3</a></td>
               <td width="60"></td>
               <td>0x06000345C</td>
            </tr>
            <tr>
               <td width="100">1.9.29</td>
               <td>reg: <a href="#1.9.29">ENV_CRYPTOKEY_4</a></td>
               <td width="60"></td>
               <td>0x060003460</td>
            </tr>
            <tr>
               <td width="100">1.9.30</td>
               <td>reg: <a href="#1.9.30">ENV_CRYPTOKEY_5</a></td>
               <td width="60"></td>
               <td>0x060003464</td>
            </tr>
            <tr>
               <td width="100">1.9.31</td>
               <td>reg: <a href="#1.9.31">ENV_CRYPTOKEY_6</a></td>
               <td width="60"></td>
               <td>0x060003468</td>
            </tr>
            <tr>
               <td width="100">1.9.32</td>
               <td>reg: <a href="#1.9.32">ENV_CRYPTOKEY_7</a></td>
               <td width="60"></td>
               <td>0x06000346C</td>
            </tr>
            <tr>
               <td width="100">1.9.33</td>
               <td>reg: <a href="#1.9.33">ENV_POWER_DOWN</a></td>
               <td width="60"></td>
               <td>0x060003478</td>
            </tr>
            <tr>
               <td width="100">1.9.34</td>
               <td>reg: <a href="#1.9.34">ENV_POWER_DOWN_EN</a></td>
               <td width="60"></td>
               <td>0x06000347C</td>
            </tr>
            <tr>
               <td width="100">1.9.35</td>
               <td>reg: <a href="#1.9.35">ENV_DCU_H_EN</a></td>
               <td width="60"></td>
               <td>0x060003484</td>
            </tr>
            <tr>
               <td width="100">1.9.36</td>
               <td>reg: <a href="#1.9.36">ENV_VERSION</a></td>
               <td width="60"></td>
               <td>0x060003488</td>
            </tr>
            <tr>
               <td width="100">1.9.37</td>
               <td>reg: <a href="#1.9.37">ENV_FUSE_AIB_1K_OFFSET</a></td>
               <td width="60"></td>
               <td>0x06000348C</td>
            </tr>
            <tr>
               <td width="100">1.9.38</td>
               <td>reg: <a href="#1.9.38">ENV_RESET_AO_MODEL</a></td>
               <td width="60"></td>
               <td>0x060003494</td>
            </tr>
            <tr>
               <td width="100">1.9.39</td>
               <td>reg: <a href="#1.9.39">ENV_AO_OUT_SESSION_KEY_0</a></td>
               <td width="60"></td>
               <td>0x0600034B0</td>
            </tr>
            <tr>
               <td width="100">1.9.40</td>
               <td>reg: <a href="#1.9.40">ENV_AO_OUT_SESSION_KEY_1</a></td>
               <td width="60"></td>
               <td>0x0600034B4</td>
            </tr>
            <tr>
               <td width="100">1.9.41</td>
               <td>reg: <a href="#1.9.41">ENV_AO_OUT_SESSION_KEY_2</a></td>
               <td width="60"></td>
               <td>0x0600034B8</td>
            </tr>
            <tr>
               <td width="100">1.9.42</td>
               <td>reg: <a href="#1.9.42">ENV_AO_OUT_SESSION_KEY_3</a></td>
               <td width="60"></td>
               <td>0x0600034BC</td>
            </tr>
            <tr>
               <td width="100">1.9.43</td>
               <td>reg: <a href="#1.9.43">ENV_SPIDEN</a></td>
               <td width="60"></td>
               <td>0x0600034D0</td>
            </tr>
            <tr>
               <td width="100">1.9.44</td>
               <td>reg: <a href="#1.9.44">ENV_AO_CCP_LCS_IS_SD</a></td>
               <td width="60"></td>
               <td>0x0600034D4</td>
            </tr>
            <tr>
               <td width="100">1.9.45</td>
               <td>reg: <a href="#1.9.45">ENV_CRYPTO_KEY_0</a></td>
               <td width="60"></td>
               <td>0x0600034E0</td>
            </tr>
            <tr>
               <td width="100">1.9.46</td>
               <td>reg: <a href="#1.9.46">ENV_CRYPTO_KEY_1</a></td>
               <td width="60"></td>
               <td>0x0600034E4</td>
            </tr>
            <tr>
               <td width="100">1.9.47</td>
               <td>reg: <a href="#1.9.47">ENV_CRYPTO_KEY_2</a></td>
               <td width="60"></td>
               <td>0x0600034E8</td>
            </tr>
            <tr>
               <td width="100">1.9.48</td>
               <td>reg: <a href="#1.9.48">ENV_CRYPTO_KEY_3</a></td>
               <td width="60"></td>
               <td>0x0600034EC</td>
            </tr>
            <tr>
               <td width="100">1.10</td>
               <td>block: <a href="#1.10">ENV_CC_MEMORIES</a></td>
               <td width="60"></td>
               <td>0x060004000</td>
            </tr>
            <tr>
               <td width="100">1.10.1</td>
               <td>reg: <a href="#1.10.1">ENV_FUSE_READY</a></td>
               <td width="60"></td>
               <td>0x060004000</td>
            </tr>
            <tr>
               <td width="100">1.10.2</td>
               <td>reg: <a href="#1.10.2">ENV_PERF_RAM_MASTER</a></td>
               <td width="60"></td>
               <td>0x0600040EC</td>
            </tr>
            <tr>
               <td width="100">1.10.3</td>
               <td>reg: <a href="#1.10.3">ENV_PERF_RAM_ADDR_HIGH4</a></td>
               <td width="60"></td>
               <td>0x0600040F0</td>
            </tr>
            <tr>
               <td width="100">1.10.4</td>
               <td>reg: <a href="#1.10.4">ENV_FUSES_RAM</a></td>
               <td width="60"></td>
               <td>0x0600043EC</td>
            </tr>
            <tr>
               <td width="100">1.11</td>
               <td>block: <a href="#1.11">FPGA_ENV_REGS</a></td>
               <td width="60"></td>
               <td>0x060005000</td>
            </tr>
            <tr>
               <td width="100">1.11.1</td>
               <td>reg: <a href="#1.11.1">ENV_FPGA_PKA_DEBUG_MODE</a></td>
               <td width="60"></td>
               <td>0x060005024</td>
            </tr>
            <tr>
               <td width="100">1.11.2</td>
               <td>reg: <a href="#1.11.2">ENV_FPGA_SCAN_MODE</a></td>
               <td width="60"></td>
               <td>0x060005030</td>
            </tr>
            <tr>
               <td width="100">1.11.3</td>
               <td>reg: <a href="#1.11.3">ENV_FPGA_CC_ALLOW_SCAN</a></td>
               <td width="60"></td>
               <td>0x060005034</td>
            </tr>
            <tr>
               <td width="100">1.11.4</td>
               <td>reg: <a href="#1.11.4">ENV_FPGA_CC_HOST_INT</a></td>
               <td width="60"></td>
               <td>0x0600050A0</td>
            </tr>
            <tr>
               <td width="100">1.11.5</td>
               <td>reg: <a href="#1.11.5">ENV_FPGA_CC_PUB_HOST_INT</a></td>
               <td width="60"></td>
               <td>0x0600050A4</td>
            </tr>
            <tr>
               <td width="100">1.11.6</td>
               <td>reg: <a href="#1.11.6">ENV_FPGA_CC_RST_N</a></td>
               <td width="60"></td>
               <td>0x0600050A8</td>
            </tr>
            <tr>
               <td width="100">1.11.7</td>
               <td>reg: <a href="#1.11.7">ENV_FPGA_RST_OVERRIDE</a></td>
               <td width="60"></td>
               <td>0x0600050AC</td>
            </tr>
            <tr>
               <td width="100">1.11.8</td>
               <td>reg: <a href="#1.11.8">ENV_FPGA_CC_POR_N_ADDR</a></td>
               <td width="60"></td>
               <td>0x0600050E0</td>
            </tr>
            <tr>
               <td width="100">1.11.9</td>
               <td>reg: <a href="#1.11.9">ENV_FPGA_CC_COLD_RST</a></td>
               <td width="60"></td>
               <td>0x0600050FC</td>
            </tr>
            <tr>
               <td width="100">1.11.10</td>
               <td>reg: <a href="#1.11.10">ENV_FPGA_DUMMY_ADDR</a></td>
               <td width="60"></td>
               <td>0x060005108</td>
            </tr>
            <tr>
               <td width="100">1.11.11</td>
               <td>reg: <a href="#1.11.11">ENV_FPGA_COUNTER_CLR</a></td>
               <td width="60"></td>
               <td>0x060005118</td>
            </tr>
            <tr>
               <td width="100">1.11.12</td>
               <td>reg: <a href="#1.11.12">ENV_FPGA_COUNTER_RD</a></td>
               <td width="60"></td>
               <td>0x06000511C</td>
            </tr>
            <tr>
               <td width="100">1.11.13</td>
               <td>reg: <a href="#1.11.13">ENV_FPGA_RNG_DEBUG_ENABLE</a></td>
               <td width="60"></td>
               <td>0x060005430</td>
            </tr>
            <tr>
               <td width="100">1.11.14</td>
               <td>reg: <a href="#1.11.14">ENV_FPGA_CC_LCS</a></td>
               <td width="60"></td>
               <td>0x06000543C</td>
            </tr>
            <tr>
               <td width="100">1.11.15</td>
               <td>reg: <a href="#1.11.15">ENV_FPGA_CC_IS_CM_DM_SECURE_RMA</a></td>
               <td width="60"></td>
               <td>0x060005440</td>
            </tr>
            <tr>
               <td width="100">1.11.16</td>
               <td>reg: <a href="#1.11.16">ENV_FPGA_DCU_EN</a></td>
               <td width="60"></td>
               <td>0x060005444</td>
            </tr>
            <tr>
               <td width="100">1.11.17</td>
               <td>reg: <a href="#1.11.17">ENV_FPGA_CC_LCS_IS_VALID</a></td>
               <td width="60"></td>
               <td>0x060005448</td>
            </tr>
            <tr>
               <td width="100">1.11.18</td>
               <td>reg: <a href="#1.11.18">ENV_FPGA_POWER_DOWN</a></td>
               <td width="60"></td>
               <td>0x060005478</td>
            </tr>
            <tr>
               <td width="100">1.11.19</td>
               <td>reg: <a href="#1.11.19">ENV_FPGA_DCU_H_EN</a></td>
               <td width="60"></td>
               <td>0x060005484</td>
            </tr>
            <tr>
               <td width="100">1.11.20</td>
               <td>reg: <a href="#1.11.20">ENV_FPGA_VERSION</a></td>
               <td width="60"></td>
               <td>0x060005488</td>
            </tr>
            <tr>
               <td width="100">1.11.21</td>
               <td>reg: <a href="#1.11.21">ENV_FPGA_ROSC_WRITE</a></td>
               <td width="60"></td>
               <td>0x06000548C</td>
            </tr>
            <tr>
               <td width="100">1.11.22</td>
               <td>reg: <a href="#1.11.22">ENV_FPGA_ROSC_ADDR</a></td>
               <td width="60"></td>
               <td>0x060005490</td>
            </tr>
            <tr>
               <td width="100">1.11.23</td>
               <td>reg: <a href="#1.11.23">ENV_FPGA_RESET_SESSION_KEY</a></td>
               <td width="60"></td>
               <td>0x060005494</td>
            </tr>
            <tr>
               <td width="100">1.11.24</td>
               <td>reg: <a href="#1.11.24">ENV_FPGA_SESSION_KEY_0</a></td>
               <td width="60"></td>
               <td>0x0600054A0</td>
            </tr>
            <tr>
               <td width="100">1.11.25</td>
               <td>reg: <a href="#1.11.25">ENV_FPGA_SESSION_KEY_1</a></td>
               <td width="60"></td>
               <td>0x0600054A4</td>
            </tr>
            <tr>
               <td width="100">1.11.26</td>
               <td>reg: <a href="#1.11.26">ENV_FPGA_SESSION_KEY_2</a></td>
               <td width="60"></td>
               <td>0x0600054A8</td>
            </tr>
            <tr>
               <td width="100">1.11.27</td>
               <td>reg: <a href="#1.11.27">ENV_FPGA_SESSION_KEY_3</a></td>
               <td width="60"></td>
               <td>0x0600054AC</td>
            </tr>
            <tr>
               <td width="100">1.11.28</td>
               <td>reg: <a href="#1.11.28">ENV_FPGA_SESSION_KEY_VALID</a></td>
               <td width="60"></td>
               <td>0x0600054B0</td>
            </tr>
            <tr>
               <td width="100">1.11.29</td>
               <td>reg: <a href="#1.11.29">ENV_FPGA_SPIDEN</a></td>
               <td width="60"></td>
               <td>0x0600054D0</td>
            </tr>
            <tr>
               <td width="100">1.11.30</td>
               <td>reg: <a href="#1.11.30">ENV_FPGA_AXIM_USER_PARAMS</a></td>
               <td width="60"></td>
               <td>0x060005600</td>
            </tr>
            <tr>
               <td width="100">1.11.31</td>
               <td>reg: <a href="#1.11.31">ENV_FPGA_SECURITY_MODE_OVERRIDE</a></td>
               <td width="60"></td>
               <td>0x060005604</td>
            </tr>
            <tr>
               <td width="100">1.11.32</td>
               <td>reg: <a href="#1.11.32">ENV_FPGA_AO_CC_KPLT_0</a></td>
               <td width="60"></td>
               <td>0x060005620</td>
            </tr>
            <tr>
               <td width="100">1.11.33</td>
               <td>reg: <a href="#1.11.33">ENV_FPGA_AO_CC_KPLT_1</a></td>
               <td width="60"></td>
               <td>0x060005624</td>
            </tr>
            <tr>
               <td width="100">1.11.34</td>
               <td>reg: <a href="#1.11.34">ENV_FPGA_AO_CC_KPLT_2</a></td>
               <td width="60"></td>
               <td>0x060005628</td>
            </tr>
            <tr>
               <td width="100">1.11.35</td>
               <td>reg: <a href="#1.11.35">ENV_FPGA_AO_CC_KPLT_3</a></td>
               <td width="60"></td>
               <td>0x06000562C</td>
            </tr>
            <tr>
               <td width="100">1.11.36</td>
               <td>reg: <a href="#1.11.36">ENV_FPGA_AO_CC_KCST_0</a></td>
               <td width="60"></td>
               <td>0x060005630</td>
            </tr>
            <tr>
               <td width="100">1.11.37</td>
               <td>reg: <a href="#1.11.37">ENV_FPGA_AO_CC_KCST_1</a></td>
               <td width="60"></td>
               <td>0x060005634</td>
            </tr>
            <tr>
               <td width="100">1.11.38</td>
               <td>reg: <a href="#1.11.38">ENV_FPGA_AO_CC_KCST_2</a></td>
               <td width="60"></td>
               <td>0x060005638</td>
            </tr>
            <tr>
               <td width="100">1.11.39</td>
               <td>reg: <a href="#1.11.39">ENV_FPGA_AO_CC_KCST_3</a></td>
               <td width="60"></td>
               <td>0x06000563C</td>
            </tr>
            <tr>
               <td width="100">1.11.40</td>
               <td>reg: <a href="#1.11.40">ENV_FPGA_APB_FIPS_ADDR</a></td>
               <td width="60"></td>
               <td>0x060005650</td>
            </tr>
            <tr>
               <td width="100">1.11.41</td>
               <td>reg: <a href="#1.11.41">ENV_FPGA_APB_FIPS_VAL</a></td>
               <td width="60"></td>
               <td>0x060005654</td>
            </tr>
            <tr>
               <td width="100">1.11.42</td>
               <td>reg: <a href="#1.11.42">ENV_FPGA_APB_FIPS_MASK</a></td>
               <td width="60"></td>
               <td>0x060005658</td>
            </tr>
            <tr>
               <td width="100">1.11.43</td>
               <td>reg: <a href="#1.11.43">ENV_FPGA_APB_FIPS_CNT</a></td>
               <td width="60"></td>
               <td>0x06000565C</td>
            </tr>
            <tr>
               <td width="100">1.11.44</td>
               <td>reg: <a href="#1.11.44">ENV_FPGA_APB_FIPS_NEW_ADDR</a></td>
               <td width="60"></td>
               <td>0x060005660</td>
            </tr>
            <tr>
               <td width="100">1.11.45</td>
               <td>reg: <a href="#1.11.45">ENV_FPGA_APB_FIPS_NEW_VAL</a></td>
               <td width="60"></td>
               <td>0x060005664</td>
            </tr>
            <tr>
               <td width="100">1.11.46</td>
               <td>reg: <a href="#1.11.46">ENV_FPGA_APBP_FIPS_ADDR</a></td>
               <td width="60"></td>
               <td>0x060005670</td>
            </tr>
            <tr>
               <td width="100">1.11.47</td>
               <td>reg: <a href="#1.11.47">ENV_FPGA_APBP_FIPS_VAL</a></td>
               <td width="60"></td>
               <td>0x060005674</td>
            </tr>
            <tr>
               <td width="100">1.11.48</td>
               <td>reg: <a href="#1.11.48">ENV_FPGA_APBP_FIPS_MASK</a></td>
               <td width="60"></td>
               <td>0x060005678</td>
            </tr>
            <tr>
               <td width="100">1.11.49</td>
               <td>reg: <a href="#1.11.49">ENV_FPGA_APBP_FIPS_CNT</a></td>
               <td width="60"></td>
               <td>0x06000567C</td>
            </tr>
            <tr>
               <td width="100">1.11.50</td>
               <td>reg: <a href="#1.11.50">ENV_FPGA_APBP_FIPS_NEW_ADDR</a></td>
               <td width="60"></td>
               <td>0x060005680</td>
            </tr>
            <tr>
               <td width="100">1.11.51</td>
               <td>reg: <a href="#1.11.51">ENV_FPGA_APBP_FIPS_NEW_VAL</a></td>
               <td width="60"></td>
               <td>0x060005684</td>
            </tr>
            <tr>
               <td width="100">1.11.52</td>
               <td>reg: <a href="#1.11.52">ENV_FPGA_CC_POWERDOWN_EN</a></td>
               <td width="60"></td>
               <td>0x060005690</td>
            </tr>
            <tr>
               <td width="100">1.11.53</td>
               <td>reg: <a href="#1.11.53">ENV_FPGA_CC_POWERDOWN_RST_EN</a></td>
               <td width="60"></td>
               <td>0x060005694</td>
            </tr>
            <tr>
               <td width="100">1.11.54</td>
               <td>reg: <a href="#1.11.54">ENV_FPGA_POWERDOWN_RST_CNTR</a></td>
               <td width="60"></td>
               <td>0x060005698</td>
            </tr>
            <tr>
               <td width="100">1.11.55</td>
               <td>reg: <a href="#1.11.55">ENV_FPGA_POWERDOWN_EN_DEBUG</a></td>
               <td width="60"></td>
               <td>0x06000569C</td>
            </tr>
            <tr>
               <td width="100">1.12</td>
               <td>block: <a href="#1.12">ENV_PERF_RAM_BASE</a></td>
               <td width="60"></td>
               <td>0x060006000</td>
            </tr>
            <tr>
               <td width="100">1.12.1</td>
               <td>reg: <a href="#1.12.1">ENV_PERF_RAM_BASE</a></td>
               <td width="60"></td>
               <td>0x060006000</td>
            </tr>
         </table>
      </td>
   </tr>
</table><br><a name="1"></a><table border="0" width="95%" bgcolor="#993333">
   <td><b><font color="#FFFF00" size="+2">1 : Chip: CryptoCell</font></b></td>
   <td align="right"><font color="#FFFF00" size="+2">0x000000000</font></td>
</table><br><br>
Blocks:
<br><a href="#1.1">PKA</a><br><a href="#1.2">RNG</a><br><a href="#1.3">MISC</a><br><a href="#1.4">HOST_RGF</a><br><a href="#1.5">AXI</a><br><a href="#1.6">DSCRPTR</a><br><a href="#1.7">HOST_SRAM</a><br><a href="#1.8">NVM</a><br><a href="#1.9">ENV_REGS</a><br><a href="#1.10">ENV_CC_MEMORIES</a><br><a href="#1.11">FPGA_ENV_REGS</a><br><a href="#1.12">ENV_PERF_RAM_BASE</a><br><a name="1.1"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.1 : Block: PKA</font></b></td>
   <td align="right"><font color="#000000">0x000000000</font></td>
</table><br><a name="1.1.1"></a><br>1.1.1 : <b>Reg : MEMORY_MAP0</b> : 0x000000000<br><b>reg sep address</b> : 40008000<b> reg host address</b> : 1000<br>This register maps the virtual register R0 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.1.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.1.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R0 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.1.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.2"></a><br>1.1.2 : <b>Reg : MEMORY_MAP1</b> : 0x000000004<br><b>reg sep address</b> : 40008004<b> reg host address</b> : 1004<br>This register maps the virtual register R1 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.2.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.2.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R1 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.2.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.3"></a><br>1.1.3 : <b>Reg : MEMORY_MAP2</b> : 0x000000008<br><b>reg sep address</b> : 40008008<b> reg host address</b> : 1008<br>This register maps the virtual register R2 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.3.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.3.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP2</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R2 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.3.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.4"></a><br>1.1.4 : <b>Reg : MEMORY_MAP3</b> : 0x00000000C<br><b>reg sep address</b> : 4000800C<b> reg host address</b> : 100C<br>This register maps the virtual register R3 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.4.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.4.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP3</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R3 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.4.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.5"></a><br>1.1.5 : <b>Reg : MEMORY_MAP4</b> : 0x000000010<br><b>reg sep address</b> : 40008010<b> reg host address</b> : 1010<br>This register maps the virtual register R4 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP4</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.5.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.5.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP4</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R4 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.5.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.6"></a><br>1.1.6 : <b>Reg : MEMORY_MAP5</b> : 0x000000014<br><b>reg sep address</b> : 40008014<b> reg host address</b> : 1014<br>This register maps the virtual register R5 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP5</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.6.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.6.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP5</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R5 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.6.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.7"></a><br>1.1.7 : <b>Reg : MEMORY_MAP6</b> : 0x000000018<br><b>reg sep address</b> : 40008018<b> reg host address</b> : 1018<br>This register maps the virtual register R6 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP6</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.7.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.7.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP6</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R6 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.7.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.8"></a><br>1.1.8 : <b>Reg : MEMORY_MAP7</b> : 0x00000001C<br><b>reg sep address</b> : 4000801C<b> reg host address</b> : 101C<br>This register maps the virtual register R7 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP7</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.8.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.8.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP7</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R7 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.8.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.9"></a><br>1.1.9 : <b>Reg : MEMORY_MAP8</b> : 0x000000020<br><b>reg sep address</b> : 40008020<b> reg host address</b> : 1020<br>This register maps the virtual register R8 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP8</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.9.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.9.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP8</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R8 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.9.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.10"></a><br>1.1.10 : <b>Reg : MEMORY_MAP9</b> : 0x000000024<br><b>reg sep address</b> : 40008024<b> reg host address</b> : 1024<br>This register maps the virtual register R9 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP9</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.10.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.10.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP9</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R9 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.10.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.11"></a><br>1.1.11 : <b>Reg : MEMORY_MAP10</b> : 0x000000028<br><b>reg sep address</b> : 40008028<b> reg host address</b> : 1028<br>This register maps the virtual register R10 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP10</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.11.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.11.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP10</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R10 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.11.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.12"></a><br>1.1.12 : <b>Reg : MEMORY_MAP11</b> : 0x00000002C<br><b>reg sep address</b> : 4000802C<b> reg host address</b> : 102C<br>This register maps the virtual register R11 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP11</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.12.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.12.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP11</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R11 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.12.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.13"></a><br>1.1.13 : <b>Reg : MEMORY_MAP12</b> : 0x000000030<br><b>reg sep address</b> : 40008030<b> reg host address</b> : 1030<br>This register maps the virtual register R12 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP12</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.13.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.13.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP12</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R12 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.13.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.14"></a><br>1.1.14 : <b>Reg : MEMORY_MAP13</b> : 0x000000034<br><b>reg sep address</b> : 40008034<b> reg host address</b> : 1034<br>This register maps the virtual register R13 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP13</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.14.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.14.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP13</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R13 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.14.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.15"></a><br>1.1.15 : <b>Reg : MEMORY_MAP14</b> : 0x000000038<br><b>reg sep address</b> : 40008038<b> reg host address</b> : 1038<br>This register maps the virtual register R14 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP14</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.15.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.15.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP14</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R14 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.15.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.16"></a><br>1.1.16 : <b>Reg : MEMORY_MAP15</b> : 0x00000003C<br><b>reg sep address</b> : 4000803C<b> reg host address</b> : 103C<br>This register maps the virtual register R15 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP15</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.16.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.16.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP15</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R15 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.16.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.17"></a><br>1.1.17 : <b>Reg : MEMORY_MAP16</b> : 0x000000040<br><b>reg sep address</b> : 40008040<b> reg host address</b> : 1040<br>This register maps the virtual register R16 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP16</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.17.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.17.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP16</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R16 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.17.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.18"></a><br>1.1.18 : <b>Reg : MEMORY_MAP17</b> : 0x000000044<br><b>reg sep address</b> : 40008044<b> reg host address</b> : 1044<br>This register maps the virtual register R17 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP17</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.18.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.18.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP17</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R17 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.18.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.19"></a><br>1.1.19 : <b>Reg : MEMORY_MAP18</b> : 0x000000048<br><b>reg sep address</b> : 40008048<b> reg host address</b> : 1048<br>This register maps the virtual register R18 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP18</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.19.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.19.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP18</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R18 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.19.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.20"></a><br>1.1.20 : <b>Reg : MEMORY_MAP19</b> : 0x00000004C<br><b>reg sep address</b> : 4000804C<b> reg host address</b> : 104C<br>This register maps the virtual register R19 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP19</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.20.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.20.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP19</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R19 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.20.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.21"></a><br>1.1.21 : <b>Reg : MEMORY_MAP20</b> : 0x000000050<br><b>reg sep address</b> : 40008050<b> reg host address</b> : 1050<br>This register maps the virtual register R20 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP20</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.21.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.21.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP20</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R20 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.21.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.22"></a><br>1.1.22 : <b>Reg : MEMORY_MAP21</b> : 0x000000054<br><b>reg sep address</b> : 40008054<b> reg host address</b> : 1054<br>This register maps the virtual register R21 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP21</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.22.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.22.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP21</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R21 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.22.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.23"></a><br>1.1.23 : <b>Reg : MEMORY_MAP22</b> : 0x000000058<br><b>reg sep address</b> : 40008058<b> reg host address</b> : 1058<br>This register maps the virtual register R22 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP22</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.23.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.23.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP22</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R22 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.23.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.24"></a><br>1.1.24 : <b>Reg : MEMORY_MAP23</b> : 0x00000005C<br><b>reg sep address</b> : 4000805C<b> reg host address</b> : 105C<br>This register maps the virtual register R23 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP23</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.24.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.24.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP23</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R23 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.24.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.25"></a><br>1.1.25 : <b>Reg : MEMORY_MAP24</b> : 0x000000060<br><b>reg sep address</b> : 40008060<b> reg host address</b> : 1060<br>This register maps the virtual register R24 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP24</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.25.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.25.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP24</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R24 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.25.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.26"></a><br>1.1.26 : <b>Reg : MEMORY_MAP25</b> : 0x000000064<br><b>reg sep address</b> : 40008064<b> reg host address</b> : 1064<br>This register maps the virtual register R25 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP25</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.26.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.26.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP25</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R25 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.26.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.27"></a><br>1.1.27 : <b>Reg : MEMORY_MAP26</b> : 0x000000068<br><b>reg sep address</b> : 40008068<b> reg host address</b> : 1068<br>This register maps the virtual register R26 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP26</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.27.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.27.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP26</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R26 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.27.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.28"></a><br>1.1.28 : <b>Reg : MEMORY_MAP27</b> : 0x00000006C<br><b>reg sep address</b> : 4000806C<b> reg host address</b> : 106C<br>This register maps the virtual register R27 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP27</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.28.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.28.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP27</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R27 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.28.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.29"></a><br>1.1.29 : <b>Reg : MEMORY_MAP28</b> : 0x000000070<br><b>reg sep address</b> : 40008070<b> reg host address</b> : 1070<br>This register maps the virtual register R28 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP28</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.29.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.29.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP28</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R28 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.29.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.30"></a><br>1.1.30 : <b>Reg : MEMORY_MAP29</b> : 0x000000074<br><b>reg sep address</b> : 40008074<b> reg host address</b> : 1074<br>This register maps the virtual register R29 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP29</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.30.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.30.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP29</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R29 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.30.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.31"></a><br>1.1.31 : <b>Reg : MEMORY_MAP30</b> : 0x000000078<br><b>reg sep address</b> : 40008078<b> reg host address</b> : 1078<br>This register maps the virtual register R30 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP30</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.31.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.31.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP30</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R30 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.31.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.32"></a><br>1.1.32 : <b>Reg : MEMORY_MAP31</b> : 0x00000007C<br><b>reg sep address</b> : 4000807C<b> reg host address</b> : 107C<br>This register maps the virtual register R31 to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">MEMORY_MAP31</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.32.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.32.2"></a>10:2
      </td>
      <td valign="top">MEMORY_MAP31</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the R31 register to.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.32.3"></a>31:11
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.33"></a><br>1.1.33 : <b>Reg : OPCODE</b> : 0x000000080<br><b>reg sep address</b> : 40008080<b> reg host address</b> : 1080<br>This register holds the PKA's OPCODE.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">OPCODE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.33.1"></a>5:0
      </td>
      <td valign="top">TAG</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Holds the opreation's tag or the operand C virtual address.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.33.2"></a>11:6
      </td>
      <td valign="top">REG_R</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Result register virtual address 0-15.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.33.3"></a>17:12
      </td>
      <td valign="top">REG_B</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Operand B virtual address 0-15.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.33.4"></a>23:18
      </td>
      <td valign="top">REG_A</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Operand A virtual address 0-15.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.33.5"></a>26:24
      </td>
      <td valign="top">LEN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The length of the operation. The value serves as a pointer to PKA length register, for example, if the value is 0, PKA_L0
         holds the size of the operation.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.33.6"></a>31:27
      </td>
      <td valign="top">OPCODE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Defines the PKA operation:<br>@0x4 - Add,Inc<br>@0x5 - Sub,Dec,Neg<br>@0x6 - ModAdd,ModInc<br>@0x7 - ModSub,ModDec,ModNeg<br>@0x8 - AND,TST0,CLR0<br>@0x9 - OR,COPY,SET0<br>@0xa - XOR,FLIP0,INVERT,COMPARE<br>@0xc - SHR0<br>@0xd - SHR1<br>@0xe - SHL0<br>@0xf - SHL1<br>@0x10 - MulLow<br>@0x11 - ModMul<br>@0x12 - ModMulN<br>@0x13 - ModExp<br>@0x14 - Division<br>@0x15 - Div<br>@0x16 - ModDiv<br>@0x00 - Terminate
      </td>
   </tr>
</table><a name="1.1.34"></a><br>1.1.34 : <b>Reg : N_NP_T0_T1_ADDR</b> : 0x000000084<br><b>reg sep address</b> : 40008084<b> reg host address</b> : 1084<br>This register maps N_NP_T0_T1 to a virtual address.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">N_NP_T0_T1_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.34.1"></a>4:0
      </td>
      <td valign="top">N_VIRTUAL_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Virtual address of register N.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.34.2"></a>9:5
      </td>
      <td valign="top">NP_VIRTUAL_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Virtual address of register NP.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.34.3"></a>14:10
      </td>
      <td valign="top">T0_VIRTUAL_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Virtual address of temporary register number 0</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.34.4"></a>19:15
      </td>
      <td valign="top">T1_VIRTUAL_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Virtual address of temporary register number 1</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.34.5"></a>31:20
      </td>
      <td valign="top">Reserved</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.35"></a><br>1.1.35 : <b>Reg : PKA_STATUS</b> : 0x000000088<br><b>reg sep address</b> : 40008088<b> reg host address</b> : 1088<br>This register holds the PKA pipe status.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_STATUS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.1"></a>3:0
      </td>
      <td valign="top">ALU_MSB_4BITS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The most significant 4-bits of the operand updated in shift operation.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.2"></a>7:4
      </td>
      <td valign="top">ALU_LSB_4BITS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The least significant 4-bits of the operand updated in shift operation.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.3"></a>8:8
      </td>
      <td valign="top">ALU_SIGN_OUT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates the last operation's sign (MSB).</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.4"></a>9:9
      </td>
      <td valign="top">ALU_CARRY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Holds the carry of the last ALU operation.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.5"></a>10:10
      </td>
      <td valign="top">ALU_CARRY_MOD</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">holds the carry of the last Modular operation.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.6"></a>11:11
      </td>
      <td valign="top">ALU_SUB_IS_ZERO</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates the last subtraction operation's sign .</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.7"></a>12:12
      </td>
      <td valign="top">ALU_OUT_ZERO</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Indicates if the result of ALU OUT is zero.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.8"></a>13:13
      </td>
      <td valign="top">ALU_MODOVRFLW</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Modular overflow flag.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.9"></a>14:14
      </td>
      <td valign="top">DIV_BY_ZERO</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indication if the division is done by zero.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.10"></a>15:15
      </td>
      <td valign="top">MODINV_OF_ZERO</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates the Modular inverse of zero.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.11"></a>20:16
      </td>
      <td valign="top">OPCODE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Opcode of the last operation</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.35.12"></a>31:21
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.36"></a><br>1.1.36 : <b>Reg : PKA_SW_RESET</b> : 0x00000008C<br><b>reg sep address</b> : 4000808C<b> reg host address</b> : 108C<br>Writing to this register triggers a software reset of the PKA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_SW_RESET</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.36.1"></a>0:0
      </td>
      <td valign="top">PKA_SW_RESET</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The reset mechanism takes about four PKA clock cycles until the reset line is deasserted</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.36.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.37"></a><br>1.1.37 : <b>Reg : PKA_L0</b> : 0x000000090<br><b>reg sep address</b> : 40008090<b> reg host address</b> : 1090<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.37.1"></a>12:0
      </td>
      <td valign="top">PKA_L0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.37.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.38"></a><br>1.1.38 : <b>Reg : PKA_L1</b> : 0x000000094<br><b>reg sep address</b> : 40008094<b> reg host address</b> : 1094<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.38.1"></a>12:0
      </td>
      <td valign="top">PKA_L1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.38.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.39"></a><br>1.1.39 : <b>Reg : PKA_L2</b> : 0x000000098<br><b>reg sep address</b> : 40008098<b> reg host address</b> : 1098<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.39.1"></a>12:0
      </td>
      <td valign="top">PKA_L2</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.39.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.40"></a><br>1.1.40 : <b>Reg : PKA_L3</b> : 0x00000009C<br><b>reg sep address</b> : 4000809C<b> reg host address</b> : 109C<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.40.1"></a>12:0
      </td>
      <td valign="top">PKA_L3</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.40.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.41"></a><br>1.1.41 : <b>Reg : PKA_L4</b> : 0x0000000A0<br><b>reg sep address</b> : 400080A0<b> reg host address</b> : 10A0<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L4</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.41.1"></a>12:0
      </td>
      <td valign="top">PKA_L4</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.41.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.42"></a><br>1.1.42 : <b>Reg : PKA_L5</b> : 0x0000000A4<br><b>reg sep address</b> : 400080A4<b> reg host address</b> : 10A4<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L5</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.42.1"></a>12:0
      </td>
      <td valign="top">PKA_L5</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.42.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.43"></a><br>1.1.43 : <b>Reg : PKA_L6</b> : 0x0000000A8<br><b>reg sep address</b> : 400080A8<b> reg host address</b> : 10A8<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L6</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.43.1"></a>12:0
      </td>
      <td valign="top">PKA_L6</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.43.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.44"></a><br>1.1.44 : <b>Reg : PKA_L7</b> : 0x0000000AC<br><b>reg sep address</b> : 400080AC<b> reg host address</b> : 10AC<br>This register holds the size of the operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_L7</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.44.1"></a>12:0
      </td>
      <td valign="top">PKA_L7</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Size of the operation in bytes.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.44.2"></a>31:13
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.45"></a><br>1.1.45 : <b>Reg : PKA_PIPE_RDY</b> : 0x0000000B0<br><b>reg sep address</b> : 400080B0<b> reg host address</b> : 10B0<br>This  register indicates whether the PKA pipe is ready to receive a new OPCODE.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_PIPE_RDY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.45.1"></a>0:0
      </td>
      <td valign="top">PKA_PIPE_RDY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Indication whether PKA pipe is ready for new OPCODE.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.45.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.46"></a><br>1.1.46 : <b>Reg : PKA_DONE</b> : 0x0000000B4<br><b>reg sep address</b> : 400080B4<b> reg host address</b> : 10B4<br>This register indicates whether PKA operation is completed.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_DONE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.46.1"></a>0:0
      </td>
      <td valign="top">PKA_DONE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Indicates if PKA operation is completed, and pipe is empty.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.46.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.47"></a><br>1.1.47 : <b>Reg : PKA_MON_SELECT</b> : 0x0000000B8<br><b>reg sep address</b> : 400080B8<b> reg host address</b> : 10B8<br>This register defines which PKA FSM monitor is being output.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_MON_SELECT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.47.1"></a>3:0
      </td>
      <td valign="top">PKA_MON_SELECT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Defines which PKA FSM monitor is being output.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.47.2"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.1.48"></a><br>1.1.48 : <b>Reg : PKA_VERSION</b> : 0x0000000C4<br><b>reg sep address</b> : 400080C4<b> reg host address</b> : 10C4<br>This register holds the pka version<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_VERSION</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.48.1"></a>31:0
      </td>
      <td valign="top">PKA_VERSION</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">This is the PKA version</td>
   </tr>
</table><a name="1.1.49"></a><br>1.1.49 : <b>Reg : PKA_MON_READ</b> : 0x0000000D0<br><b>reg sep address</b> : 400080D0<b> reg host address</b> : 10D0<br>The PKA monitor bus register.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_MON_READ</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.49.1"></a>31:0
      </td>
      <td valign="top">PKA_MON_READ</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This is the PKA monitor bus register output</td>
   </tr>
</table><a name="1.1.50"></a><br>1.1.50 : <b>Reg : PKA_SRAM_ADDR</b> : 0x0000000D4<br><b>reg sep address</b> : 400080D4<b> reg host address</b> : 10D4<br>first address given to PKA SRAM for write transactions.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_SRAM_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.50.1"></a>31:0
      </td>
      <td valign="top">PKA_SRAM_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PKA SRAM write starting address</td>
   </tr>
</table><a name="1.1.51"></a><br>1.1.51 : <b>Reg : PKA_SRAM_WDATA</b> : 0x0000000D8<br><b>reg sep address</b> : 400080D8<b> reg host address</b> : 10D8<br>Write data to PKA SRAM.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_SRAM_WDATA</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.51.1"></a>31:0
      </td>
      <td valign="top">PKA_SRAM_WDATA</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">32 bit write to PKA SRAM:  triggers the SRAM write DMA address automatically incremented</td>
   </tr>
</table><a name="1.1.52"></a><br>1.1.52 : <b>Reg : PKA_SRAM_RDATA</b> : 0x0000000DC<br><b>reg sep address</b> : 400080DC<b> reg host address</b> : 10DC<br>Read data from PKA SRAM.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_SRAM_RDATA</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.52.1"></a>31:0
      </td>
      <td valign="top">PKA_SRAM_RDATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">32 bit read from PKA SRAM: read - triggers the SRAM read DMA address automatically incremented</td>
   </tr>
</table><a name="1.1.53"></a><br>1.1.53 : <b>Reg : PKA_SRAM_WR_CLR</b> : 0x0000000E0<br><b>reg sep address</b> : 400080e0<b> reg host address</b> : 10E0<br>Write buffer clean.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_SRAM_WR_CLR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.53.1"></a>31:0
      </td>
      <td valign="top">PKA_SRAM_WR_CLR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Clear the write buffer.</td>
   </tr>
</table><a name="1.1.54"></a><br>1.1.54 : <b>Reg : PKA_SRAM_RADDR</b> : 0x0000000E4<br><b>reg sep address</b> : 400080e4<b> reg host address</b> : 10e4<br>first address given to PKA SRAM for read transactions.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_SRAM_RADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.54.1"></a>31:0
      </td>
      <td valign="top">PKA_SRAM_RADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PKA SRAM read starting address</td>
   </tr>
</table><a name="1.1.55"></a><br>1.1.55 : <b>Reg : PKA_WORD_ACCESS</b> : 0x0000000F0<br><b>reg sep address</b> : 400080f0<b> reg host address</b> : 10f0<br>This register hold to data write or read from PKA when using special read or write word operation.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_WORD_ACCESS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.55.1"></a>31:0
      </td>
      <td valign="top">PKA_WORD_ACCESS</td>
      <td valign="top" align="center">wrc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">32 bit read/write data.</td>
   </tr>
</table><a name="1.1.56"></a><br>1.1.56 : <b>Reg : PKA_BUFF_ADDR</b> : 0x0000000F8<br><b>reg sep address</b> : 400080f8<b> reg host address</b> : 10f8<br>This register maps the virtual buffer registers  to a physical address in memory.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_BUFF_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.56.1"></a>11:0
      </td>
      <td valign="top">PKA_BUF_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the physical address in memory to map the buffer registers.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.1.56.2"></a>31:12
      </td>
      <td valign="top">RESEREVED1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.1">(top of block)</a><a name="1.2"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.2 : Block: RNG</font></b></td>
   <td align="right"><font color="#000000">0x000000100</font></td>
</table><br><a name="1.2.1"></a><br>1.2.1 : <b>Reg : RNG_IMR</b> : 0x000000100<br><b>reg sep address</b> : 4000B100<b> reg host address</b> : 1100<br>Interrupt masking register.<br>Consists of {prng_imr trng_imr} bit[31-16] - PRNG_IMR bit[15-0] - TRNG_IMR <br>(Ws - PRNG bit exists only if PRNG_EXISTS flag)<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_IMR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.1"></a>0:0
      </td>
      <td valign="top">EHR_VALID_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">1'b1 - masks the EHR interrupt. No interrupt is generated. <br>See RNG_ISR for explanation on this interrupt.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.2"></a>1:1
      </td>
      <td valign="top">AUTOCORR_ERR_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">1'b1 - masks the autocorrelation interrupt. No interrupt is generated. <br>See RNG_ISR for explanation on this interrupt.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.3"></a>2:2
      </td>
      <td valign="top">CRNGT_ERR_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">1'b1 - masks the CRNGT error interrupt. No interrupt is generated. <br>See RNG_ISR for explanation on this interrupt.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.4"></a>3:3
      </td>
      <td valign="top">VN_ERR_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">1'b1 - masks the Von-Neumann error interrupt. No interrupt is generated. <br>See RNG_ISR for explanation on this interrupt.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.5"></a>4:4
      </td>
      <td valign="top">WATCHDOG_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">1'b1 - masks the watchdog interrupt. No interrupt is generated. <br>See RNG_ISR for explanation on this interrupt.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.6"></a>5:5
      </td>
      <td valign="top">RNG_DMA_DONE_INT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">1'b1 - masks the RNG DMA completion interrupt. No interrupt is generated. <br>See RNG_ISR for explanation on this interrupt.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.1.7"></a>31:6
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.2"></a><br>1.2.2 : <b>Reg : RNG_ISR</b> : 0x000000104<br><b>reg sep address</b> : 4000B104<b> reg host address</b> : 1104<br>Status register. <br>If corresponding RNG_IMR bit is unmasked, an interrupt is generated. <br>Consists of trng_isr and prng_isr bit[15-0] - TRNG bit[31-16] - PRNG<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_ISR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.1"></a>0:0
      </td>
      <td valign="top">EHR_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that 192 bits have been collected in the TRNG and are ready to be read.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.2"></a>1:1
      </td>
      <td valign="top">AUTOCORR_ERR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates Autocorrelation test failed four times in a row. When it set ,TRNG ceases to function until next reset.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.3"></a>2:2
      </td>
      <td valign="top">CRNGT_ERR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates CRNGT in the TRNG test failed. Failure occurs when two consecutive blocks of 16 collected bits are equal.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.4"></a>3:3
      </td>
      <td valign="top">VN_ERR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates Von Neumann error. Error in von Neumann occurs if 32 consecutive collected bits are identical, ZERO, or ONE.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.5"></a>4:4
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.6"></a>5:5
      </td>
      <td valign="top">RNG_DMA_DONE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates RNG DMA to SRAM is completed.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.7"></a>15:6
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.8"></a>16:16
      </td>
      <td valign="top">RESEEDING_DONE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates completion of reseeding algorithm with no errors.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.9"></a>17:17
      </td>
      <td valign="top">INSTANTIATION_DONE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates completion of instantiation algorithm with no errors.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.10"></a>18:18
      </td>
      <td valign="top">FINAL_UPDATE_DONE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates completion of final update algorithm.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.11"></a>19:19
      </td>
      <td valign="top">OUTPUT_READY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that the result of PRNG is valid and ready to be read. The result can be read from the RNG_READOUT register.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.12"></a>20:20
      </td>
      <td valign="top">RESEED_CNTR_FULL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that the reseed counter has reached 2^48, requiring to run the reseed algorithm before generating new random
         numbers.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.13"></a>21:21
      </td>
      <td valign="top">RESEED_CNTR_TOP_40</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that the top 40 bits of the reseed counter are set (that is the reseed counter is larger than 2^48-2^8). This
         is a recommendation for running the reseed algorithm before the counter reaches its max value.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.14"></a>22:22
      </td>
      <td valign="top">PRNG_CRNGT_ERR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates CRNGT in the PRNG test failed. Failure occurs when two consecutive results of AES are equal</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.15"></a>23:23
      </td>
      <td valign="top">REQ_SIZE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that the request size counter (which represents how many generations of random bits in the PRNG have been produced)
         has reached 2^12, thus requiring a working state update before generating new random numbers.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.16"></a>24:24
      </td>
      <td valign="top">KAT_ERR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that one of the KAT (Known Answer Tests) tests has failed. When set, the entire engine ceases to function.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.17"></a>26:25
      </td>
      <td valign="top">WHICH_KAT_ERR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When the KAT_ERR bit is set, these bits represent which Known Answer Test had failed:<br>@2'b00 - first test of instantiation<br>@2'b01 - second test of instantiation<br>@2'b10 - first test of reseeding<br>@2'b11 - second test of reseeding
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.2.18"></a>31:27
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.3"></a><br>1.2.3 : <b>Reg : RNG_ICR</b> : 0x000000108<br><b>reg sep address</b> : 4000B108<b> reg host address</b> : 1108<br>Interrupt/status bit clear Register. Consists of trng_icr and prng_icr bit[15-0] - TRNG bit[31-16] - PRNG<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_ICR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.1"></a>0:0
      </td>
      <td valign="top">EHR_VALID</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.2"></a>1:1
      </td>
      <td valign="top">AUTOCORR_ERR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Cannot be cleared by SW! Only RNG reset clears this bit.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.3"></a>2:2
      </td>
      <td valign="top">CRNGT_ERR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.4"></a>3:3
      </td>
      <td valign="top">VN_ERR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.5"></a>4:4
      </td>
      <td valign="top">RNG_WATCHDOG</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.6"></a>5:5
      </td>
      <td valign="top">RNG_DMA_DONE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.7"></a>15:6
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.8"></a>16:16
      </td>
      <td valign="top">RESEEDING_DONE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.9"></a>17:17
      </td>
      <td valign="top">INSTANTIATION_DONE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.10"></a>18:18
      </td>
      <td valign="top">FINAL_UPDATE_DONE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.11"></a>19:19
      </td>
      <td valign="top">OUTPUT_READY</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.12"></a>20:20
      </td>
      <td valign="top">RESEED_CNTR_FULL</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.13"></a>21:21
      </td>
      <td valign="top">RESEED_CNTR_TOP_40</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.14"></a>22:22
      </td>
      <td valign="top">PRNG_CRNGT_ERR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.15"></a>23:23
      </td>
      <td valign="top">REQ_SIZE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 - clears corresponding bit in RNG_ISR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.16"></a>24:24
      </td>
      <td valign="top">KAT_ERR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Cannot be cleared by SW! Only RNG reset clears this bit.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.17"></a>26:25
      </td>
      <td valign="top">WHICH_KAT_ERR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Cannot be cleared by SW! Only RNG reset clears this bit.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.3.18"></a>31:27
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.4"></a><br>1.2.4 : <b>Reg : TRNG_CONFIG</b> : 0x00000010C<br><b>reg sep address</b> : 4000B10C<b> reg host address</b> : 110C<br>This register handles TRNG configuration<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">TRNG_CONFIG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.4.1"></a>1:0
      </td>
      <td valign="top">RND_SRC_SEL</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Defines the length of the oscillator ring (= the number of inverters) out of four possible selections.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.4.2"></a>2:2
      </td>
      <td valign="top">SOP_SEL</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secure Output Port selection:<br>@1'b1 - sop_data port reflects TRNG output (EHR_DATA). <br>@1'b0 - sop_data port reflects PRNG output (RNG_READOUT). <br>NOTE: Secure output is used for direct connection of the RNG block outputs to an engine input key. <br>If CryptoCell does not include a HW PRNG - this field should be set to 1.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.4.3"></a>31:3
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.5"></a><br>1.2.5 : <b>Reg : TRNG_VALID</b> : 0x000000110<br><b>reg sep address</b> : 4000B110<b> reg host address</b> : 1110<br>This register indicates that the TRNG data is valid.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">TRNG_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.5.1"></a>0:0
      </td>
      <td valign="top">EHR_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 indicates that collection of bits in the TRNG is completed, and data can be read from the EHR_DATA register.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.5.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.6"></a><br>1.2.6 : <b>Reg : EHR_DATA_0</b> : 0x000000114<br><b>reg sep address</b> : 4000B114<b> reg host address</b> : 1114<br>This register contains the data collected in the TRNG[31_0].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">EHR_DATA_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.6.1"></a>31:0
      </td>
      <td valign="top">EHR_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the data collected in the TRNG[31_0] .<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).
      </td>
   </tr>
</table><a name="1.2.7"></a><br>1.2.7 : <b>Reg : EHR_DATA_1</b> : 0x000000118<br><b>reg sep address</b> : 4000B118<b> reg host address</b> : 1118<br>This register contains the data collected in the TRNG[63_32].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">EHR_DATA_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.7.1"></a>31:0
      </td>
      <td valign="top">EHR_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the data collected in the TRNG[63_32].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).
      </td>
   </tr>
</table><a name="1.2.8"></a><br>1.2.8 : <b>Reg : EHR_DATA_2</b> : 0x00000011C<br><b>reg sep address</b> : 4000B11C<b> reg host address</b> : 111C<br>This register contains the data collected in the TRNG[95_64].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">EHR_DATA_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.8.1"></a>31:0
      </td>
      <td valign="top">EHR_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the data collected in the TRNG[95_64].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).
      </td>
   </tr>
</table><a name="1.2.9"></a><br>1.2.9 : <b>Reg : EHR_DATA_3</b> : 0x000000120<br><b>reg sep address</b> : 4000B120<b> reg host address</b> : 1120<br>This register contains the data collected in the TRNG[127_96].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">EHR_DATA_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.9.1"></a>31:0
      </td>
      <td valign="top">EHR_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the data collected in the TRNG[127_96].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).
      </td>
   </tr>
</table><a name="1.2.10"></a><br>1.2.10 : <b>Reg : EHR_DATA_4</b> : 0x000000124<br><b>reg sep address</b> : 4000B124<b> reg host address</b> : 1124<br>This register contains the data collected in the TRNG[159_128].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">EHR_DATA_4</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.10.1"></a>31:0
      </td>
      <td valign="top">EHR_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the data collected in the TRNG[159_128].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).
      </td>
   </tr>
</table><a name="1.2.11"></a><br>1.2.11 : <b>Reg : EHR_DATA_5</b> : 0x000000128<br><b>reg sep address</b> : 4000B128<b> reg host address</b> : 1128<br>This register contains the data collected in the TRNG[191_160].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">EHR_DATA_5</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.11.1"></a>31:0
      </td>
      <td valign="top">EHR_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Contains the data collected in the TRNG[191_160].<br>NOTE: can only be set while in debug mode (rng_debug_enable input is set).
      </td>
   </tr>
</table><a name="1.2.12"></a><br>1.2.12 : <b>Reg : RND_SOURCE_ENABLE</b> : 0x00000012C<br><b>reg sep address</b> : 4000B12C<b> reg host address</b> : 112C<br>This register holds the enable signal for the random source.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RND_SOURCE_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.12.1"></a>0:0
      </td>
      <td valign="top">RND_SRC_EN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Enable signal for the random source.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.12.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.13"></a><br>1.2.13 : <b>Reg : SAMPLE_CNT1</b> : 0x000000130<br><b>reg sep address</b> : 4000B130<b> reg host address</b> : 1130<br>Counts clocks between sampling of random bit.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">SAMPLE_CNT1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.13.1"></a>31:0
      </td>
      <td valign="top">SAMPLE_CNTR1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Sets the number of rng_clk cycles between two consecutive ring oscillator samples.<br>NOTE: If the Von-Neumann is bypassed, the minimum value for sample counter must not be less than decimal seventeen.
      </td>
   </tr>
</table><a name="1.2.14"></a><br>1.2.14 : <b>Reg : AUTOCORR_STATISTIC</b> : 0x000000134<br><b>reg sep address</b> : 4000B134<b> reg host address</b> : 1134<br>Statistics about autocorrelation test activations.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AUTOCORR_STATISTIC</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.14.1"></a>13:0
      </td>
      <td valign="top">AUTOCORR_TRYS</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Count each time an autocorrelation test starts. Any write to the register resets the counter. Stops collecting statistics
         if one of the counters has reached the limit.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.14.2"></a>21:14
      </td>
      <td valign="top">AUTOCORR_FAILS</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Count each time an autocorrelation test fails. Any write to the register resets the counter. Stops collecting statistics if
         one of the counters has reached the limit.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.14.3"></a>31:22
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.15"></a><br>1.2.15 : <b>Reg : TRNG_DEBUG_CONTROL</b> : 0x000000138<br><b>reg sep address</b> : 4000B138<b> reg host address</b> : 1138<br>Debug register<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">TRNG_DEBUG_CONTROL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.15.1"></a>0:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.15.2"></a>1:1
      </td>
      <td valign="top">VNC_BYPASS</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When this bit is set, the Von-Neumann balancer is bypassed (including the 32 consecutive bits test).<br>NOTE: Can only be set while in debug mode. If TRNG_TESTS_BYPASS_EN HW flag is defined, this bit can be set while not in debug
         mode.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.15.3"></a>2:2
      </td>
      <td valign="top">TRNG_CRNGT_BYPASS</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When this bit is set, the CRNGT test in the TRNG is bypassed. <br>NOTE: Can only be set while in debug mode. If TRNG_TESTS_BYPASS_EN HW flag is defined, this bit can be set while not in debug
         mode.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.15.4"></a>3:3
      </td>
      <td valign="top">AUTO_CORRELATE_BYPASS</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When this bit is set, the autocorrelation test in the TRNG module is bypassed.<br>NOTE: Can only be set while in debug mode. If TRNG_TESTS_BYPASS_EN HW flag is defined, this bit can be set while not in debug
         mode.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.15.5"></a>31:4
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.16"></a><br>1.2.16 : <b>Reg : RNG_SW_RESET</b> : 0x000000140<br><b>reg sep address</b> : 4000B140<b> reg host address</b> : 1140<br>Generate SW reset solely to RNG block.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_SW_RESET</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.16.1"></a>0:0
      </td>
      <td valign="top">RNG_SW_RESET</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Any value written (1'b0 or 1'b1) causes a reset cycle to the TRNG block. <br>The reset mechanism takes about four RNG clock cycles until the reset line is de-asserted.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.16.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.17"></a><br>1.2.17 : <b>Reg : RNG_DEBUG_EN_INPUT</b> : 0x0000001B4<br><b>reg sep address</b> : 4000B1B4<b> reg host address</b> : 11B4<br>Defines the RNG in debug mode<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_DEBUG_EN_INPUT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.17.1"></a>0:0
      </td>
      <td valign="top">RNG_DEBUG_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reflects the rng_debug_enable input port</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.17.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.18"></a><br>1.2.18 : <b>Reg : RNG_BUSY</b> : 0x0000001B8<br><b>reg sep address</b> : 4000B1B8<b> reg host address</b> : 11B8<br>RNG busy indication<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_BUSY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.18.1"></a>0:0
      </td>
      <td valign="top">RNG_BUSY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reflects rng_busy output port which Consists of trng_busy and prng_busy.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.18.2"></a>1:1
      </td>
      <td valign="top">TRNG_BUSY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reflects trng_busy.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.18.3"></a>2:2
      </td>
      <td valign="top">PRNG_BUSY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reflects prng_busy.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.18.4"></a>31:3
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.19"></a><br>1.2.19 : <b>Reg : RST_BITS_COUNTER</b> : 0x0000001BC<br><b>reg sep address</b> : 4000B1BC<b> reg host address</b> : 11BC<br>Resets the counter of collected bits in the TRNG<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RST_BITS_COUNTER</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.19.1"></a>0:0
      </td>
      <td valign="top">RST_BITS_COUNTER</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing any value to this address resets the bits counter and trng valid registers.<br>RND_SORCE_ENABLE register must be unset in order for reset to take place.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.19.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.20"></a><br>1.2.20 : <b>Reg : RNG_VERSION</b> : 0x0000001C0<br><b>reg sep address</b> : 4000B1C0<b> reg host address</b> : 11C0<br>This register holds the RNG version<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_VERSION</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.1"></a>0:0
      </td>
      <td valign="top">EHR_WIDTH_192</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">@1'b0 - 128 bit EHR<br>@1'b1 - 192 bit EHR
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.2"></a>1:1
      </td>
      <td valign="top">CRNGT_EXISTS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">@1'b0 - does not exist<br>@1'b1 - exists
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.3"></a>2:2
      </td>
      <td valign="top">AUTOCORR_EXISTS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">@1'b0 - does not exist<br>@1'b1 - exists
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.4"></a>3:3
      </td>
      <td valign="top">TRNG_TESTS_BYPASS_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">@1'b0 - trng tests bypass not enabled<br>@1'b1 - trng tests bypass enabled
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.5"></a>4:4
      </td>
      <td valign="top">PRNG_EXISTS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b0 - does not exist<br>@1'b1 - exists
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.6"></a>5:5
      </td>
      <td valign="top">KAT_EXISTS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b0 - does not exist<br>@1'b1 - exists
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.7"></a>6:6
      </td>
      <td valign="top">RESEEDING_EXISTS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b0 - does not exist<br>@1'b1 - exists
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.8"></a>7:7
      </td>
      <td valign="top">RNG_USE_5_SBOXES</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b0 - 20 SBOX AES<br>@1'b1 - 5 SBOX AES
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.20.9"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.21"></a><br>1.2.21 : <b>Reg : RNG_CLK_ENABLE</b> : 0x0000001C4<br><b>reg sep address</b> : 4000B1C4<b> reg host address</b> : 11C4<br>Writing to this register enables/disables the RNG clock.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_CLK_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.21.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 enables RNG clock.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.21.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.22"></a><br>1.2.22 : <b>Reg : RNG_DMA_ENABLE</b> : 0x0000001C8<br><b>reg sep address</b> : 4000B1C8<b> reg host address</b> : 11C8<br>Writing to this register enables/disables the RNG DMA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_DMA_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.22.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 enables RNG DMA to SRAM. The Value is cleared when DMA completes its operation.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.22.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.23"></a><br>1.2.23 : <b>Reg : RNG_DMA_SRC_MASK</b> : 0x0000001CC<br><b>reg sep address</b> : 4000B1CC<b> reg host address</b> : 11CC<br>This register defines which ring-oscillator length should be used when using the RNG DMA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_DMA_SRC_MASK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.23.1"></a>0:0
      </td>
      <td valign="top">EN_SRC_SEL0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 enables SRC_SEL 0.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.23.2"></a>1:1
      </td>
      <td valign="top">EN_SRC_SEL1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 enables SRC_SEL 1.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.23.3"></a>2:2
      </td>
      <td valign="top">EN_SRC_SEL2</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 enables SRC_SEL 2.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.23.4"></a>3:3
      </td>
      <td valign="top">EN_SRC_SEL3</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing value 1'b1 enables SRC_SEL 3.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.23.5"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.24"></a><br>1.2.24 : <b>Reg : RNG_DMA_SRAM_ADDR</b> : 0x0000001D0<br><b>reg sep address</b> : 4000B1D0<b> reg host address</b> : 11D0<br>This register defines the start address of the DMA for the TRNG data.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_DMA_SRAM_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.24.1"></a>11:0
      </td>
      <td valign="top">RNG_SRAM_DMA_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Defines the start address of the DMA for the TRNG data.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.24.2"></a>31:12
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.25"></a><br>1.2.25 : <b>Reg : RNG_DMA_SAMPLES_NUM</b> : 0x0000001D4<br><b>reg sep address</b> : 4000B1D4<b> reg host address</b> : 11D4<br>This register defines the number of 192-bits samples that the DMA collects per RNG configuration.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_DMA_SAMPLES_NUM</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.25.1"></a>7:0
      </td>
      <td valign="top">RNG_SAMPLES_NUM</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Defines the number of 192-bits samples that the DMA collects per RNG configuration.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.25.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.2.26"></a><br>1.2.26 : <b>Reg : RNG_WATCHDOG_VAL</b> : 0x0000001D8<br><b>reg sep address</b> : 4000B1D8<b> reg host address</b> : 11D8<br>This register defines the maximum number of clock cycles per TRNG collection of 192 samples. If the number of cycles for a
collection exceeds this threshold, TRNG signals an interrupt.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_WATCHDOG_VAL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.26.1"></a>31:0
      </td>
      <td valign="top">RNG_WATCHDOG_VAL</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Defines the maximum number of clock cycles per TRNG collection of 192 samples. If the number of cycles for a collection exceeds
         this threshold, TRNG signals an interrupt.
      </td>
   </tr>
</table><a name="1.2.27"></a><br>1.2.27 : <b>Reg : RNG_DMA_STATUS</b> : 0x0000001DC<br><b>reg sep address</b> : 4000B1DC<b> reg host address</b> : 11DC<br>This register holds the RNG DMA status.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">RNG_DMA_STATUS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.27.1"></a>0:0
      </td>
      <td valign="top">RNG_DMA_BUSY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates whether DMA is busy.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.27.2"></a>2:1
      </td>
      <td valign="top">DMA_SRC_SEL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The active ring oscillator length using by DMA</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.27.3"></a>10:3
      </td>
      <td valign="top">NUM_OF_SAMPLES</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Number of samples already collected in the current ring oscillator length.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.2.27.4"></a>31:11
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.2">(top of block)</a><a name="1.3"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.3 : Block: MISC</font></b></td>
   <td align="right"><font color="#000000">0x000000800</font></td>
</table><br><a name="1.3.1"></a><br>1.3.1 : <b>Reg : AES_CLK_ENABLE</b> : 0x000000810<br><b>reg sep address</b> : 40008810<b> reg host address</b> : 1810<br>The AES clock enable register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AES_CLK_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.1.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the AES clock is enabled.<br>@1'b0 - the AES clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.1.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.3.2"></a><br>1.3.2 : <b>Reg : DES_CLK_ENABLE</b> : 0x000000814<br><b>reg sep address</b> : 40008814<b> reg host address</b> : 1814<br>The DES clock enable register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DES_CLK_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.2.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the DES clock is enabled.<br>@1'b0 - the DES clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.2.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.3.3"></a><br>1.3.3 : <b>Reg : HASH_CLK_ENABLE</b> : 0x000000818<br><b>reg sep address</b> : 40008818<b> reg host address</b> : 1818<br>The HASH clock enable register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HASH_CLK_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.3.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the HASH clock is enabled.<br>@1'b0 - the HASH clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.3.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.3.4"></a><br>1.3.4 : <b>Reg : PKA_CLK_ENABLE</b> : 0x00000081C<br><b>reg sep address</b> : 4000881C<b> reg host address</b> : 181C<br>The PKA clock enable register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">PKA_CLK_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.4.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the PKA clock is enabled.<br>@1'b0 - the PKA clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.4.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.3.5"></a><br>1.3.5 : <b>Reg : DMA_CLK_ENABLE</b> : 0x000000820<br><b>reg sep address</b> : 40008820<b> reg host address</b> : 1820<br>DMA_CLK enable register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DMA_CLK_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.5.1"></a>0:0
      </td>
      <td valign="top">EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the DMA clock is enabled.<br>@1'b0 - the DMA clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.5.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.3.6"></a><br>1.3.6 : <b>Reg : CLK_STATUS</b> : 0x000000824<br><b>reg sep address</b> : 40008824<b> reg host address</b> : 1824<br>The CryptoCell clocks' status register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">CLK_STATUS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.1"></a>0:0
      </td>
      <td valign="top">AES_CLK_STATUS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the AES clock is enabled.<br>@1'b0 - the AES clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.2"></a>1:1
      </td>
      <td valign="top">DES_CLK_STATUS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the DES clock is enabled.<br>@1'b0 - the DES clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.3"></a>2:2
      </td>
      <td valign="top">HASH_CLK_STATUS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the HASH clock is enabled.<br>@1'b0 - the HASH clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.4"></a>3:3
      </td>
      <td valign="top">PKA_CLK_STATUS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@1'b1 - the PKA clock is enabled.<br>@1'b0 - the PKA clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.5"></a>7:4
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.6"></a>8:8
      </td>
      <td valign="top">DMA_CLK_STATUS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">@1'b1 - the DMA clock is enabled.<br>@1'b0 - the DMA clock is disabled.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.3.6.7"></a>31:9
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.3">(top of block)</a><a name="1.4"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.4 : Block: HOST_RGF</font></b></td>
   <td align="right"><font color="#000000">0x000000A00</font></td>
</table><br><a name="1.4.1"></a><br>1.4.1 : <b>Reg : HOST_RGF_IRR</b> : 0x000000A00<br><b>reg sep address</b> : <b> reg host address</b> : 1A00<br>The Interrupt Request register. Each bit of this register holds the interrupt status of a single interrupt source.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RGF_IRR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.1"></a>1:0
      </td>
      <td valign="top">unused0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.2"></a>2:2
      </td>
      <td valign="top">DSCRPTR_COMPLETION_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The descriptor completion interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.3"></a>3:3
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.4"></a>4:4
      </td>
      <td valign="top">SRAM_TO_DIN_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The SRAM to DIN DMA done interrupt status. This interrupt is asserted when all data was delivered to DIN buffer from SRAM.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.5"></a>5:5
      </td>
      <td valign="top">DOUT_TO_SRAM_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The DOUT to SRAM DMA done interrupt status. This interrupt is asserted when all data was delivered to SRAM buffer from DOUT.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.6"></a>6:6
      </td>
      <td valign="top">MEM_TO_DIN_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The memory to DIN DMA done interrupt status. This interrupt is asserted when all data was delivered to DIN buffer from memory.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.7"></a>7:7
      </td>
      <td valign="top">DOUT_TO_MEM_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The DOUT to memory DMA done interrupt status. This interrupt is asserted when all data was delivered to memory buffer from
         DOUT.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.8"></a>8:8
      </td>
      <td valign="top">AXI_ERR_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The AXI error interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.9"></a>9:9
      </td>
      <td valign="top">PKA_EXP_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The PKA end of operation interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.10"></a>10:10
      </td>
      <td valign="top">RNG_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The RNG interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.11"></a>11:11
      </td>
      <td valign="top">GPR0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The GPR interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.12"></a>18:12
      </td>
      <td valign="top">RESERVED2</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.13"></a>19:19
      </td>
      <td valign="top">DSCRPTR_WATERMARK_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The descriptor queue0 watermark interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.14"></a>20:20
      </td>
      <td valign="top">RESERVED3</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.15"></a>21:21
      </td>
      <td valign="top">RESERVED4</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.16"></a>22:22
      </td>
      <td valign="top">RESERVED5</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.17"></a>23:23
      </td>
      <td valign="top">AXIM_COMP_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The AXI master completion interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.18"></a>24:24
      </td>
      <td valign="top">SECURE_TIMER_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The Secure Timer interrupt status.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.1.19"></a>31:25
      </td>
      <td valign="top">RESERVED6</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.2"></a><br>1.4.2 : <b>Reg : HOST_RGF_IMR</b> : 0x000000A04<br><b>reg sep address</b> : <b> reg host address</b> : 1A04<br>The Interrupt Mask register. Each bit of this register holds the mask of a single interrupt source.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RGF_IMR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.1"></a>0:0
      </td>
      <td valign="top">unused0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.2"></a>1:1
      </td>
      <td valign="top">unused1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.3"></a>2:2
      </td>
      <td valign="top">DSCRPTR_COMPLETION_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The descriptor completion interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.4"></a>3:3
      </td>
      <td valign="top">unused2</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.5"></a>4:4
      </td>
      <td valign="top">SRAM_TO_DIN_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The SRAM to DIN DMA done interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.6"></a>5:5
      </td>
      <td valign="top">DOUT_TO_SRAM_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The DOUT to SRAM DMA done interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.7"></a>6:6
      </td>
      <td valign="top">MEM_TO_DIN_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The memory to DIN DMA done interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.8"></a>7:7
      </td>
      <td valign="top">DOUT_TO_MEM_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The DOUT to memory DMA done interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.9"></a>8:8
      </td>
      <td valign="top">AXI_ERR_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The AXI error interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.10"></a>9:9
      </td>
      <td valign="top">PKA_EXP_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The PKA end of operation interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.11"></a>10:10
      </td>
      <td valign="top">RNG_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The RNG interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.12"></a>11:11
      </td>
      <td valign="top">GPR0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The GPR interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.13"></a>18:12
      </td>
      <td valign="top">unused3</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.14"></a>19:19
      </td>
      <td valign="top">DSCRPTR_WATERMARK_MASK0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The descriptor queue0 watermark interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.15"></a>20:20
      </td>
      <td valign="top">unused4</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.16"></a>21:21
      </td>
      <td valign="top">unused5</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.17"></a>22:22
      </td>
      <td valign="top">unused6</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.18"></a>23:23
      </td>
      <td valign="top">AXIM_COMP_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The AXI master completion interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.19"></a>24:24
      </td>
      <td valign="top">SECURE_TIMER_INT_MASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">The Secure Timer interrupt mask.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.2.20"></a>31:25
      </td>
      <td valign="top">RESERVED3</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.3"></a><br>1.4.3 : <b>Reg : HOST_RGF_ICR</b> : 0x000000A08<br><b>reg sep address</b> : <b> reg host address</b> : 1A08<br>Interrupt Clear Register.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RGF_ICR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.1"></a>1:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.2"></a>2:2
      </td>
      <td valign="top">DSCRPTR_COMPLETION</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The descriptor completion interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.3"></a>3:3
      </td>
      <td valign="top">RESEREVED1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.4"></a>4:4
      </td>
      <td valign="top">SRAM_TO_DIN_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The SRAM to DIN DMA done interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.5"></a>5:5
      </td>
      <td valign="top">DOUT_TO_SRAM_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The DOUT to SRAM DMA done interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.6"></a>6:6
      </td>
      <td valign="top">MEM_TO_DIN_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The memory to DIN DMA done interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.7"></a>7:7
      </td>
      <td valign="top">DOUT_TO_MEM_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The DOUT to memory DMA done interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.8"></a>8:8
      </td>
      <td valign="top">AXI_ERR_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The AXI error interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.9"></a>9:9
      </td>
      <td valign="top">PKA_EXP_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The PKA end of operation interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.10"></a>10:10
      </td>
      <td valign="top">RNG_INT_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The RNG interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.11"></a>11:11
      </td>
      <td valign="top">GPR_INT_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The GPR interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.12"></a>18:12
      </td>
      <td valign="top">RESERVED2</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.13"></a>19:19
      </td>
      <td valign="top">DSCRPTR_WATERMARK_QUEUE0_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The descriptor queue0 watermark interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.14"></a>20:20
      </td>
      <td valign="top">RESERVED3</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.15"></a>21:21
      </td>
      <td valign="top">RESERVED4</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.16"></a>22:22
      </td>
      <td valign="top">RESERVED5</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.17"></a>23:23
      </td>
      <td valign="top">AXIM_COMP_INT_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The AXI master completion interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.18"></a>24:24
      </td>
      <td valign="top">SECURE_TIMER_INT_CLEAR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The Secure Timer interrupt clear.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.3.19"></a>31:25
      </td>
      <td valign="top">RESERVED6</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.4"></a><br>1.4.4 : <b>Reg : HOST_RGF_ENDIAN</b> : 0x000000A0C<br><b>reg sep address</b> : <b> reg host address</b> : 1A0C<br>This register defines the endianness of the Host-accessible registers.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RGF_ENDIAN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.1"></a>2:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.2"></a>3:3
      </td>
      <td valign="top">DOUT_WR_BG</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">DOUT write endianness:<br>@1'b0 - little endian <br>@1'b1 - big endian
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.3"></a>6:4
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.4"></a>7:7
      </td>
      <td valign="top">DIN_RD_BG</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">DIN write endianness:<br>@1'b0 - little endian <br>@1'b1 - big endian
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.5"></a>10:8
      </td>
      <td valign="top">RESERVED2</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.6"></a>11:11
      </td>
      <td valign="top">DOUT_WR_WBG</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">DOUT write word endianness:<br>@1'b0 - little endian <br>@1'b1 - big endian
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.7"></a>14:12
      </td>
      <td valign="top">RESERVED3</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.8"></a>15:15
      </td>
      <td valign="top">DIN_RD_WBG</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">DIN write word endianness:<br>@1'b0 - little endian <br>@1'b1 - big endian
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.4.9"></a>31:16
      </td>
      <td valign="top">RESERVED4</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.5"></a><br>1.4.5 : <b>Reg : HOST_RGF_CC_SW_RST</b> : 0x000000A20<br><b>reg sep address</b> : <b> reg host address</b> : 1A20<br>Writing to this register generates a general reset to CryptoCell. This reset takes about 4 core clock cycles.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RGF_CC_SW_RST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.5.1"></a>0:0
      </td>
      <td valign="top">CC_SW_RST_REQ</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing '1' to this field generates a general reset to CryptoCell. Reset occurs only after AXI master and AXI slave are inactive
         (axim/s_sysreq is generated).
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.5.2"></a>1:1
      </td>
      <td valign="top">CC_SW_RST_FORCE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing '1' to this field generates a general reset to CryptoCell, even if the AXI master or slave are busy. <br>This bit should only be used in case the AXI master or slave are stuck at "BUSY" state. In this case, "CC_SW_RST_REQ" cannot
         be used. <br>As when using this field, a reset is forced without waiting for the AXI master and slave to return to idle, a system hang
         may be caused. In which case, it may be required to reset the AXI bus after using this field.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.5.3"></a>2:2
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.5.4"></a>3:3
      </td>
      <td valign="top">AXIM_SYSREQ</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing '1' sets the AXI master into wait state, in which pending transactions are completed, but no new transactions are
         served.<br>Writing '0' sets the AXI master back to normal state.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.5.5"></a>31:4
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.6"></a><br>1.4.6 : <b>Reg : HOST_RGF_SIGNATURE</b> : 0x000000A24<br><b>reg sep address</b> : <b> reg host address</b> : 1A24<br>This register holds the CryptoCell product signature.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RGF_SIGNATURE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.6.1"></a>31:0
      </td>
      <td valign="top">HOST_SIGNATURE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Identification &#8220;signature&#8221;: always returns a fixed value, used by Host driver to verify CryptoCell presence at this address.</td>
   </tr>
</table><a name="1.4.7"></a><br>1.4.7 : <b>Reg : HOST_BOOT</b> : 0x000000A28<br><b>reg sep address</b> : <b> reg host address</b> : 1A28<br>This register holds the values of CryptoCell's pre-synthesis flags<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_BOOT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.1"></a>0:0
      </td>
      <td valign="top">SYNTHESIS_CONFIG</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">POWER_GATING_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.2"></a>1:1
      </td>
      <td valign="top">LARGE_RKEK_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">LARGE_RKEK_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.3"></a>2:2
      </td>
      <td valign="top">HASH_IN_FUSES_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">HASH_IN_FUSES_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.4"></a>3:3
      </td>
      <td valign="top">EXT_MEM_SECURED_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">EXT_MEM_SECURED_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.5"></a>4:4
      </td>
      <td valign="top">Reserved</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.6"></a>5:5
      </td>
      <td valign="top">RKEK_ECC_EXISTS_LOCAL_N</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">RKEK_ECC_EXISTS_LOCAL_N</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.7"></a>8:6
      </td>
      <td valign="top">SRAM_SIZE_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">SRAM_SIZE_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.8"></a>9:9
      </td>
      <td valign="top">DSCRPTR_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">DSCRPTR_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.9"></a>10:10
      </td>
      <td valign="top">PAU_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PAU_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.10"></a>11:11
      </td>
      <td valign="top">RNG_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">RNG_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.11"></a>12:12
      </td>
      <td valign="top">PKA_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">PKA_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.12"></a>13:13
      </td>
      <td valign="top">RC4_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">RC4_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.13"></a>14:14
      </td>
      <td valign="top">SHA_512_PRSNT_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">SHA_512_PRSNT_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.14"></a>15:15
      </td>
      <td valign="top">SHA_256_PRSNT_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">SHA_256_PRSNT_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.15"></a>16:16
      </td>
      <td valign="top">MD5_PRSNT_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">MD5_PRSNT_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.16"></a>17:17
      </td>
      <td valign="top">HASH_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">HASH_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.17"></a>18:18
      </td>
      <td valign="top">C2_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">C2_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.18"></a>19:19
      </td>
      <td valign="top">DES_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">DES_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.19"></a>20:20
      </td>
      <td valign="top">AES_XCBC_MAC_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">AES_XCBC_MAC_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.20"></a>21:21
      </td>
      <td valign="top">AES_CMAC_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">AES_CMAC_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.21"></a>22:22
      </td>
      <td valign="top">AES_CCM_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">AES_CCM_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.22"></a>23:23
      </td>
      <td valign="top">AES_XEX_HW_T_CALC_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">AES_XEX_HW_T_CALC_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.23"></a>24:24
      </td>
      <td valign="top">AES_XEX_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">AES_XEX_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.24"></a>25:25
      </td>
      <td valign="top">CTR_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">CTR_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.25"></a>26:26
      </td>
      <td valign="top">AES_DIN_BYTE_RESOLUTION_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">AES_DIN_BYTE_RESOLUTION_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.26"></a>27:27
      </td>
      <td valign="top">TUNNELING_ENB_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">TUNNELING_ENB_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.27"></a>28:28
      </td>
      <td valign="top">SUPPORT_256_192_KEY_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">SUPPORT_256_192_KEY_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.28"></a>29:29
      </td>
      <td valign="top">ONLY_ENCRYPT_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ONLY_ENCRYPT_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.29"></a>30:30
      </td>
      <td valign="top">AES_EXISTS_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">AES_EXISTS_LOCAL</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.7.30"></a>31:31
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.8"></a><br>1.4.8 : <b>Reg : HOST_KCP_MASK</b> : 0x000000A30<br><b>reg sep address</b> : <b> reg host address</b> : 1A30<br>Provisioning constant mask<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KCP_MASK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.8.1"></a>0:0
      </td>
      <td valign="top">KCP_MASK</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing 1 to this field masks the KCP ,It is write once register .</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.8.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw1</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.4.9"></a><br>1.4.9 : <b>Reg : HOST_VERSION</b> : 0x000000A40<br><b>reg sep address</b> : <b> reg host address</b> : 1A40<br>Version Register<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_VERSION</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.9.1"></a>31:0
      </td>
      <td valign="top">VERSION</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Version of Design<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.
      </td>
   </tr>
</table><a name="1.4.10"></a><br>1.4.10 : <b>Reg : HOST_KFDE0</b> : 0x000000A50<br><b>reg sep address</b> : <b> reg host address</b> : 1A50<br>This register is an interface to write KFDE0.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KFDE0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.10.1"></a>31:0
      </td>
      <td valign="top">HOST_KFDE0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field is an interface to write the KFDE0 key . in order to set the 256b Kfde, 8 writes should be performed to this address.
         The first write will set Kfde0[31:0] and the last will set Kfde0[255:223]. <br>Even if the key is smaller than 256b, 8 writes must be performed.<br>The value of Kfde0 is saved in the always_on module. Reading from this address returns the kfde0_valid status (that indicates
         if the kfde0 is valid in the always on module).
      </td>
   </tr>
</table><a name="1.4.11"></a><br>1.4.11 : <b>Reg : HOST_KFDE1</b> : 0x000000A54<br><b>reg sep address</b> : <b> reg host address</b> : 1A54<br>This register is an interface to write KFDE1.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KFDE1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.11.1"></a>31:0
      </td>
      <td valign="top">HOST_KFDE1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field is an interface to write the KFDE1 key . in order to set the 256b Kfde, 8 writes should be performed to this address.
         The first write will set Kfde1[31:0] and the last will set Kfde1[255:223]. <br>Even if the key is smaller than 256b, 8 writes must be performed.<br>The value of Kfde1 is saved in the always_on module. Reading from this address returns the kfde1_valid status (that indicates
         if the kfde1 is valid in the always on module).
      </td>
   </tr>
</table><a name="1.4.12"></a><br>1.4.12 : <b>Reg : HOST_KFDE2</b> : 0x000000A58<br><b>reg sep address</b> : <b> reg host address</b> : 1A58<br>This register is an interface to write KFDE2.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KFDE2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.12.1"></a>31:0
      </td>
      <td valign="top">HOST_KFDE2</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field is an interface to write the KFDE2 key . in order to set the 256b Kfde, 8 writes should be performed to this address.
         The first write will set Kfde2[31:0] and the last will set Kfde2[255:223]. <br>Even if the key is smaller than 256b, 8 writes must be performed.<br>The value of Kfde2 is saved in the always_on module. Reading from this address returns the kfde2_valid status (that indicates
         if the kfde2 is valid in the always on module).
      </td>
   </tr>
</table><a name="1.4.13"></a><br>1.4.13 : <b>Reg : HOST_KFDE3</b> : 0x000000A5C<br><b>reg sep address</b> : <b> reg host address</b> : 1A5c<br>This registeris an interface to write KFDE3.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KFDE3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.13.1"></a>31:0
      </td>
      <td valign="top">HOST_KFDE3</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field is an interface to write the KFDE3 key . in order to set the 256b Kfde, 8 writes should be performed to this address.
         The first write will set Kfde3[31:0] and the last will set Kfde3[255:223]. <br>Even if the key is smaller than 256b, 8 writes must be performed.<br>The value of Kfde3 is saved in the always_on module. Reading from this address returns the kfde3_valid status (that indicates
         if the kfde3 is valid in the always on module).
      </td>
   </tr>
</table><a name="1.4.14"></a><br>1.4.14 : <b>Reg : HOST_GPR</b> : 0x000000A70<br><b>reg sep address</b> : <b> reg host address</b> : 1A70<br>this register is used to communicate between the public and the secure hosts<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_GPR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.14.1"></a>31:0
      </td>
      <td valign="top">HOST_GPR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">public-secure/secure-public host communication register.<br>Note: This is a special register, writing to that register asserts an interrupt to other host
      </td>
   </tr>
</table><a name="1.4.15"></a><br>1.4.15 : <b>Reg : GPR_HOST</b> : 0x000000A74<br><b>reg sep address</b> : <b> reg host address</b> : 1A74<br>This register holds the infromation trasmitted between the host using the gpr.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">GPR_HOST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.15.1"></a>31:0
      </td>
      <td valign="top">GPR_HOST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">public/secure  host communication register.<br>Note: This is a special register, this registers
      </td>
   </tr>
</table><a name="1.4.16"></a><br>1.4.16 : <b>Reg : HOST_POWER_DOWN_EN</b> : 0x000000A78<br><b>reg sep address</b> : <b> reg host address</b> : 1A78<br>This register indicates that the CryptoCell is idle.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_POWER_DOWN_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.16.1"></a>0:0
      </td>
      <td valign="top">HOST_POWER_DOWN_EN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0: CryptoCell is busy<br>1: CryptoCell is idle<br>Note: This is a special register, this registers
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.4.16.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved<br>Note: This is a special register, this registers
      </td>
   </tr>
</table><a href="#1.4">(top of block)</a><a name="1.5"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.5 : Block: AXI</font></b></td>
   <td align="right"><font color="#000000">0x000000B00</font></td>
</table><br><a name="1.5.1"></a><br>1.5.1 : <b>Reg : AXIM_MON_INFLIGHT</b> : 0x000000B00<br><b>reg sep address</b> : 40008B00<b> reg host address</b> : 1B00<br>This register holds the number of uncompleted write transactions, with ID=0<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_INFLIGHT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.1.1"></a>7:0
      </td>
      <td valign="top">INFLIGHTCNTR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Number of uncompleted write transactions</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.1.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.2"></a><br>1.5.2 : <b>Reg : AXIM_MON_INFLIGHTLAST</b> : 0x000000B40<br><b>reg sep address</b> : 40008B40<b> reg host address</b> : 1B40<br>This register holds the number of uncompleted write transactions, with ID=0 and last indication bit set.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_INFLIGHTLAST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.2.1"></a>7:0
      </td>
      <td valign="top">INFLIGHTCNTR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Number of uncompleted write transactions for last bursts</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.2.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.3"></a><br>1.5.3 : <b>Reg : AXIM_PIDTABLE</b> : 0x000000B7C<br><b>reg sep address</b> : 40008B7C<b> reg host address</b> : 1B7C<br>This register holds the status of AXI port 3.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_PIDTABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.3.1"></a>0:0
      </td>
      <td valign="top">PID_BROKEN1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1st part of broken burst is in the pipe.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.3.2"></a>1:1
      </td>
      <td valign="top">PID_BROKEN2</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">2nd part of broken burst is in the pipe</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.3.3"></a>9:2
      </td>
      <td valign="top">PID_OSCNTR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Number of outstanding bursts for the selected port.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.3.4"></a>14:10
      </td>
      <td valign="top">PID_ID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">ID of the selected port.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.3.5"></a>31:15
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.4"></a><br>1.5.4 : <b>Reg : AXIM_MON_COMP</b> : 0x000000B80<br><b>reg sep address</b> : 40008B80<b> reg host address</b> : 1B80<br>This register holds the completion counter of the transaction with ID=0.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_COMP</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.4.1"></a>15:0
      </td>
      <td valign="top">COMPLASTCNTR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Number of completed write transactions for last bursts (BREADY &amp;&amp; BVALID) for bid == 0</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.4.2"></a>31:16
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.5"></a><br>1.5.5 : <b>Reg : AXIM_MON_RMAX</b> : 0x000000BB4<br><b>reg sep address</b> : 40008BB4<b> reg host address</b> : 1BB4<br>Maximal latency for read transactions<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_RMAX</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.5.1"></a>31:0
      </td>
      <td valign="top">RMAX</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Measured maximal latency in CORE_CLK/64 clock cycles from last read.</td>
   </tr>
</table><a name="1.5.6"></a><br>1.5.6 : <b>Reg : AXIM_MON_RMIN</b> : 0x000000BB8<br><b>reg sep address</b> : 40008BB8<b> reg host address</b> : 1BB8<br>Minimal latency for read transactions<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_RMIN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.6.1"></a>31:0
      </td>
      <td valign="top">RMIN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Measured minimal latency in CORE_CLK/64 clock cycles from last read.</td>
   </tr>
</table><a name="1.5.7"></a><br>1.5.7 : <b>Reg : AXIM_MON_WMAX</b> : 0x000000BBC<br><b>reg sep address</b> : 40008BBC<b> reg host address</b> : 1BBC<br>Maximal latency for write transactions<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_WMAX</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.7.1"></a>31:0
      </td>
      <td valign="top">WMAX</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Measured maximal latency in CORE_CLK/64 clock cycles from last read.</td>
   </tr>
</table><a name="1.5.8"></a><br>1.5.8 : <b>Reg : AXIM_MON_WMIN</b> : 0x000000BC0<br><b>reg sep address</b> : 40008BC0<b> reg host address</b> : 1BC0<br>Minimal latency for write transactions<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_WMIN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.8.1"></a>31:0
      </td>
      <td valign="top">WMIN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Measured minimal latency in CORE_CLK/64 clock cycles from last read.</td>
   </tr>
</table><a name="1.5.9"></a><br>1.5.9 : <b>Reg : AXIM_MON_ERR</b> : 0x000000BC4<br><b>reg sep address</b> : 40008BC4<b> reg host address</b> : 1BC4<br>Error information<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_MON_ERR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.1"></a>1:0
      </td>
      <td valign="top">BRESP</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">BRESP of the captured error</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.2"></a>5:2
      </td>
      <td valign="top">BID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">BID that caused the error</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.3"></a>6:6
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.4"></a>15:7
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.5"></a>17:16
      </td>
      <td valign="top">RRESP</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">RRESP of the captured error</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.6"></a>21:18
      </td>
      <td valign="top">RID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">RID that caused the error</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.9.7"></a>31:22
      </td>
      <td valign="top">RESERVED2</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.10"></a><br>1.5.10 : <b>Reg : AXIM_RDSTAT</b> : 0x000000BC8<br><b>reg sep address</b> : 40008BC8<b> reg host address</b> : 1BC8<br>Read channel status<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_RDSTAT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.10.1"></a>3:0
      </td>
      <td valign="top">OSCNTR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Total number of outstanding bursts</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.10.2"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.11"></a><br>1.5.11 : <b>Reg : AXIM_RLATENCY</b> : 0x000000BD0<br><b>reg sep address</b> : 40008BD0<b> reg host address</b> : 1BD0<br>Accumulated read latency<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_RLATENCY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.11.1"></a>31:0
      </td>
      <td valign="top">RLATENCY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Accumulated rd latency, correlated with RBURST</td>
   </tr>
</table><a name="1.5.12"></a><br>1.5.12 : <b>Reg : AXIM_RBURST</b> : 0x000000BD4<br><b>reg sep address</b> : 40008BD4<b> reg host address</b> : 1BD4<br>Accumulated read bursts<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_RBURST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.12.1"></a>31:0
      </td>
      <td valign="top">RBURST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Accumulated rd bursts</td>
   </tr>
</table><a name="1.5.13"></a><br>1.5.13 : <b>Reg : AXIM_WLATENCY</b> : 0x000000BD8<br><b>reg sep address</b> : 40008BD8<b> reg host address</b> : 1BD8<br>Accumulated write latency<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_WLATENCY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.13.1"></a>31:0
      </td>
      <td valign="top">WLATENCY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Accumulated wr latency correlated with WBURST</td>
   </tr>
</table><a name="1.5.14"></a><br>1.5.14 : <b>Reg : AXIM_WBURST</b> : 0x000000BDC<br><b>reg sep address</b> : 40008BDC<b> reg host address</b> : 1BDC<br>Accumulated write bursts<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_WBURST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.14.1"></a>31:0
      </td>
      <td valign="top">WBURST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Accumulated wr bursts</td>
   </tr>
</table><a name="1.5.15"></a><br>1.5.15 : <b>Reg : AXIM_CACHETYPE_CFG</b> : 0x000000BE0<br><b>reg sep address</b> : 40008BE0<b> reg host address</b> : 1BE0<br>AXI master cache-type configuration.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_CACHETYPE_CFG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.15.1"></a>7:0
      </td>
      <td valign="top">unused0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.15.2"></a>11:8
      </td>
      <td valign="top">DD_ARCACHE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Control the ARCACHE value of the direct data.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.15.3"></a>23:12
      </td>
      <td valign="top">unused1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.15.4"></a>27:24
      </td>
      <td valign="top">DD_AWCACHE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Control the AWCACHE value of the direct data.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.15.5"></a>31:28
      </td>
      <td valign="top">unused2</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.16"></a><br>1.5.16 : <b>Reg : AXIM_PROT_CFG</b> : 0x000000BE4<br><b>reg sep address</b> : 40008BE4<b> reg host address</b> : 1BE4<br>AXIM Protection field configuration<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_PROT_CFG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.16.1"></a>3:0
      </td>
      <td valign="top">unused0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.16.2"></a>4:4
      </td>
      <td valign="top">DD_ARPROT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Control the ARPROT value of the direct data.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.16.3"></a>11:5
      </td>
      <td valign="top">unused1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.16.4"></a>12:12
      </td>
      <td valign="top">DD_AWPROT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Control the AWPROT value of the direct data.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.16.5"></a>15:13
      </td>
      <td valign="top">unused2</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.16.6"></a>31:16
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.17"></a><br>1.5.17 : <b>Reg : AXIM_CFG</b> : 0x000000BE8<br><b>reg sep address</b> : 40008BE8<b> reg host address</b> : 1BE8<br>AXI master configuration<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_CFG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.1"></a>3:0
      </td>
      <td valign="top">RD_AFTER_WR_STALL</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Enable/disable read after write stall for each of the clients:<br>@1 - enable<br>@0 - disable
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.2"></a>4:4
      </td>
      <td valign="top">BRESPMASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Masking interrupt sources: BRESP_ERR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.3"></a>5:5
      </td>
      <td valign="top">RRESPMASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Masking interrupt sources: RRESP_ERR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.4"></a>6:6
      </td>
      <td valign="top">INFLTMASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Masking interrupt sources: INFLIGHT_ERR</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.5"></a>7:7
      </td>
      <td valign="top">COMPMASK</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Masking interrupt sources: completion counter incremented - if both compmask and interrupt sources are unmasked, completion
         event has the highest priority.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.6"></a>15:8
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.7"></a>20:16
      </td>
      <td valign="top">ACCUM_LIMIT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Limit number of outstanding write transactions. AXIM stops issuing new requests after crossing this value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.17.8"></a>31:21
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.18"></a><br>1.5.18 : <b>Reg : AXIM_ACE_CONST</b> : 0x000000BEC<br><b>reg sep address</b> : 40008BEC<b> reg host address</b> : 1BEC<br>This register holds the ACE configuartion for the Secure AXI  transactions<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_ACE_CONST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.1"></a>1:0
      </td>
      <td valign="top">ARDOMAIN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">ACE ARDOMAIN constant value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.2"></a>3:2
      </td>
      <td valign="top">AWDOMAIN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">ACE AWDOMAIN constant value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.3"></a>5:4
      </td>
      <td valign="top">ARBAR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ACE ARBAR constant value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.4"></a>7:6
      </td>
      <td valign="top">AWBAR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ACE AWBAR constant value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.5"></a>11:8
      </td>
      <td valign="top">ARSNOOP</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ACE ARSNOOP constant value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.6"></a>14:12
      </td>
      <td valign="top">AWSNOOP_NOT_ALIGNED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">ACE AWSNOOP constant value when unaligned transaction is used.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.7"></a>17:15
      </td>
      <td valign="top">AWSNOOP_ALIGNED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ACE AWSNOOP constant value when aligned transaction is used.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.8"></a>24:18
      </td>
      <td valign="top">AWADDR_NOT_MASKED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">AWADDRESS not mask value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.9"></a>28:25
      </td>
      <td valign="top">AWLEN_VAL</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">AWLEN value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.18.10"></a>31:29
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.19"></a><br>1.5.19 : <b>Reg : AXIM_CACHE_PARAMS</b> : 0x000000BF0<br><b>reg sep address</b> : 40008BF0<b> reg host address</b> : 1BF0<br>AXI master configuration for DMA<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AXIM_CACHE_PARAMS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.19.1"></a>3:0
      </td>
      <td valign="top">AWCACHE_LAST</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Configure the AWCACHE last transaction for DMA.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.19.2"></a>7:4
      </td>
      <td valign="top">AWCACHE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Configure the AWCACHE transaction for DMA.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.19.3"></a>11:8
      </td>
      <td valign="top">ARCACHE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Configure the ARCACHE last transaction for DMA.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.19.4"></a>31:12
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.5.20"></a><br>1.5.20 : <b>Reg : ADDR_AXIM_CTRL</b> : 0x000000BF4<br><b>reg sep address</b> : 40008BF4<b> reg host address</b> : 1BF4<br>Control AXI master.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ADDR_AXIM_CTRL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.20.1"></a>3:0
      </td>
      <td valign="top">ADDR_AXIM_CTRL</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Limit outstanding number of read transactions.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.5.20.2"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.5">(top of block)</a><a name="1.6"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.6 : Block: DSCRPTR</font></b></td>
   <td align="right"><font color="#000000">0x000000E00</font></td>
</table><br><a name="1.6.1"></a><br>1.6.1 : <b>Reg : DSCRPTR_COMPLETION_COUNTER</b> : 0x000000E00<br><b>reg sep address</b> : 40008E00<b> reg host address</b> : 1E00<br>This register counts the number of completed descriptors in which the ACK_NEEDED field equals 1.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_COMPLETION_COUNTER</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.1.1"></a>5:0
      </td>
      <td valign="top">COMPLETION_COUNTER</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This counter counts completed descriptors in which the ACK_NEEDED field equals 1.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.1.2"></a>6:6
      </td>
      <td valign="top">OVERFLOW_COUNTER</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If this bit is set, completion counter 0 overflowed.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.1.3"></a>31:7
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.2"></a><br>1.6.2 : <b>Reg : DSCRPTR_COMPLETION_STATUS</b> : 0x000000E3C<br><b>reg sep address</b> : 40008E3C<b> reg host address</b> : 1E3C<br>This register holds the status of the completion counters.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_COMPLETION_STATUS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.2.1"></a>1:0
      </td>
      <td valign="top">COMPLETION_COUNTER_STATUS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Each bit in this register indicates, for the corresponding completion counter, whether it was incremented since the last time
         it was read (a read from a counter resets the relevant bit).
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.2.2"></a>31:2
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.3"></a><br>1.6.3 : <b>Reg : DSCRPTR_SW_RESET</b> : 0x000000E40<br><b>reg sep address</b> : 40008E40<b> reg host address</b> : 1E40<br>Software reset for descriptors module.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_SW_RESET</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.3.1"></a>0:0
      </td>
      <td valign="top">DSCRPTR_SW_RESET</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Descriptor reset.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.3.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.4"></a><br>1.6.4 : <b>Reg : DSCRPTR_SINGLE_ADDR_EN</b> : 0x000000E64<br><b>reg sep address</b> : 40008E64<b> reg host address</b> : 1E64<br>This register enables the Host to write a descriptor using a single address.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_SINGLE_ADDR_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.4.1"></a>0:0
      </td>
      <td valign="top">DSCRPTR_SINGLE_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">This bit allows the Host to access a single address when writing descriptors.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.4.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.5"></a><br>1.6.5 : <b>Reg : DSCRPTR_MEASURE_CNTR</b> : 0x000000E68<br><b>reg sep address</b> : 40008E68<b> reg host address</b> : 1E68<br>This register holds the number of cycles measured when using the special performance descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_MEASURE_CNTR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.5.1"></a>31:0
      </td>
      <td valign="top">MEASURE_CNTR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Counter for descriptors performance measurement, start and finish with a special descriptor. Reading this register clears
         it.
      </td>
   </tr>
</table><a name="1.6.6"></a><br>1.6.6 : <b>Reg : DSCRPTR_QUEUE_ARB_MODE</b> : 0x000000E70<br><b>reg sep address</b> : 40008E70<b> reg host address</b> : 1E70<br>This register select the queue arbiter mode<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_ARB_MODE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.6.1"></a>1:0
      </td>
      <td valign="top">QUEUE_ARB_MODE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0 - round roubin <br>1 - secure queue priority<br>2 - public queue priority
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.6.2"></a>31:2
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.7"></a><br>1.6.7 : <b>Reg : DSCRPTR_QUEUE_WORD0</b> : 0x000000E80<br><b>reg sep address</b> : 40008E80<b> reg host address</b> : 1E80<br>This register holds word0 of the descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WORD0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.7.1"></a>31:0
      </td>
      <td valign="top">DIN_DMA_ADDRESS</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When in DIN DMA mode:<br>@SRAM - This field holds the address of the source DMA data in the SRAM .<br>@Direct LLI - This field holds the address of the source DMA data in the system memory (through the AXI master)<br>@MLLI - This field holds the address of the source LLI list in the SRAM.
      </td>
   </tr>
</table><a name="1.6.8"></a><br>1.6.8 : <b>Reg : DSCRPTR_QUEUE_WORD1</b> : 0x000000E84<br><b>reg sep address</b> : 40008E84<b> reg host address</b> : 1E84<br>This register holds word1 of the descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WORD1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.1"></a>1:0
      </td>
      <td valign="top">DIN_DMA_MODE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">DIN DMA mode:<br>@2'h0 - NO DMA<br>@2'h1 - SRAM<br>@2'h2 - Direct LLI<br>@2'h3 - MLLI
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.2"></a>25:2
      </td>
      <td valign="top">DIN_SIZE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When in DIN DMA mode:<br>@SRAM - The size of the data. Must to be multiple of 4bytes.<br>@Direct LLI - The size of the data.<br>@MLLI - This field is not used.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.3"></a>26:26
      </td>
      <td valign="top">NS_BIT</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When SRAM flow is selected , this bit indicates that the SRAM endianness is active.<br>When AXI flow is selected this bit defines the NS bit for current transaction.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.4"></a>27:27
      </td>
      <td valign="top">DIN_CONST_VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This bit forces DIN data to be a constant value taken from the address field. When this bit is set, the DIN_DMA_MODE must
         be set to SRAM.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.5"></a>28:28
      </td>
      <td valign="top">NOT_LAST</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Not last descriptor - when this field is set, it signals that the last LLI of the current descriptor is not the last block
         of the AES.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.6"></a>29:29
      </td>
      <td valign="top">LOCK_QUEUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lock active queue. Disables context switching between the queues (works only when debug_mode is set).</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.8.7"></a>31:30
      </td>
      <td valign="top">NOT_USED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.9"></a><br>1.6.9 : <b>Reg : DSCRPTR_QUEUE_WORD2</b> : 0x000000E88<br><b>reg sep address</b> : 40008E88<b> reg host address</b> : 1E88<br>This register holds word2 of the descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WORD2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.9.1"></a>31:0
      </td>
      <td valign="top">DOUT_DMA_ADDRESS</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When in DOUT DMA mode:<br>@SRAM: The address of the destination DMA data in the SRAM.<br>@Direct LLI: The address of the destination DMA data in the system RAM (through the AXI master).<br>@MLLI: The address of the destination LLI list in the SRAM.
      </td>
   </tr>
</table><a name="1.6.10"></a><br>1.6.10 : <b>Reg : DSCRPTR_QUEUE_WORD3</b> : 0x000000E8C<br><b>reg sep address</b> : 40008E8C<b> reg host address</b> : 1E8C<br>This register holds word3 of the descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WORD3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.1"></a>1:0
      </td>
      <td valign="top">DOUT_DMA_MODE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">DOUT DMA mode:<br>@2'h0 - NO DMA<br>@2'h1 - SRAM<br>@2'h2 - Direct LLI<br>@2'h3 - MLLI
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.2"></a>25:2
      </td>
      <td valign="top">DOUT_SIZE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When in DOUT DMA mode:<br>@SRAM - The size of the data. Must to be multiple of 4bytes.<br>@Direct LLI - The size of the data.<br>@MLLI - This field is not used.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.3"></a>26:26
      </td>
      <td valign="top">NS_BIT</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">NS bit for current transaction</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.4"></a>27:27
      </td>
      <td valign="top">DOUT_LAST_IND</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates last transaction. This AWCACHE value of the last AXI transaction is uncached and unbufferred.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.5"></a>28:28
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.6"></a>29:29
      </td>
      <td valign="top">HASH_XOR_BIT</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When this bit is set - the DIN data to HASH is xored with xor-register.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.7"></a>30:30
      </td>
      <td valign="top">NOT_USED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.10.8"></a>31:31
      </td>
      <td valign="top">QUEUE_LAST_IND</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates the end of  current flow.</td>
   </tr>
</table><a name="1.6.11"></a><br>1.6.11 : <b>Reg : DSCRPTR_QUEUE_WORD4</b> : 0x000000E90<br><b>reg sep address</b> : 40008E90<b> reg host address</b> : 1E90<br>This register holds word4 of the descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WORD4</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.1"></a>5:0
      </td>
      <td valign="top">DATA_FLOW_MODE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Data-flow mode:<br>@6'd0 - BYPASS<br>@6'd1 - DIN-AES-DOUT<br>@6'd2 - AES-to-HASH<br>@6'd3 - AES-and-HASH<br>@6'd4 - DIN-DES-DOUT<br>@6'd5 - DES-to-HASH<br>@6'd6 - DES-and-HASH<br>@6'd7 - DIN-HASH<br>@6'd8 - DIN-HASH-and-BYPASS<br>@6'd9 - AES-MAC-and-BYPASS<br>@6'd10 - AES-to-HASH-and-DOUT<br>@6'd11 - Reserved<br>@6'd12 - DES-to-HASH-and-DOUT<br>@6'd13 - AES-to-AES-to-HASH-and DOUT<br>@6'd14 - AES-to-AES-to-HASH<br>@6'd15 - AES-to-HASH-and-AES<br>@6'd16 - Reserved<br>@6'd17 - DIN-AES-AESMAC<br>@6'd18 - HASH-to-DOUT<br>SETUP MODES:<br>@6'd32 - S_DIN-to AES<br>@6'd33 - S_DIN-to_AES2<br>@6d34 - S_DIN-to-DES<br>@6'd35 - Reserved<br>@6'd36 - Reserved<br>@6'd37 - S_Din-to-HASH<br>@6'd38 - S_AES-to-DOUT<br>@6'd39 - S_AES2-to-DOUT<br>@6'd40 - Reserved<br>@6'd41 - Reserved<br>@6'd42 - S_DES-to-DOUT<br>@6'd43 - S_HASH_to_DOUT<br>@6'd44 - SET-FLOW-ID
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.2"></a>6
      </td>
      <td valign="top">AES_SEL_N_HASH</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If this bit is set, the entire HASH flow is done with AES_MAC.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.3"></a>7
      </td>
      <td valign="top">AES_XOR_CRYPTO_KEY</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When using AES, if this field is set, then the AES HW key is xored with the already loaded key.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.4"></a>9:8
      </td>
      <td valign="top">ACK_NEEDED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@0x0 - no interrupt is triggered and no completion counter is incremented when the current descriptor is complete.<br>@0x1-0x2 - when the descriptor is complete, an interrupt is generated, and the relevant completion counter (according to the
         field value) is incremented.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.5"></a>13:10
      </td>
      <td valign="top">CIPHER_MODE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Value AES DES/TDES HASH/AESMAC:<br>@0x0 ECB DES-ECB ECB MD5<br>@0x1 CBC DES-CBC CBC SHA1<br>@0x2 CTR TDES ECB N/A SHA256<br>@0x3 CBC-MAC TDES CBC SHA224<br>@0x4 XTS N/A SHA512<br>@0x5 XCBC MAC SHA384<br>@0x6 OFB <br>@0x7 CMAC <br>@0x8 CCM A <br>@0x9 CCM E <br>@0xA CCM P<br>@0xB CBC-CTS
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.6"></a>14:14
      </td>
      <td valign="top">CMAC_SIZE0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">AES_CMAC_SIZE0 - kicks a CMAC operation with size zero.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.7"></a>16:15
      </td>
      <td valign="top">CIPHER_DO</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If the current flow is AES:<br>@2'd0 - AES INTERNAL KEY<br>@2'd1 - AES_SK - RKEK<br>@2'd2 - AES_SK - PROV_KEY<br>@2'd3 - Reserved<br>If the current flow is HASH:<br>@2'd1 - Do hash padding.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.8"></a>18:17
      </td>
      <td valign="top">CIPHER_CONF0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If the current flow is AES:<br>@2'd0 - encrypt: aes mode is encrypt.<br>@2'd1 - decrypt: aes mode is decrypt.<br>@2'd1 - Reserved.<br>If the current flow is HASH:<br>@2'd1 - hash output compared - currently not supported.<br>@2'd2 - hash output is big-endianness (need for HMAC flow).
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.9"></a>19:19
      </td>
      <td valign="top">CIPHER_CONF1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If the current flow is AES: Reserved.<br>If the current flow is HASH:<br>@1'b1 - Enable hash padding in the end of block.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.10"></a>21:20
      </td>
      <td valign="top">CIPHER_CONF2</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If the current flow is AES: Reserved.<br>If the current flow is HASH:<br>@2'd0 - do not truncate output.<br>@2'd1 - truncate to 96bits.<br>@2'd2 - truncate to 128bits.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.11"></a>23:22
      </td>
      <td valign="top">KEY_SIZE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">If the Data flow mode is setup AES:<br>@2'h0 - Aes key_size = 128b<br>@2'h1 - Aes key_size = 192b<br>@2'h2 - Aes key_size = 256b<br>If the Data flow mode is setup DES:<br>@2'h0 - Des key number = 1 key<br>@2'h1 - Des key number = 2 keys<br>@2'h2 - Des key number = 3 keys
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.12"></a>27:24
      </td>
      <td valign="top">SETUP_OPERATION</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">@4'd0 - NONE<br>@4'd1 - Load state0 from DIN. The functionality of bit depend on the current flow:<br>$AES - load IV from DIN.<br>$DES - load IV. <br>$HASH - load H (digest).<br>@4'd2 - Load state1 from DIN.<br>$AES - load CTR. <br>$HASH - load data to compare - not supported.<br>@4'd3 - Load state2 from DIN .<br>$AES - load prev_iv.<br>@4'd4 - Load key0 from DIN. <br>$AES - load key.<br>$DES - load key.<br>$HASH - load Hash current length register for padding. <br>@4'd5 - Load AES xex key from DIN.<br>// Store States <br>@4'd8 - Write state0 to DOUT. <br>$AES - store IV.<br>$DES - store IV.<br>$HASH - store H - save the digest.<br>@4'd9 - Write state1 to DOUT2.<br>$AES - store CTR.<br>$HASH - store current length.<br>@4'd10 - write state2 to DOUT .<br>$AES - store prev_iv.<br>@4'd11 - write state3 to DOUT.<br>$AES - store xex_key.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.13"></a>28:28
      </td>
      <td valign="top">DIN_SRAM_ENDIANNESS</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When using DIN source as SRAM, this bit swaps the bytes order of the word read from the SRAM and decreases the address after
         each word.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.14"></a>29:29
      </td>
      <td valign="top">DOUT_SRAM_ENDIANNESS</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When using DOUT destination as SRAM, this bit swaps the bytes order of the word written to SRAM and decreases the address
         after each word.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.15"></a>30:30
      </td>
      <td valign="top">WORD_SWAP</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Change the word order of all setup-finalize descriptor from the following engines <br>AES, AES_MAC,DES.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.11.16"></a>31:31
      </td>
      <td valign="top">BYTES_SWAP</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Change the bytes order of all setup-finalize descriptor from the following engines <br>AES, AES_MAC,DES.
      </td>
   </tr>
</table><a name="1.6.12"></a><br>1.6.12 : <b>Reg : DSCRPTR_QUEUE_WORD5</b> : 0x000000E94<br><b>reg sep address</b> : 40008E94<b> reg host address</b> : 1E94<br>This register holds word5 of the descriptor.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WORD5</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.12.1"></a>15:0
      </td>
      <td valign="top">DIN_ADDR_HIGH</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When using 48-bits AXI address, this field defines the highet 16bits of the DIN address.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.12.2"></a>31:16
      </td>
      <td valign="top">DOUT_ADDR_HIGH</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">When using 48-bits AXI address, this field defines the highet 16bits of the DOUT address.</td>
   </tr>
</table><a name="1.6.13"></a><br>1.6.13 : <b>Reg : DSCRPTR_QUEUE_WATERMARK</b> : 0x000000E98<br><b>reg sep address</b> : 40008E98<b> reg host address</b> : 1E98<br>This register holds the watermark value of descriptor queue.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_WATERMARK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.13.1"></a>4:0
      </td>
      <td valign="top">WATERMARK</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">queue watermark: if the amount of empty entries exceeds the watermark level, an interrupt is issued. possible values 0-14.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.13.2"></a>31:5
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.6.14"></a><br>1.6.14 : <b>Reg : DSCRPTR_QUEUE_CONTENT</b> : 0x000000E9C<br><b>reg sep address</b> : 40008E9c<b> reg host address</b> : 1E9c<br>This register holds the number of empty entries in descriptor queue.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">DSCRPTR_QUEUE_CONTENT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.14.1"></a>3:0
      </td>
      <td valign="top">QUEUE_CONTENT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">The number of empty entries in queue</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.6.14.2"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.6">(top of block)</a><a name="1.7"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.7 : Block: HOST_SRAM</font></b></td>
   <td align="right"><font color="#000000">0x000000F00</font></td>
</table><br><a name="1.7.1"></a><br>1.7.1 : <b>Reg : SRAM_DATA</b> : 0x000000F00<br><b>reg sep address</b> : <b> reg host address</b> : 1F00<br>READ WRITE DATA FROM SRAM<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">SRAM_DATA</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.7.1.1"></a>31:0
      </td>
      <td valign="top">SRAM_DATA</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">32 bit write or read from SRAM: read - triggers the SRAM read DMA address automatically incremented write - triggers the SRAM
         write DMA address automatically incremented
      </td>
   </tr>
</table><a name="1.7.2"></a><br>1.7.2 : <b>Reg : SRAM_ADDR</b> : 0x000000F04<br><b>reg sep address</b> : <b> reg host address</b> : 1F04<br>first address given to SRAM DMA for read/write transactions from SRAM<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">SRAM_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.7.2.1"></a>14:0
      </td>
      <td valign="top">SRAM_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SRAM starting address</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.7.2.2"></a>31:15
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">17'b0</td>
   </tr>
</table><a name="1.7.3"></a><br>1.7.3 : <b>Reg : SRAM_DATA_READY</b> : 0x000000F08<br><b>reg sep address</b> : <b> reg host address</b> : 1F08<br>The SRAM content is ready for read in SRAM_DATA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">SRAM_DATA_READY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.7.3.1"></a>0:0
      </td>
      <td valign="top">SRAM_READY</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">SRAM content is ready for read in SRAM_DATA.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.7.3.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.7">(top of block)</a><a name="1.8"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.8 : Block: NVM</font></b></td>
   <td align="right"><font color="#000000">0x000000F10</font></td>
</table><br><a name="1.8.1"></a><br>1.8.1 : <b>Reg : HOST_DCU_EN</b> : 0x000000F64<br><b>reg sep address</b> : <b> reg host address</b> : 1F64<br>The DCU enable register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_DCU_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.1.1"></a>30:0
      </td>
      <td valign="top">DEBUG_DOMAINS</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Debug Control Unit (DCU) Enable bits.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.1.2"></a>31
      </td>
      <td valign="top">LOCK_BIT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing 1 to this field locks the DCU_EN bits for further writing.</td>
   </tr>
</table><a name="1.8.2"></a><br>1.8.2 : <b>Reg : HOST_SECURE_TIMER_BIST_KICK</b> : 0x000000F68<br><b>reg sep address</b> : <b> reg host address</b> : 1F68<br>Secure Timer BIST Kick signal.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SECURE_TIMER_BIST_KICK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.2.1"></a>0
      </td>
      <td valign="top">HOST_SECURE_TIMER_BIST_KICK</td>
      <td valign="top" align="center">wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secure Timer BIST Kick signal. The BIST starts at the following AO_CLK tick.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.2.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.3"></a><br>1.8.3 : <b>Reg : HOST_SECURE_TIMER_BIST_VAL</b> : 0x000000F6C<br><b>reg sep address</b> : <b> reg host address</b> : 1F6c<br>this register holds the Secure Timer BIST result.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SECURE_TIMER_BIST_VAL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.3.1"></a>15:0
      </td>
      <td valign="top">HOST_SECURE_TIMER_BIST_VAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secure Timer BIST result.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.3.2"></a>31:16
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.4"></a><br>1.8.4 : <b>Reg : HOST_CC_AO_TEST</b> : 0x000000F70<br><b>reg sep address</b> : <b> reg host address</b> : 1F70<br>Writing to this register sets/resets the CryptoCell to Always-On test signal.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_CC_AO_TEST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.4.1"></a>0
      </td>
      <td valign="top">HOST_CC_AO_TEST</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell-Secure to Always-On test signal value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.4.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.5"></a><br>1.8.5 : <b>Reg : HOST_LOW_RES_SECURE_TIMER_RST</b> : 0x000000F74<br><b>reg sep address</b> : <b> reg host address</b> : 1F74<br>Writing to this register resets the low-resolution Secure Timer (residing in the Always-On model).<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_LOW_RES_SECURE_TIMER_RST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.5.1"></a>0
      </td>
      <td valign="top">HOST_LOW_RES_SECURE_TIMER_RST</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reset the low-resolution Secure Timer (residing in the Always-On model).</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.5.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.6"></a><br>1.8.6 : <b>Reg : HOST_LOW_RES_SECURE_TIMER_0</b> : 0x000000F78<br><b>reg sep address</b> : <b> reg host address</b> : 1F78<br>This register holds the low-resolution Secure Timer value, bits 31:0 (residing in the Always-On model).<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_LOW_RES_SECURE_TIMER_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.6.1"></a>31:0
      </td>
      <td valign="top">HOST_LOW_RES_SECURE_TIMER_0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lower 32 bits of the low-resolution Secure Timer.</td>
   </tr>
</table><a name="1.8.7"></a><br>1.8.7 : <b>Reg : HOST_LOW_RES_SECURE_TIMER_1</b> : 0x000000F7C<br><b>reg sep address</b> : <b> reg host address</b> : 1F7c<br>This register holds the low-resolution Secure Timer value, bits 63:32 (residing in the Always-On model).<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_LOW_RES_SECURE_TIMER_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.7.1"></a>31:0
      </td>
      <td valign="top">HOST_LOW_RES_SECURE_TIMER_1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Upper 32 bits of the low-resolution Secure Timer.</td>
   </tr>
</table><a name="1.8.8"></a><br>1.8.8 : <b>Reg : HOST_HIGH_RES_SECURE_TIMER_RST</b> : 0x000000F80<br><b>reg sep address</b> : <b> reg host address</b> : 1F80<br>Writing to this register resets the high-resolution Secure Timer.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_HIGH_RES_SECURE_TIMER_RST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.8.1"></a>0
      </td>
      <td valign="top">HOST_HIGH_RES_SECURE_TIMER_RST</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reset the high-resolution Secure Timer.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.8.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.9"></a><br>1.8.9 : <b>Reg : HOST_HIGH_RES_SECURE_TIMER_0</b> : 0x000000F84<br><b>reg sep address</b> : <b> reg host address</b> : 1F84<br>This register holds the high-resolution Secure Timer value, bits 31:0.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_HIGH_RES_SECURE_TIMER_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.9.1"></a>31:0
      </td>
      <td valign="top">HOST_HIGH_RES_SECURE_TIMER_0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lower 32 bits of the high-resolution Secure Timer.</td>
   </tr>
</table><a name="1.8.10"></a><br>1.8.10 : <b>Reg : HOST_HIGH_RES_SECURE_TIMER_1</b> : 0x000000F88<br><b>reg sep address</b> : <b> reg host address</b> : 1F88<br>This register holds the high-resolution Secure Timer value, bits 39:32.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_HIGH_RES_SECURE_TIMER_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.10.1"></a>7:0
      </td>
      <td valign="top">HOST_HIGH_RES_SECURE_TIMER_1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Upper 8 bits of the high-resolution Secure Timer.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.10.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.11"></a><br>1.8.11 : <b>Reg : HOST_HIGH_RES_SECURE_TIMER_TH_0</b> : 0x000000F8C<br><b>reg sep address</b> : <b> reg host address</b> : 1F8c<br>This register holds the high-resolution Secure Timer value, bits 31:0.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_HIGH_RES_SECURE_TIMER_TH_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.11.1"></a>31:0
      </td>
      <td valign="top">HOST_HIGH_RES_SECURE_TIMER_TH_0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lower 32 bits of the high-resolution Secure Timer threshold (threshold for Interrupt to be set)</td>
   </tr>
</table><a name="1.8.12"></a><br>1.8.12 : <b>Reg : HOST_HIGH_RES_SECURE_TIMER_TH_1</b> : 0x000000F90<br><b>reg sep address</b> : <b> reg host address</b> : 1F90<br>This register holds the high-resolution Secure Timer value, bits 39:32.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_HIGH_RES_SECURE_TIMER_TH_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.12.1"></a>7:0
      </td>
      <td valign="top">HOST_HIGH_RES_SECURE_TIMER_TH_1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Upper 8 bits of the high-resolution Secure Timer  threshold (threshold for Interrupt to be set)</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.12.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.13"></a><br>1.8.13 : <b>Reg : HOST_LATCHED_EXTERNAL_TIMER_0</b> : 0x000000F94<br><b>reg sep address</b> : <b> reg host address</b> : 1F94<br>This register holds the latched value of the low-resolution Secure Timer, bits 31:0 (latched at reset of high-resolution timer).<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_LATCHED_EXTERNAL_TIMER_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.13.1"></a>31:0
      </td>
      <td valign="top">HOST_LATCHED_EXTERNAL_TIMER_0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lower 32 bits of the latched low-resolution Secure Timer value.</td>
   </tr>
</table><a name="1.8.14"></a><br>1.8.14 : <b>Reg : HOST_LATCHED_EXTERNAL_TIMER_1</b> : 0x000000F98<br><b>reg sep address</b> : <b> reg host address</b> : 1F98<br>This register holds the latched value of the low-resolution Secure Timer, bits 64:32 (latched at reset of high-resolution
timer).<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_LATCHED_EXTERNAL_TIMER_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.14.1"></a>31:0
      </td>
      <td valign="top">HOST_LATCHED_EXTERNAL_TIMER_1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Upper 32 bits of the latched low-resolution Secure Timer value.</td>
   </tr>
</table><a name="1.8.15"></a><br>1.8.15 : <b>Reg : NVM_CC_BOOT</b> : 0x000000FA0<br><b>reg sep address</b> : <b> reg host address</b> : 1FA0<br>Reflects HW Defines in the NVM.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">NVM_CC_BOOT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.15.1"></a>0:0
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.15.2"></a>1:1
      </td>
      <td valign="top">LARGE_RKEK_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">This field defines the HW key size:<br>@1'b0 - 128bit<br>@1'b1 - 256bit
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.15.3"></a>2:2
      </td>
      <td valign="top">HASH_IN_FUSES_LOCAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">This field defines whether the NVM includes a HASH digest of the OEM key.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.15.4"></a>31:3
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.16"></a><br>1.8.16 : <b>Reg : HOST_AIB_ADDR_REG</b> : 0x000000FA4<br><b>reg sep address</b> : <b> reg host address</b> : 1FA4<br>This register serves for indirect access to the NVM.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_AIB_ADDR_REG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.16.1"></a>11:0
      </td>
      <td valign="top">HOST_AIB_ADDR_REG</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The AIB address. Bit [1:0] should be 2'b0.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.16.2"></a>15:12
      </td>
      <td valign="top">RESERVED0</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.16.3"></a>16
      </td>
      <td valign="top">READ_ACCESS</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">For read access, this field should be set to 1.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.16.4"></a>17
      </td>
      <td valign="top">WRITE_ACCESS</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">For write access, this field should be set to 1.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.16.5"></a>31:18
      </td>
      <td valign="top">RESERVED1</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.17"></a><br>1.8.17 : <b>Reg : HOST_AIB_WDATA_REG</b> : 0x000000FA8<br><b>reg sep address</b> : <b> reg host address</b> : 1FA8<br>The write data for AIB transactions should be written to this register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_AIB_WDATA_REG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.17.1"></a>31:0
      </td>
      <td valign="top">HOST_AIB_WDATA_REG</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The write data for AIB transactions should be written to this field.</td>
   </tr>
</table><a name="1.8.18"></a><br>1.8.18 : <b>Reg : HOST_AIB_RDATA_REG</b> : 0x000000FAC<br><b>reg sep address</b> : <b> reg host address</b> : 1FAC<br>The data for AIB transactions can be read from this register.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_AIB_RDATA_REG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.18.1"></a>31:0
      </td>
      <td valign="top">HOST_AIB_RDATA_REG</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The data for AIB transactions can be read from this field.</td>
   </tr>
</table><a name="1.8.19"></a><br>1.8.19 : <b>Reg : AIB_FUSE_PROG_COMPLETED</b> : 0x000000FB0<br><b>reg sep address</b> : <b> reg host address</b> : 1FB0<br>This register reflects the fuse_aib_prog_completed input, which indicates that the fuse programming was completed.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AIB_FUSE_PROG_COMPLETED</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.19.1"></a>0:0
      </td>
      <td valign="top">AIB_FUSE_PROG_COMPLETED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates if the fuse programming operation has been completed.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.19.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.20"></a><br>1.8.20 : <b>Reg : AIB_FUSE_ACK</b> : 0x000000FB4<br><b>reg sep address</b> : <b> reg host address</b> : 1FB4<br>This register reflects the fuse_aib_ack input, which indicates that the AIB transaction was completed.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AIB_FUSE_ACK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.20.1"></a>0:0
      </td>
      <td valign="top">AIB_FUSE_ACK_REG</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates if the AIB transaction has been completed.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.20.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.21"></a><br>1.8.21 : <b>Reg : AIB_DEBUG_STATUS</b> : 0x000000FB8<br><b>reg sep address</b> : <b> reg host address</b> : 1FB8<br>AIB debug status register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">AIB_DEBUG_STATUS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.21.1"></a>0:0
      </td>
      <td valign="top">FORBIDDEN_CPU_ACCESS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates that the last Host access operation was to forbidden area, changed after boot.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.21.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.22"></a><br>1.8.22 : <b>Reg : LCS_IS_VALID</b> : 0x000000FBC<br><b>reg sep address</b> : <b> reg host address</b> : 1FBC<br>Indicates that the LCS register holds a valid value.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">LCS_IS_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.22.1"></a>0:0
      </td>
      <td valign="top">LCS_IS_VALID_REG</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates whether LCS is valid.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.22.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.23"></a><br>1.8.23 : <b>Reg : HOST_SESSION_KEY0</b> : 0x000000FC0<br><b>reg sep address</b> : <b> reg host address</b> : 1FC0<br>Bits [31:0] of the Session key<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SESSION_KEY0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.23.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY0_REG</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Bits [31:0] of the Session key</td>
   </tr>
</table><a name="1.8.24"></a><br>1.8.24 : <b>Reg : HOST_SESSION_KEY1</b> : 0x000000FC4<br><b>reg sep address</b> : <b> reg host address</b> : 1FC4<br>Bits [63:32] of the Session key<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SESSION_KEY1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.24.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY1_REG</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Bits [63:32] of the Session key</td>
   </tr>
</table><a name="1.8.25"></a><br>1.8.25 : <b>Reg : HOST_SESSION_KEY2</b> : 0x000000FC8<br><b>reg sep address</b> : <b> reg host address</b> : 1FC8<br>Bits [95:64] of the Session key<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SESSION_KEY2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.25.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY2_REG</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Bits [95:64] of the Session key</td>
   </tr>
</table><a name="1.8.26"></a><br>1.8.26 : <b>Reg : HOST_SESSION_KEY3</b> : 0x000000FCC<br><b>reg sep address</b> : <b> reg host address</b> : 1FCC<br>Bits [127:96] of the Session key. Writing to this register also creates a write pulse toward the always-on module.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SESSION_KEY3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.26.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY3_REG</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Bits [127:96] of the Session key.</td>
   </tr>
</table><a name="1.8.27"></a><br>1.8.27 : <b>Reg : HOST_SESSION_KEY_IS_VALID</b> : 0x000000FD0<br><b>reg sep address</b> : <b> reg host address</b> : 1FD0<br>Indication from the always-on register that the session key is valid.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_SESSION_KEY_IS_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.27.1"></a>0:0
      </td>
      <td valign="top">SESSION_KEY_IS_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indicates that session key is ready for use.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.27.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.28"></a><br>1.8.28 : <b>Reg : LCS_REG</b> : 0x000000FD4<br><b>reg sep address</b> : <b> reg host address</b> : 1FD4<br>The lifecycle state register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">LCS_REG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.28.1"></a>7:0
      </td>
      <td valign="top">LCS_REG</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">Indicates the LCS (Lifecycle State) value.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.28.2"></a>8:8
      </td>
      <td valign="top">ERROR_KDR_ZERO_CNT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indication that the number of zeroes in the loaded KDR is not equal to the value set in the manufacture flag.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.28.3"></a>9:9
      </td>
      <td valign="top">ERROR_PROV_ZERO_CNT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indication that the number of zeroes in the loaded PROVISION key is not equal to the value set in the manufacture flag.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.28.4"></a>10:10
      </td>
      <td valign="top">ERROR_KCST_ZERO_CNT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Indication that the number of zeroes in the ENCRYPTED KCST key is not equal to the value set in the manufacture flag.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.28.5"></a>31:11
      </td>
      <td valign="top">RESREVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.29"></a><br>1.8.29 : <b>Reg : HOST_CPC_SECURITY_DISABLE</b> : 0x000000FD8<br><b>reg sep address</b> : <b> reg host address</b> : 1FD8<br>Host disable security for the current power cycle.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_CPC_SECURITY_DISABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.29.1"></a>0:0
      </td>
      <td valign="top">HOST_SECURITY_DISABLE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Host disabled security for the Current Power Cycle (CPC), a.k.a. Temporary Security Disable mode.</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.29.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.30"></a><br>1.8.30 : <b>Reg : HOST_AO_CC_STATE_COUNTER</b> : 0x000000FDC<br><b>reg sep address</b> : <b> reg host address</b> : 1FDC<br>The Always-On state counter.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_AO_CC_STATE_COUNTER</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.30.1"></a>31:0
      </td>
      <td valign="top">AO_CC_STATE_COUNTER</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x</td>
      <td valign="top">This input reflects the state counter input from the persistent state IF.</td>
   </tr>
</table><a name="1.8.31"></a><br>1.8.31 : <b>Reg : HOST_CC_AO_STATE_COUNTER_INC</b> : 0x000000FE0<br><b>reg sep address</b> : <b> reg host address</b> : 1FE0<br>State counter increment. Writing any value to this address asserts the CC_AO_STATE_COUNTER_INC outputs for 1 cycle.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_CC_AO_STATE_COUNTER_INC</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.31.1"></a>0:0
      </td>
      <td valign="top">CC_AO_STATE_COUNTER_INC</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Writing any value to this address asserts the CC_AO_STATE_COUNTER_INC outputs for 1 cycle. <br>This operation is supposed to increment the external always-on state counter register.
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.31.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.32"></a><br>1.8.32 : <b>Reg : HOST_AO_CC_IS_SD</b> : 0x000000FE4<br><b>reg sep address</b> : <b> reg host address</b> : 1FE4<br>This register reflects the Host AO_CC_IS_SD  input from the Always-On that determines the LCS is Secure-Disabled<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_AO_CC_IS_SD</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.32.1"></a>0:0
      </td>
      <td valign="top">AO_CC_LCS_IS_SD</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field reflects the Host AO_CC_IS_SD  input from the Always-On that determines the LCS is Secure-Disabled</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.32.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.33"></a><br>1.8.33 : <b>Reg : HOST_RMA_RKEK_WR</b> : 0x000000FE8<br><b>reg sep address</b> : <b> reg host address</b> : 1FE8<br>This register interface is used to update the RKEK registers when the device is in RMA mode, The RKEK is updated by shifting
when MSB word is written first. After the eighth writing the registers are blocked for further writing. (write -once)<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_RMA_RKEK_WR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.33.1"></a>0:0
      </td>
      <td valign="top">HOST_RMA_RKEK_WRITE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field is used to update the RKEK registers when the device is in RMA mode, The RKEK is updated by shifting when MSB word
         is written first. After the eighth writing the registers are blocked for further writing. (write -once)
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.33.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.34"></a><br>1.8.34 : <b>Reg : HOST_KCST_DISABLE</b> : 0x000000FEC<br><b>reg sep address</b> : <b> reg host address</b> : 1FEC<br>Upon boot, the NVM manager FSM will read the &#8220;Kcst_disable&#8221; bit from bit 15 of Word 0xA in the OTP<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KCST_DISABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.34.1"></a>0:0
      </td>
      <td valign="top">KCST_DISABLE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Only if the &#8220;Kcst_disable&#8221; bit is de-asserted, the NVM manager FSM will read from OTP the 128b encrypted Kcst from address
         1Kb
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.34.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.35"></a><br>1.8.35 : <b>Reg : HOST_KCST_VALID</b> : 0x000000FF0<br><b>reg sep address</b> : <b> reg host address</b> : 1FF0<br>This register reflects the Host AO_CC_KCST_VALID  input from the Always-On that determines the KCST KEY is valid<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KCST_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.35.1"></a>0:0
      </td>
      <td valign="top">KCST_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field  reflects the Host AO_CC_KCST_VALID  input from the Always-On that determines the KCST KEY is valid</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.35.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a name="1.8.36"></a><br>1.8.36 : <b>Reg : HOST_KPLT_VALID</b> : 0x000000FF4<br><b>reg sep address</b> : <b> reg host address</b> : 1FF4<br>This register reflects the Host AO_CC_KPLT_VALID  input from the Always-On that determines the KPLT KEY is valid<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">HOST_KPLT_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.36.1"></a>0:0
      </td>
      <td valign="top">KPLT_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">This field  reflects the Host AO_CC_KPLT_VALID  input from the Always-On that determines the KPLT KEY is valid</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.8.36.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Reserved</td>
   </tr>
</table><a href="#1.8">(top of block)</a><a name="1.9"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.9 : Block: ENV_REGS</font></b></td>
   <td align="right"><font color="#000000">0x060003000</font></td>
</table><br><a name="1.9.1"></a><br>1.9.1 : <b>Reg : ENV_CC_GPI</b> : 0x060003018<br><b>reg sep address</b> : <b> reg host address</b> : 3018<br>general purpose input to CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_GPI</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.1.1"></a>31:0
      </td>
      <td valign="top">GPI_DATA</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The value that is pushed to the cc_gpi input of CryptoCell</td>
   </tr>
</table><a name="1.9.2"></a><br>1.9.2 : <b>Reg : ENV_CC_GPO</b> : 0x06000301C<br><b>reg sep address</b> : <b> reg host address</b> : 301C<br>general purpose output to CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_GPO</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.2.1"></a>31:0
      </td>
      <td valign="top">GPO_DATA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">The CryptoCell's cc_gpo output value</td>
   </tr>
</table><a name="1.9.3"></a><br>1.9.3 : <b>Reg : ENV_PKA_DEBUG_MODE</b> : 0x060003024<br><b>reg sep address</b> : <b> reg host address</b> : 3024<br>Drive PKA debug mode <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_PKA_DEBUG_MODE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.3.1"></a>0:0
      </td>
      <td valign="top">PKA_DEBUG_MODE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - PKA in debug mode</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.3.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.4"></a><br>1.9.4 : <b>Reg : ENV_SCAN_MODE</b> : 0x060003030<br><b>reg sep address</b> : <b> reg host address</b> : 3030<br>CryptoCell scan_mode input<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_SCAN_MODE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.4.1"></a>0:0
      </td>
      <td valign="top">SCAN_MODE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">when Scan mode is set RKEKs are reset</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.4.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.5"></a><br>1.9.5 : <b>Reg : ENV_CC_ALLOW_SCAN</b> : 0x060003034<br><b>reg sep address</b> : <b> reg host address</b> : 3034<br>CryptoCell allow_scan output<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_ALLOW_SCAN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.5.1"></a>0:0
      </td>
      <td valign="top">CC_ALLOW_SCAN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">When low scan can not be performed. Reset value is: 1'b1</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.5.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.6"></a><br>1.9.6 : <b>Reg : ENV_CC_PUB_HOST_INT</b> : 0x060003068<br><b>reg sep address</b> : <b> reg host address</b> : 3068<br>CryptoCell public host interrupt value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_PUB_HOST_INT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.6.1"></a>0:0
      </td>
      <td valign="top">CC_PUB_HOST_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell interrupt to public Host Active High</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.6.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.7"></a><br>1.9.7 : <b>Reg : ENV_CC_HOST_INT</b> : 0x0600030A0<br><b>reg sep address</b> : <b> reg host address</b> : 30A0<br>CryptoCell interrupt value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_HOST_INT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.7.1"></a>0:0
      </td>
      <td valign="top">CC_HOST_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell interrupt to Host Active High</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.7.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.8"></a><br>1.9.8 : <b>Reg : ENV_CC_RST_N</b> : 0x0600030A8<br><b>reg sep address</b> : <b> reg host address</b> : 30A8<br>generate reset cycle towards CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_RST_N</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.8.1"></a>0:0
      </td>
      <td valign="top">CC_RST_N</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - generate reset cycle towards CryptoCell</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.8.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">generate reset cycle towards CryptoCell</td>
   </tr>
</table><a name="1.9.9"></a><br>1.9.9 : <b>Reg : ENV_RST_OVERRIDE</b> : 0x0600030AC<br><b>reg sep address</b> : <b> reg host address</b> : 30AC<br>Force high all reset lines in CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_RST_OVERRIDE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.9.1"></a>0:0
      </td>
      <td valign="top">RST_OVERRIDE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - doesn't permit SW_RST or SYS_RST to CryptoCell or any engine</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.9.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Force high all reset lines in CryptoCell</td>
   </tr>
</table><a name="1.9.10"></a><br>1.9.10 : <b>Reg : ENV_CC_HOST_EXT_ACK</b> : 0x0600030B0<br><b>reg sep address</b> : <b> reg host address</b> : 30B0<br>4 clocks ack<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_HOST_EXT_ACK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.10.1"></a>0:0
      </td>
      <td valign="top">CC_HOST_EXT_ACK</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ack to host</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.10.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">4 clocks ack</td>
   </tr>
</table><a name="1.9.11"></a><br>1.9.11 : <b>Reg : ENV_CC_POR_N_ADDR</b> : 0x0600030E0<br><b>reg sep address</b> : <b> reg host address</b> : 30E0<br>CryptoCell power ON <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_POR_N_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.11.1"></a>0:0
      </td>
      <td valign="top">CC_POR_N_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Active low. When asserted indicates that the entire system is powered on and not only the CryptoCell. If there's no potential
         powering down of the CryptoCell in the SoC this input must be connected to the SYS_RST_n input
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.11.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell power ON</td>
   </tr>
</table><a name="1.9.12"></a><br>1.9.12 : <b>Reg : ENV_CC_WARM_BOOT</b> : 0x0600030E4<br><b>reg sep address</b> : <b> reg host address</b> : 30E4<br>WR 1'b1 - generates WARM boot to CryptoCell by keeping por_n at 1'b1 and setting ENV_CC_RST_N. The reset takes 5 clocks<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_WARM_BOOT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.12.1"></a>0:0
      </td>
      <td valign="top">CC_WARM_BOOT</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">WR 1'b1 - generates WARM boot to CryptoCell by keeping por_n at 1'b1 and setting ENV_CC_RST_N. The reset takes 5 clocks</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.12.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.13"></a><br>1.9.13 : <b>Reg : ENV_CC_COLD_BOOT</b> : 0x0600030E8<br><b>reg sep address</b> : <b> reg host address</b> : 30E8<br>Writing 1 triggers a cold boot sequence (only reset toggling related sequence)<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_COLD_BOOT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.13.1"></a>0:0
      </td>
      <td valign="top">CC_COLD_BOOT_FULL</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">WR 1'b1 - generates full cold boot to CryptoCell by setting por_n ,cold_rst and SYS_RST at 1'b0</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.13.2"></a>1:1
      </td>
      <td valign="top">CC_COLD_BOOT_SEMI</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">WR 1'b1 - generates cold boot to CryptoCell by setting cold_rst and SYS_RST at 1'b0</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.13.3"></a>31:2
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.14"></a><br>1.9.14 : <b>Reg : ENV_CC_AO_MODEL_RST</b> : 0x0600030EC<br><b>reg sep address</b> : <b> reg host address</b> : 30EC<br>Writing 1 triggers a ao_model rst_n<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_AO_MODEL_RST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.14.1"></a>0:0
      </td>
      <td valign="top">AO_MODEL_RST_N</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">WR 1'b1 - triggers ao_module rst_n</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.14.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.9.15"></a><br>1.9.15 : <b>Reg : ENV_CC_COLD_RST</b> : 0x0600030FC<br><b>reg sep address</b> : <b> reg host address</b> : 30FC<br>CryptoCell cold reset<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_COLD_RST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.15.1"></a>0:0
      </td>
      <td valign="top">ENV_CC_COLD_RST</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell cold reset assertion</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.15.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell cold reset</td>
   </tr>
</table><a name="1.9.16"></a><br>1.9.16 : <b>Reg : ENV_DUMMY_ADDR</b> : 0x060003108<br><b>reg sep address</b> : <b> reg host address</b> : 3108<br>dummy environment register <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_DUMMY_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.16.1"></a>31:0
      </td>
      <td valign="top">ENV_DUMMY_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.9.17"></a><br>1.9.17 : <b>Reg : ENV_COUNTER_CLR</b> : 0x060003118<br><b>reg sep address</b> : <b> reg host address</b> : 3118<br>clear and start the SW counter<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_COUNTER_CLR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.17.1"></a>0:0
      </td>
      <td valign="top">COUNTER_CLR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - clear/start counter</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.17.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">clear and start the SW counter</td>
   </tr>
</table><a name="1.9.18"></a><br>1.9.18 : <b>Reg : ENV_COUNTER_RD</b> : 0x06000311C<br><b>reg sep address</b> : <b> reg host address</b> : 311C<br>clear and start the SW counter<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_COUNTER_RD</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.18.1"></a>31:0
      </td>
      <td valign="top">COUNTER_VAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SW counter value</td>
   </tr>
</table><a name="1.9.19"></a><br>1.9.19 : <b>Reg : ENV_CC_SECOND_BM_LOWER_BOUND_ADDR</b> : 0x060003120<br><b>reg sep address</b> : <b> reg host address</b> : 3120<br>Lower bound of cachable data address range<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_SECOND_BM_LOWER_BOUND_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.19.1"></a>19:0
      </td>
      <td valign="top">CC_SECOND_BM_LOWER_BOUND_ADDR</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lower bound of cachable data address range</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.19.2"></a>31:20
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Lower bound of cachable data address range</td>
   </tr>
</table><a name="1.9.20"></a><br>1.9.20 : <b>Reg : ENV_RNG_DEBUG_ENABLE</b> : 0x060003430<br><b>reg sep address</b> : <b> reg host address</b> : 3430<br>set RNG debug port<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_RNG_DEBUG_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.20.1"></a>0:0
      </td>
      <td valign="top">DEBUG_EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - RNG debug port asserted</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.20.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.9.21"></a><br>1.9.21 : <b>Reg : ENV_CC_LCS</b> : 0x06000343C<br><b>reg sep address</b> : <b> reg host address</b> : 343C<br>LCS register value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_LCS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.21.1"></a>7:0
      </td>
      <td valign="top">LCS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">LCS data</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.21.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">24'b0</td>
   </tr>
</table><a name="1.9.22"></a><br>1.9.22 : <b>Reg : ENV_CC_IS_CM_DM_SECURE_RMA</b> : 0x060003440<br><b>reg sep address</b> : <b> reg host address</b> : 3440<br>read the lcs states if it is CM DM SECURED or RMA<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_IS_CM_DM_SECURE_RMA</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.22.1"></a>0:0
      </td>
      <td valign="top">IS_CM</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is CM 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.22.2"></a>1:1
      </td>
      <td valign="top">IS_DM</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is DM 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.22.3"></a>2:2
      </td>
      <td valign="top">IS_SECURE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is SECURE 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.22.4"></a>3:3
      </td>
      <td valign="top">IS_RMA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is RMA 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.22.5"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">28'b0</td>
   </tr>
</table><a name="1.9.23"></a><br>1.9.23 : <b>Reg : ENV_DCU_EN</b> : 0x060003444<br><b>reg sep address</b> : <b> reg host address</b> : 3444<br>read the lcs states if it is CM DM SECURED or RMA <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_DCU_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.23.1"></a>31:0
      </td>
      <td valign="top">DCU_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Every bit in this sets of bits sets the matching dcu_en signal to a single dcu.</td>
   </tr>
</table><a name="1.9.24"></a><br>1.9.24 : <b>Reg : ENV_CC_LCS_IS_VALID</b> : 0x060003448<br><b>reg sep address</b> : <b> reg host address</b> : 3448<br>boot process finished reading LCS from NVM and write it to LCS register<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CC_LCS_IS_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.24.1"></a>0:0
      </td>
      <td valign="top">LCS_IS_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">LCS data is valid</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.24.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.9.25"></a><br>1.9.25 : <b>Reg : ENV_CRYPTOKEY_0</b> : 0x060003450<br><b>reg sep address</b> : <b> reg host address</b> : 3450<br>ENV_CRYPTOKEY[31_0] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.25.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.26"></a><br>1.9.26 : <b>Reg : ENV_CRYPTOKEY_1</b> : 0x060003454<br><b>reg sep address</b> : <b> reg host address</b> : 3454<br>ENV_CRYPTOKEY[63_32] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.26.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.27"></a><br>1.9.27 : <b>Reg : ENV_CRYPTOKEY_2</b> : 0x060003458<br><b>reg sep address</b> : <b> reg host address</b> : 3458<br>ENV_CRYPTOKEY[95_64] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.27.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.28"></a><br>1.9.28 : <b>Reg : ENV_CRYPTOKEY_3</b> : 0x06000345C<br><b>reg sep address</b> : <b> reg host address</b> : 345C<br>ENV_CRYPTOKEY[127_96] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.28.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.29"></a><br>1.9.29 : <b>Reg : ENV_CRYPTOKEY_4</b> : 0x060003460<br><b>reg sep address</b> : <b> reg host address</b> : 3460<br>ENV_CRYPTOKEY[159_128] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_4</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.29.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.30"></a><br>1.9.30 : <b>Reg : ENV_CRYPTOKEY_5</b> : 0x060003464<br><b>reg sep address</b> : <b> reg host address</b> : 3464<br>ENV_CRYPTOKEY[191_160] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_5</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.30.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.31"></a><br>1.9.31 : <b>Reg : ENV_CRYPTOKEY_6</b> : 0x060003468<br><b>reg sep address</b> : <b> reg host address</b> : 3468<br>ENV_CRYPTOKEY[223_192] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_6</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.31.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.32"></a><br>1.9.32 : <b>Reg : ENV_CRYPTOKEY_7</b> : 0x06000346C<br><b>reg sep address</b> : <b> reg host address</b> : 346C<br>ENV_CRYPTOKEY[255_224] Register.<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTOKEY_7</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.32.1"></a>31:0
      </td>
      <td valign="top">VALUE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Secret CRYPTOKEY driven to AES through an IO (Usually for CF Products)</td>
   </tr>
</table><a name="1.9.33"></a><br>1.9.33 : <b>Reg : ENV_POWER_DOWN</b> : 0x060003478<br><b>reg sep address</b> : <b> reg host address</b> : 3478<br>ENV_POWER_DOWN change bus to X's in DX simulations ONLY !<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_POWER_DOWN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.33.1"></a>31:0
      </td>
      <td valign="top">ENV_POWER_DOWN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">write pulse of power down indication. Used for Internal DX simulations ONLY !</td>
   </tr>
</table><a name="1.9.34"></a><br>1.9.34 : <b>Reg : ENV_POWER_DOWN_EN</b> : 0x06000347C<br><b>reg sep address</b> : <b> reg host address</b> : 347C<br>ENV_POWER_DOWN_EN observes cc_powerdown_en signal<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_POWER_DOWN_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.34.1"></a>0:0
      </td>
      <td valign="top">ENV_POWER_DOWN_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">observes cc_powerdown_en signal</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.34.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.9.35"></a><br>1.9.35 : <b>Reg : ENV_DCU_H_EN</b> : 0x060003484<br><b>reg sep address</b> : <b> reg host address</b> : 3484<br>read the lcs states if it is CM DM SECURED or RMA <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_DCU_H_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.35.1"></a>31:0
      </td>
      <td valign="top">DCU_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Every bit in this sets of bits sets the matching dcu_en signal to a single dcu.</td>
   </tr>
</table><a name="1.9.36"></a><br>1.9.36 : <b>Reg : ENV_VERSION</b> : 0x060003488<br><b>reg sep address</b> : <b> reg host address</b> : 3488<br>version of FPGA <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_VERSION</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.36.1"></a>31:0
      </td>
      <td valign="top">FPGA_VERSION</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Define the FPGA version.</td>
   </tr>
</table><a name="1.9.37"></a><br>1.9.37 : <b>Reg : ENV_FUSE_AIB_1K_OFFSET</b> : 0x06000348C<br><b>reg sep address</b> : <b> reg host address</b> : 348C<br>Set 2 MSB bits of AIB address (each 1KB access need to update these bits<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FUSE_AIB_1K_OFFSET</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.37.1"></a>1:0
      </td>
      <td valign="top">FUSE_AIB_1K_OFFSET</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Set desired 1K block in AIB memory and manipulate only with 8 bits OFFSET (necessary change for AIB address width = 10 b)</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.37.2"></a>31:2
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">30'b0</td>
   </tr>
</table><a name="1.9.38"></a><br>1.9.38 : <b>Reg : ENV_RESET_AO_MODEL</b> : 0x060003494<br><b>reg sep address</b> : <b> reg host address</b> : 3494<br>Reset the Always-On model<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_RESET_AO_MODEL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.38.1"></a>1:0
      </td>
      <td valign="top">RESET_AO_MODEL</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">async reset for the always-on model (FPGA environment only)</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.38.2"></a>31:2
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">30'b0</td>
   </tr>
</table><a name="1.9.39"></a><br>1.9.39 : <b>Reg : ENV_AO_OUT_SESSION_KEY_0</b> : 0x0600034B0<br><b>reg sep address</b> : <b> reg host address</b> : 34B0<br>Session key 0<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_AO_OUT_SESSION_KEY_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.39.1"></a>31:0
      </td>
      <td valign="top">AO_OUT_SESSION_KEY_0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 0</td>
   </tr>
</table><a name="1.9.40"></a><br>1.9.40 : <b>Reg : ENV_AO_OUT_SESSION_KEY_1</b> : 0x0600034B4<br><b>reg sep address</b> : <b> reg host address</b> : 34B4<br>Session key 1<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_AO_OUT_SESSION_KEY_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.40.1"></a>31:0
      </td>
      <td valign="top">AO_OUT_SESSION_KEY_1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 1</td>
   </tr>
</table><a name="1.9.41"></a><br>1.9.41 : <b>Reg : ENV_AO_OUT_SESSION_KEY_2</b> : 0x0600034B8<br><b>reg sep address</b> : <b> reg host address</b> : 34B8<br>Session key 2<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_AO_OUT_SESSION_KEY_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.41.1"></a>31:0
      </td>
      <td valign="top">AO_OUT_SESSION_KEY_2</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 2</td>
   </tr>
</table><a name="1.9.42"></a><br>1.9.42 : <b>Reg : ENV_AO_OUT_SESSION_KEY_3</b> : 0x0600034BC<br><b>reg sep address</b> : <b> reg host address</b> : 34BC<br>Session key 3<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_AO_OUT_SESSION_KEY_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.42.1"></a>31:0
      </td>
      <td valign="top">AO_OUT_SESSION_KEY_3</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 3</td>
   </tr>
</table><a name="1.9.43"></a><br>1.9.43 : <b>Reg : ENV_SPIDEN</b> : 0x0600034D0<br><b>reg sep address</b> : <b> reg host address</b> : 34D0<br>spiden override<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_SPIDEN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.43.1"></a>0:0
      </td>
      <td valign="top">SPIDEN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">External spiden input value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.43.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.9.44"></a><br>1.9.44 : <b>Reg : ENV_AO_CCP_LCS_IS_SD</b> : 0x0600034D4<br><b>reg sep address</b> : <b> reg host address</b> : 34D4<br>crypto key 3<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_AO_CCP_LCS_IS_SD</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.44.1"></a>0:0
      </td>
      <td valign="top">AO_CCP_LCS_IS_SD</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ao_ccp_lcs_is_sd</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.44.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">unused</td>
   </tr>
</table><a name="1.9.45"></a><br>1.9.45 : <b>Reg : ENV_CRYPTO_KEY_0</b> : 0x0600034E0<br><b>reg sep address</b> : <b> reg host address</b> : 34E0<br>Session key 0<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTO_KEY_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.45.1"></a>31:0
      </td>
      <td valign="top">CRYPTO_KEY_0</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">crypto key 0</td>
   </tr>
</table><a name="1.9.46"></a><br>1.9.46 : <b>Reg : ENV_CRYPTO_KEY_1</b> : 0x0600034E4<br><b>reg sep address</b> : <b> reg host address</b> : 34E4<br>crypto key 1<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTO_KEY_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.46.1"></a>31:0
      </td>
      <td valign="top">CRYPTO_KEY_1</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">crypto key 1</td>
   </tr>
</table><a name="1.9.47"></a><br>1.9.47 : <b>Reg : ENV_CRYPTO_KEY_2</b> : 0x0600034E8<br><b>reg sep address</b> : <b> reg host address</b> : 34E8<br>crypto key 2<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTO_KEY_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.47.1"></a>31:0
      </td>
      <td valign="top">CRYPTO_KEY_2</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">crypto key 2</td>
   </tr>
</table><a name="1.9.48"></a><br>1.9.48 : <b>Reg : ENV_CRYPTO_KEY_3</b> : 0x0600034EC<br><b>reg sep address</b> : <b> reg host address</b> : 34EC<br>crypto key 3<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_CRYPTO_KEY_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.9.48.1"></a>31:0
      </td>
      <td valign="top">CRYPTO_KEY_3</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">crypto key 3</td>
   </tr>
</table><a href="#1.9">(top of block)</a><a name="1.10"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.10 : Block: ENV_CC_MEMORIES</font></b></td>
   <td align="right"><font color="#000000">0x060004000</font></td>
</table><br><a name="1.10.1"></a><br>1.10.1 : <b>Reg : ENV_FUSE_READY</b> : 0x060004000<br><b>reg sep address</b> : <b> reg host address</b> : 4414<br>keep FUSE ready de-asserted (used in Discretix internal DSM tests only)<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FUSE_READY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.1.1"></a>0:0
      </td>
      <td valign="top">FUSE_READY</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'0 - FUSE ready kept low , 1'1 - FUSE ready released</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.1.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.10.2"></a><br>1.10.2 : <b>Reg : ENV_PERF_RAM_MASTER</b> : 0x0600040EC<br><b>reg sep address</b> : <b> reg host address</b> : 4500<br>selects who's the Performance RAM master<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_PERF_RAM_MASTER</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.2.1"></a>0:0
      </td>
      <td valign="top">PERF_RAM_MASTER</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b0 - sw_monitor_sni0er, 1'b1 - HOST</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.2.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">selects who's the Performance RAM master</td>
   </tr>
</table><a name="1.10.3"></a><br>1.10.3 : <b>Reg : ENV_PERF_RAM_ADDR_HIGH4</b> : 0x0600040F0<br><b>reg sep address</b> : <b> reg host address</b> : 4504<br>4 bits to concat with ENV_PERF_RAM_BASE[11]<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_PERF_RAM_ADDR_HIGH4</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.3.1"></a>1:0
      </td>
      <td valign="top">ADDR_HIGH_4</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">4 bits to concatenate: perf ram address = {ENV_PERF_RAM_ADDR_HIGH[3:0] ENV_PERF_RAM_BASE[11:2]}</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.3.2"></a>31:2
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">4 bits to concat with ENV_PERF_RAM_BASE[11</td>
   </tr>
</table><a name="1.10.4"></a><br>1.10.4 : <b>Reg : ENV_FUSES_RAM</b> : 0x0600043EC<br><b>reg sep address</b> : <b> reg host address</b> : 4800<br>Using this address the HOST gains access to the aib_slave_model (fuses). (Actually there are 256 words hidden here.)<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FUSES_RAM</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.10.4.1"></a>31:0
      </td>
      <td valign="top">FUSE_VAL</td>
      <td valign="top" align="center">r/wc</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Fuse value</td>
   </tr>
</table><a href="#1.10">(top of block)</a><a name="1.11"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.11 : Block: FPGA_ENV_REGS</font></b></td>
   <td align="right"><font color="#000000">0x060005000</font></td>
</table><br><a name="1.11.1"></a><br>1.11.1 : <b>Reg : ENV_FPGA_PKA_DEBUG_MODE</b> : 0x060005024<br><b>reg sep address</b> : <b> reg host address</b> : 5024<br>Drive PKA debug mode <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_PKA_DEBUG_MODE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.1.1"></a>0:0
      </td>
      <td valign="top">PKA_DEBUG_MODE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - PKA in debug mode</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.1.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.11.2"></a><br>1.11.2 : <b>Reg : ENV_FPGA_SCAN_MODE</b> : 0x060005030<br><b>reg sep address</b> : <b> reg host address</b> : 5030<br>CryptoCell scan_mode input<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SCAN_MODE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.2.1"></a>0:0
      </td>
      <td valign="top">SCAN_MODE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">when Scan mode is set RKEKs are reset</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.2.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.11.3"></a><br>1.11.3 : <b>Reg : ENV_FPGA_CC_ALLOW_SCAN</b> : 0x060005034<br><b>reg sep address</b> : <b> reg host address</b> : 5034<br>CryptoCell allow_scan output<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_ALLOW_SCAN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.3.1"></a>0:0
      </td>
      <td valign="top">CC_ALLOW_SCAN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">When low scan can not be performed. Reset value is: 1'b1</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.3.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.11.4"></a><br>1.11.4 : <b>Reg : ENV_FPGA_CC_HOST_INT</b> : 0x0600050A0<br><b>reg sep address</b> : <b> reg host address</b> : 50A0<br>CryptoCell interrupt value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_HOST_INT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.4.1"></a>0:0
      </td>
      <td valign="top">CC_HOST_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell interrupt to Host Active High</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.4.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.11.5"></a><br>1.11.5 : <b>Reg : ENV_FPGA_CC_PUB_HOST_INT</b> : 0x0600050A4<br><b>reg sep address</b> : <b> reg host address</b> : 50A4<br>CryptoCell public host interrupt value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_PUB_HOST_INT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.5.1"></a>0:0
      </td>
      <td valign="top">CC_PUB_HOST_INT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell interrupt to public Host Active High</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.5.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.11.6"></a><br>1.11.6 : <b>Reg : ENV_FPGA_CC_RST_N</b> : 0x0600050A8<br><b>reg sep address</b> : <b> reg host address</b> : 50A8<br>generate reset cycle towards CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_RST_N</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.6.1"></a>0:0
      </td>
      <td valign="top">CC_RST_N</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - generate reset cycle towards CryptoCell</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.6.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">generate reset cycle towards CryptoCell</td>
   </tr>
</table><a name="1.11.7"></a><br>1.11.7 : <b>Reg : ENV_FPGA_RST_OVERRIDE</b> : 0x0600050AC<br><b>reg sep address</b> : <b> reg host address</b> : 50AC<br>Force high all reset lines in CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_RST_OVERRIDE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.7.1"></a>0:0
      </td>
      <td valign="top">RST_OVERRIDE</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - doesn't permit SW_RST or SYS_RST to CryptoCell or any engine</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.7.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Force high all reset lines in CryptoCell<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.
      </td>
   </tr>
</table><a name="1.11.8"></a><br>1.11.8 : <b>Reg : ENV_FPGA_CC_POR_N_ADDR</b> : 0x0600050E0<br><b>reg sep address</b> : <b> reg host address</b> : 50E0<br>CryptoCell power ON <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_POR_N_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.8.1"></a>0:0
      </td>
      <td valign="top">CC_POR_N_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x1</td>
      <td valign="top">Active low. When asserted indicates that the entire system is powered on and not only the CryptoCell. If there's no potential
         powering down of the CryptoCell in the SoC this input must be connected to the SYS_RST_n input
      </td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.8.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell power ON</td>
   </tr>
</table><a name="1.11.9"></a><br>1.11.9 : <b>Reg : ENV_FPGA_CC_COLD_RST</b> : 0x0600050FC<br><b>reg sep address</b> : <b> reg host address</b> : 50FC<br>CryptoCell cold reset<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_COLD_RST</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.9.1"></a>0:0
      </td>
      <td valign="top">ENV_CC_COLD_RST</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell cold reset assertion</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.9.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">CryptoCell cold reset</td>
   </tr>
</table><a name="1.11.10"></a><br>1.11.10 : <b>Reg : ENV_FPGA_DUMMY_ADDR</b> : 0x060005108<br><b>reg sep address</b> : <b> reg host address</b> : 5108<br>dummy environment register <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_DUMMY_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.10.1"></a>31:0
      </td>
      <td valign="top">ENV_DUMMY_ADDR</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">0</td>
   </tr>
</table><a name="1.11.11"></a><br>1.11.11 : <b>Reg : ENV_FPGA_COUNTER_CLR</b> : 0x060005118<br><b>reg sep address</b> : <b> reg host address</b> : 5118<br>clear and start the SW counter<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_COUNTER_CLR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.11.1"></a>0:0
      </td>
      <td valign="top">COUNTER_CLR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - clear/start counter</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.11.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">clear and start the SW counter</td>
   </tr>
</table><a name="1.11.12"></a><br>1.11.12 : <b>Reg : ENV_FPGA_COUNTER_RD</b> : 0x06000511C<br><b>reg sep address</b> : <b> reg host address</b> : 511C<br>clear and start the SW counter<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_COUNTER_RD</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.12.1"></a>31:0
      </td>
      <td valign="top">COUNTER_VAL</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SW counter value</td>
   </tr>
</table><a name="1.11.13"></a><br>1.11.13 : <b>Reg : ENV_FPGA_RNG_DEBUG_ENABLE</b> : 0x060005430<br><b>reg sep address</b> : <b> reg host address</b> : 5430<br>set RNG debug port<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_RNG_DEBUG_ENABLE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.13.1"></a>0:0
      </td>
      <td valign="top">DEBUG_EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - RNG debug port asserted</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.13.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.11.14"></a><br>1.11.14 : <b>Reg : ENV_FPGA_CC_LCS</b> : 0x06000543C<br><b>reg sep address</b> : <b> reg host address</b> : 543C<br>LCS register value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_LCS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.14.1"></a>7:0
      </td>
      <td valign="top">LCS</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">LCS data</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.14.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">24'b0</td>
   </tr>
</table><a name="1.11.15"></a><br>1.11.15 : <b>Reg : ENV_FPGA_CC_IS_CM_DM_SECURE_RMA</b> : 0x060005440<br><b>reg sep address</b> : <b> reg host address</b> : 5440<br>read the lcs states if it is CM DM SECURED or RMA<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_IS_CM_DM_SECURE_RMA</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.15.1"></a>0:0
      </td>
      <td valign="top">IS_CM</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is CM 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.15.2"></a>1:1
      </td>
      <td valign="top">IS_DM</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is DM 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.15.3"></a>2:2
      </td>
      <td valign="top">IS_SECURE</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is SECURE 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.15.4"></a>3:3
      </td>
      <td valign="top">IS_RMA</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">1'b1 - lcs state is RMA 1'b0 - not</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.15.5"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">28'b0</td>
   </tr>
</table><a name="1.11.16"></a><br>1.11.16 : <b>Reg : ENV_FPGA_DCU_EN</b> : 0x060005444<br><b>reg sep address</b> : <b> reg host address</b> : 5444<br>read the lcs states if it is CM DM SECURED or RMA <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_DCU_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.16.1"></a>31:0
      </td>
      <td valign="top">DCU_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Every bit in this sets of bits sets the matching dcu_en signal to a single dcu.</td>
   </tr>
</table><a name="1.11.17"></a><br>1.11.17 : <b>Reg : ENV_FPGA_CC_LCS_IS_VALID</b> : 0x060005448<br><b>reg sep address</b> : <b> reg host address</b> : 5448<br>boot process finished reading LCS from NVM and write it to LCS register<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_LCS_IS_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.17.1"></a>0:0
      </td>
      <td valign="top">LCS_IS_VALID</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">LCS data is valid</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.17.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.11.18"></a><br>1.11.18 : <b>Reg : ENV_FPGA_POWER_DOWN</b> : 0x060005478<br><b>reg sep address</b> : <b> reg host address</b> : 5478<br>ENV_POWER_DOWN change bus to X's in DX simulations ONLY !<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_POWER_DOWN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.18.1"></a>31:0
      </td>
      <td valign="top">ENV_POWER_DOWN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">write pulse of power down indication. Used for Internal DX simulations ONLY !</td>
   </tr>
</table><a name="1.11.19"></a><br>1.11.19 : <b>Reg : ENV_FPGA_DCU_H_EN</b> : 0x060005484<br><b>reg sep address</b> : <b> reg host address</b> : 5484<br>read the lcs states if it is CM DM SECURED or RMA <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_DCU_H_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.19.1"></a>31:0
      </td>
      <td valign="top">DCU_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Every bit in this sets of bits sets the matching dcu_en signal to a single dcu.</td>
   </tr>
</table><a name="1.11.20"></a><br>1.11.20 : <b>Reg : ENV_FPGA_VERSION</b> : 0x060005488<br><b>reg sep address</b> : <b> reg host address</b> : 5488<br>version of FPGA <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_VERSION</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.20.1"></a>31:0
      </td>
      <td valign="top">FPGA_VERSION</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Define the FPGA version.</td>
   </tr>
</table><a name="1.11.21"></a><br>1.11.21 : <b>Reg : ENV_FPGA_ROSC_WRITE</b> : 0x06000548C<br><b>reg sep address</b> : <b> reg host address</b> : 548C<br>ROSC write select<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_ROSC_WRITE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.21.1"></a>0:0
      </td>
      <td valign="top">ROSC_PSEL</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">rosc psel</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.21.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.11.22"></a><br>1.11.22 : <b>Reg : ENV_FPGA_ROSC_ADDR</b> : 0x060005490<br><b>reg sep address</b> : <b> reg host address</b> : 5490<br>ROSC ADDRRESS<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_ROSC_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.22.1"></a>7:0
      </td>
      <td valign="top">ROSC_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">rosc address</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.22.2"></a>31:8
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">24'b0</td>
   </tr>
</table><a name="1.11.23"></a><br>1.11.23 : <b>Reg : ENV_FPGA_RESET_SESSION_KEY</b> : 0x060005494<br><b>reg sep address</b> : <b> reg host address</b> : 5494<br>Reset the session key<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_RESET_SESSION_KEY</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.23.1"></a>0:0
      </td>
      <td valign="top">RESET_SESSION_KEY</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">async reset for the session key - (fpga env only)</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.23.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">31'b0</td>
   </tr>
</table><a name="1.11.24"></a><br>1.11.24 : <b>Reg : ENV_FPGA_SESSION_KEY_0</b> : 0x0600054A0<br><b>reg sep address</b> : <b> reg host address</b> : 54A0<br>Session key 0<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SESSION_KEY_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.24.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY_0</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 0</td>
   </tr>
</table><a name="1.11.25"></a><br>1.11.25 : <b>Reg : ENV_FPGA_SESSION_KEY_1</b> : 0x0600054A4<br><b>reg sep address</b> : <b> reg host address</b> : 54A4<br>Session key 0<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SESSION_KEY_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.25.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY_1</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 1</td>
   </tr>
</table><a name="1.11.26"></a><br>1.11.26 : <b>Reg : ENV_FPGA_SESSION_KEY_2</b> : 0x0600054A8<br><b>reg sep address</b> : <b> reg host address</b> : 54A8<br>Session key 1<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SESSION_KEY_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.26.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY_2</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 2</td>
   </tr>
</table><a name="1.11.27"></a><br>1.11.27 : <b>Reg : ENV_FPGA_SESSION_KEY_3</b> : 0x0600054AC<br><b>reg sep address</b> : <b> reg host address</b> : 54AC<br>Session key 1<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SESSION_KEY_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.27.1"></a>31:0
      </td>
      <td valign="top">SESSION_KEY_3</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key 3</td>
   </tr>
</table><a name="1.11.28"></a><br>1.11.28 : <b>Reg : ENV_FPGA_SESSION_KEY_VALID</b> : 0x0600054B0<br><b>reg sep address</b> : <b> reg host address</b> : 54B0<br>Session key valid<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SESSION_KEY_VALID</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.28.1"></a>0:0
      </td>
      <td valign="top">SESSION_KEY_VALID</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Session key valid</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.28.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.29"></a><br>1.11.29 : <b>Reg : ENV_FPGA_SPIDEN</b> : 0x0600054D0<br><b>reg sep address</b> : <b> reg host address</b> : 54D0<br>spiden override<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SPIDEN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.29.1"></a>0:0
      </td>
      <td valign="top">SPIDEN</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">spiden value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.29.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.30"></a><br>1.11.30 : <b>Reg : ENV_FPGA_AXIM_USER_PARAMS</b> : 0x060005600<br><b>reg sep address</b> : <b> reg host address</b> : 5600<br>axim master cache coherency configuration override<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AXIM_USER_PARAMS</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.30.1"></a>4:0
      </td>
      <td valign="top">ARUSER</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">aruser override value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.30.2"></a>9:5
      </td>
      <td valign="top">AWUSER</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">awuser override value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.30.3"></a>31:10
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.31"></a><br>1.11.31 : <b>Reg : ENV_FPGA_SECURITY_MODE_OVERRIDE</b> : 0x060005604<br><b>reg sep address</b> : <b> reg host address</b> : 5604<br>axim master prot override <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_SECURITY_MODE_OVERRIDE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.31.1"></a>0:0
      </td>
      <td valign="top">AWPROT_NS_BIT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">AWPROT override value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.31.2"></a>1:1
      </td>
      <td valign="top">AWPROT_NS_OVERRIDE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">AWPROT override enable</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.31.3"></a>2:2
      </td>
      <td valign="top">ARPROT_NS_BIT</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ARPROT override value</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.31.4"></a>3:3
      </td>
      <td valign="top">ARPROT_NS_OVERRIDE</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">ARPROT override enable</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.31.5"></a>31:4
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">rw</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.32"></a><br>1.11.32 : <b>Reg : ENV_FPGA_AO_CC_KPLT_0</b> : 0x060005620<br><b>reg sep address</b> : <b> reg host address</b> : 5620<br>returns KPLT_KEY[31:0] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KPLT_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.32.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KPLT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kplt_key[31:0]</td>
   </tr>
</table><a name="1.11.33"></a><br>1.11.33 : <b>Reg : ENV_FPGA_AO_CC_KPLT_1</b> : 0x060005624<br><b>reg sep address</b> : <b> reg host address</b> : 5624<br>returns KPLT_KEY[63:32] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KPLT_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.33.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KPLT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kplt_key[63:32]</td>
   </tr>
</table><a name="1.11.34"></a><br>1.11.34 : <b>Reg : ENV_FPGA_AO_CC_KPLT_2</b> : 0x060005628<br><b>reg sep address</b> : <b> reg host address</b> : 5628<br>returns KPLT_KEY[95:64] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KPLT_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.34.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KPLT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kplt_key[95:64]</td>
   </tr>
</table><a name="1.11.35"></a><br>1.11.35 : <b>Reg : ENV_FPGA_AO_CC_KPLT_3</b> : 0x06000562C<br><b>reg sep address</b> : <b> reg host address</b> : 562C<br>returns KPLT_KEY[127:96] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KPLT_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.35.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KPLT</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kplt_key[127:96]</td>
   </tr>
</table><a name="1.11.36"></a><br>1.11.36 : <b>Reg : ENV_FPGA_AO_CC_KCST_0</b> : 0x060005630<br><b>reg sep address</b> : <b> reg host address</b> : 5630<br>returns KCST_KEY[31:0] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KCST_0</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.36.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KCST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kcst_key[31:0]</td>
   </tr>
</table><a name="1.11.37"></a><br>1.11.37 : <b>Reg : ENV_FPGA_AO_CC_KCST_1</b> : 0x060005634<br><b>reg sep address</b> : <b> reg host address</b> : 5634<br>returns KCST_KEY[63:32] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KCST_1</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.37.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KCST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kcst_key[63:32]</td>
   </tr>
</table><a name="1.11.38"></a><br>1.11.38 : <b>Reg : ENV_FPGA_AO_CC_KCST_2</b> : 0x060005638<br><b>reg sep address</b> : <b> reg host address</b> : 5638<br>returns KCST_KEY[95:64] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KCST_2</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.38.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KCST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kcst_key[95:64]</td>
   </tr>
</table><a name="1.11.39"></a><br>1.11.39 : <b>Reg : ENV_FPGA_AO_CC_KCST_3</b> : 0x06000563C<br><b>reg sep address</b> : <b> reg host address</b> : 563C<br>returns KCST_KEY[127:96] value<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_AO_CC_KCST_3</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.39.1"></a>31:0
      </td>
      <td valign="top">AO_CC_KCST</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">kcst_key[127:96]</td>
   </tr>
</table><a name="1.11.40"></a><br>1.11.40 : <b>Reg : ENV_FPGA_APB_FIPS_ADDR</b> : 0x060005650<br><b>reg sep address</b> : <b> reg host address</b> : 5650<br>the secure host register offset for fips access match<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APB_FIPS_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.40.1"></a>11:0
      </td>
      <td valign="top">FIPS_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SECURE HOST FIPS register offset</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.40.2"></a>31:12
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.41"></a><br>1.11.41 : <b>Reg : ENV_FPGA_APB_FIPS_VAL</b> : 0x060005654<br><b>reg sep address</b> : <b> reg host address</b> : 5654<br>the secure host write data  for fips access match<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APB_FIPS_VAL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.41.1"></a>31:0
      </td>
      <td valign="top">FIPS_DATA</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SECURE HOST FIPS  data</td>
   </tr>
</table><a name="1.11.42"></a><br>1.11.42 : <b>Reg : ENV_FPGA_APB_FIPS_MASK</b> : 0x060005658<br><b>reg sep address</b> : <b> reg host address</b> : 5658<br>the secure host write data  mask for fips access match<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APB_FIPS_MASK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.42.1"></a>31:0
      </td>
      <td valign="top">FIPS_MASK</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SECURE HOST FIPS  data mask</td>
   </tr>
</table><a name="1.11.43"></a><br>1.11.43 : <b>Reg : ENV_FPGA_APB_FIPS_CNT</b> : 0x06000565C<br><b>reg sep address</b> : <b> reg host address</b> : 565C<br>the secure host fips access counter thershold <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APB_FIPS_CNT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.43.1"></a>31:0
      </td>
      <td valign="top">FIPS_CNT</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SECURE HOST FIPS  CNT</td>
   </tr>
</table><a name="1.11.44"></a><br>1.11.44 : <b>Reg : ENV_FPGA_APB_FIPS_NEW_ADDR</b> : 0x060005660<br><b>reg sep address</b> : <b> reg host address</b> : 5660<br>the secure host register offset of the new register after FIPS cnt reached<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APB_FIPS_NEW_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.44.1"></a>11:0
      </td>
      <td valign="top">FIPS_NEW_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SECURE HOST FIPS NEW register offset</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.44.2"></a>31:12
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.45"></a><br>1.11.45 : <b>Reg : ENV_FPGA_APB_FIPS_NEW_VAL</b> : 0x060005664<br><b>reg sep address</b> : <b> reg host address</b> : 5664<br>the secure host new write data after fips cnt reached<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APB_FIPS_NEW_VAL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.45.1"></a>31:0
      </td>
      <td valign="top">FIPS_DATA</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">SECURE HOST FIPS NEW  data</td>
   </tr>
</table><a name="1.11.46"></a><br>1.11.46 : <b>Reg : ENV_FPGA_APBP_FIPS_ADDR</b> : 0x060005670<br><b>reg sep address</b> : <b> reg host address</b> : 5670<br>the public host register offset for fips access match<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APBP_FIPS_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.46.1"></a>11:0
      </td>
      <td valign="top">FIPS_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PUBLIC HOST FIPS register offset</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.46.2"></a>31:12
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.47"></a><br>1.11.47 : <b>Reg : ENV_FPGA_APBP_FIPS_VAL</b> : 0x060005674<br><b>reg sep address</b> : <b> reg host address</b> : 5674<br>the public host write data  for fips access match<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APBP_FIPS_VAL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.47.1"></a>31:0
      </td>
      <td valign="top">FIPS_DATA</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PUBLIC HOST FIPS  data</td>
   </tr>
</table><a name="1.11.48"></a><br>1.11.48 : <b>Reg : ENV_FPGA_APBP_FIPS_MASK</b> : 0x060005678<br><b>reg sep address</b> : <b> reg host address</b> : 5678<br>the public host write data  mask for fips access match<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APBP_FIPS_MASK</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.48.1"></a>31:0
      </td>
      <td valign="top">FIPS_MASK</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PUBLIC HOST FIPS  data mask</td>
   </tr>
</table><a name="1.11.49"></a><br>1.11.49 : <b>Reg : ENV_FPGA_APBP_FIPS_CNT</b> : 0x06000567C<br><b>reg sep address</b> : <b> reg host address</b> : 567C<br>the public host fips access counter thershold <br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APBP_FIPS_CNT</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.49.1"></a>31:0
      </td>
      <td valign="top">FIPS_CNT</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PUBLIC HOST FIPS  CNT</td>
   </tr>
</table><a name="1.11.50"></a><br>1.11.50 : <b>Reg : ENV_FPGA_APBP_FIPS_NEW_ADDR</b> : 0x060005680<br><b>reg sep address</b> : <b> reg host address</b> : 5680<br>the public host register offset of the new register after FIPS cnt reached<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APBP_FIPS_NEW_ADDR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.50.1"></a>11:0
      </td>
      <td valign="top">FIPS_NEW_ADDR</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PUBLIC HOST FIPS NEW register offset</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.50.2"></a>31:12
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.51"></a><br>1.11.51 : <b>Reg : ENV_FPGA_APBP_FIPS_NEW_VAL</b> : 0x060005684<br><b>reg sep address</b> : <b> reg host address</b> : 5684<br>the public host new write data after fips cnt reached<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_APBP_FIPS_NEW_VAL</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.51.1"></a>31:0
      </td>
      <td valign="top">FIPS_DATA</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">PUBLIC HOST FIPS NEW  data</td>
   </tr>
</table><a name="1.11.52"></a><br>1.11.52 : <b>Reg : ENV_FPGA_CC_POWERDOWN_EN</b> : 0x060005690<br><b>reg sep address</b> : <b> reg host address</b> : 5690<br>samples the powerdown en indication from CC<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_POWERDOWN_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.52.1"></a>0:0
      </td>
      <td valign="top">CC_POWERDOWN_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">power down enable</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.52.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.53"></a><br>1.11.53 : <b>Reg : ENV_FPGA_CC_POWERDOWN_RST_EN</b> : 0x060005694<br><b>reg sep address</b> : <b> reg host address</b> : 5694<br>enable/disable CC reset after assertion of cc_powerdown_en<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_CC_POWERDOWN_RST_EN</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.53.1"></a>0:0
      </td>
      <td valign="top">CC_POWERDOWN_RST_EN</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">cc  reset enable after cc_powerdown_en</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.53.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a name="1.11.54"></a><br>1.11.54 : <b>Reg : ENV_FPGA_POWERDOWN_RST_CNTR</b> : 0x060005698<br><b>reg sep address</b> : <b> reg host address</b> : 5698<br>holds the number of reset events driven due to power down en events from CC<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_POWERDOWN_RST_CNTR</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.54.1"></a>31:0
      </td>
      <td valign="top">CC_POWERDOWN_RST_EN</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">the number cc reset events driven due to power down en</td>
   </tr>
</table><a name="1.11.55"></a><br>1.11.55 : <b>Reg : ENV_FPGA_POWERDOWN_EN_DEBUG</b> : 0x06000569C<br><b>reg sep address</b> : <b> reg host address</b> : 569C<br>simulates the assertion of cc_powerdown_en for debug<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_FPGA_POWERDOWN_EN_DEBUG</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.55.1"></a>0:0
      </td>
      <td valign="top">POWERDOWN_EN_DEBUG</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">debug signal for  cc_powerdown_en  simulation</td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.11.55.2"></a>31:1
      </td>
      <td valign="top">RESERVED</td>
      <td valign="top" align="center">wo</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">reserved</td>
   </tr>
</table><a href="#1.11">(top of block)</a><a name="1.12"></a><br><table frame="border" width="95%" BORDERCOLOR="#993333">
   <td><b><font color="#000000">1.12 : Block: ENV_PERF_RAM_BASE</font></b></td>
   <td align="right"><font color="#000000">0x060006000</font></td>
</table><br><a name="1.12.1"></a><br>1.12.1 : <b>Reg : ENV_PERF_RAM_BASE</b> : 0x060006000<br><b>reg sep address</b> : <b> reg host address</b> : 6000<br>Performance RAM base address Data read from performance RAM<br>Note: This is a special register, affected by internal logic. Test result of this register is NA.<br><table border="1" bgcolor="#EEEEEE" width="800">
   <tr>
      <td colspan="32" align="center">ENV_PERF_RAM_BASE</td>
   </tr>
   <tr></tr>
</table>
<table border="1" width="800">
   <tr>
      <td width="40"><b>bits</b></td>
      <td width="100"><b>Field name</b></td>
      <td width="20"><b>permission</b></td>
      <td width="40"><b>default</b></td>
      <td width="600"><b>Description</b></td>
   </tr>
   <tr>
      <td valign="top" align="center"><a name="1.12.1.1"></a>31:0
      </td>
      <td valign="top">PERF_RAM_D</td>
      <td valign="top" align="center">ro</td>
      <td valign="top" align="center">0x0</td>
      <td valign="top">Data read from performance RAM</td>
   </tr>
</table><a href="#1.12">(top of block)</a><br><a href="#1">(top of chip)</a><hr WIDTH="100%" SIZE="3" NOSHADE="1">***** Copyright 2012 All Rights Reserved. *****